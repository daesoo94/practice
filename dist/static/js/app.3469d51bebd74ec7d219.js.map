{"version":3,"sources":["webpack:///./src/lib/three-ui/Rectangle.js","webpack:///./src/js/player.js","webpack:///./src/lib/three-ui/ThreeUI.js","webpack:///./src/js/prop.js","webpack:///./src/lib/astar.js","webpack:///./src/js/pathfinder.js","webpack:///./src/js/map.js","webpack:///./src/js/gltfloader.js","webpack:///./src/main.js","webpack:///./src/lib/three-ui/BitmapText.js","webpack:///./src/js/transition.js","webpack:///./src/js/entityfactory.js","webpack:///./src/lib/three-ui/DisplayObject.js","webpack:///./src/js/phase.js","webpack:///./src/js/movieclip.js","webpack:///./src/js/battle.js","webpack:///./src/js/cutscene.js","webpack:///./src/js/chest.js","webpack:///./src/lib/three-ui/Sprite.js","webpack:///./src/js/game.js","webpack:///./src/js/app.js","webpack:///./src/js/updater.js","webpack:///./src/lib/three-ui/utils/browserDetection.js","webpack:///./src/js/entity.js","webpack:///./src/lib/three-ui/Text.js","webpack:///./src/lib/three-ui/anchors.js","webpack:///./src/lib/voxel.js","webpack:///./src/share/gametypes.js","webpack:///./src/js/character.js"],"names":["Rectangle","ui","color","x","y","width","height","this","DisplayObject","bind","prototype","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_create___default","draw","context","fillStyle","fillRect","Player","id","name","kind","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default","_this","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_possibleConstructorReturn___default","__proto__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default","call","Character","dirtyProperties","observeDirtyProperties","object","forEach","prop","proxyKey","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_define_property___default","set","value","shouldReDraw","get","ThreeUI","gameCanvas","renderOnQuad","displayObjects","eventListeners","click","clearRect","canvas","document","getElementById","getContext","prepareThreeJSScene","resize","anchors","addCanvasToDom","parentNode","appendChild","camera","THREE","OrthographicCamera","scene","Scene","texture","Texture","material","MeshBasicMaterial","map","transparent","planeGeo","PlaneGeometry","plane","Mesh","matrixAutoUpdate","add","length","i","render","needsUpdate","renderer","colorReplace","save","globalCompositeOperation","restore","createSprite","imagePath","displayObject","Sprite","push","createSpriteFromSheet","sheetImagePath","sheetDataPath","createRectangle","createText","text","font","Text","createBitmapText","size","BitmapText","addEventListener","type","callback","clickHandler","coords","callbackQueue","listener","shouldReceiveEvents","bounds","getBounds","isInBoundingBox","result","windowToUISpace","getBoundingClientRect","scale","left","top","moveToFront","elIdx","indexOf","splice","boundX","boundY","boundWidth","boundHeight","Prop","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default","load","geometry","BoxBufferGeometry","MeshLambertMaterial","mesh","computeBoundingBox","offset","boundingBox","min","z","isLoaded","intensity","radius","light","PointLight","position","castShadow","Entity","diagonalSuccessors","$N","$S","$E","$W","N","S","E","W","grid","rows","cols","diagonalSuccessorsFree","nothingToDo","successors","find","diagonal","start","end","f1","f2","euclidean","manhattan","AStar","f","adj","distance","j","max","current","next","limit","Math","abs","list","open","g","v","sqrt","p","reverse","Pathfinder","classCallCheck_default","ignored","initBlankGrid","blankGrid","entity","findIncomplete","gridX","gridY","path","findIncompletePath_","perfect","incomplete","applyIgnoreList_","isInt","n","Map","game","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default","loadMap","$","data","_initMap","_generateCollisionGrid","tilesize","collisions","props","_this2","_","tileIndex","pos","tileIndexToGridPosition","isOutOfBounds","tileNum","floor","GLTFLoader","manager","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_classCallCheck___default","undefined","DefaultLoadingManager","dracoLoader","crossOrigin","url","onLoad","onProgress","onError","resourcePath","scope","LoaderUtils","extractUrlBase","itemStart","_onError","e","console","error","itemError","itemEnd","loader","FileLoader","setPath","setResponseType","parse","gltf","content","extensions","decodeText","Uint8Array","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","body","headerView","DataView","BINARY_EXTENSION_HEADER_LENGTH","header","magic","slice","version","getUint32","Error","chunkView","chunkIndex","byteLength","chunkLength","chunkType","BINARY_EXTENSION_CHUNK_TYPES","JSON","contentArray","BIN","byteOffset","json","asset","extensionsUsed","extensionName","extensionsRequired","KHR_LIGHTS_PUNCTUAL","GLTFLightsExtension","KHR_MATERIALS_UNLIT","GLTFMaterialsUnlitExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","KHR_DRACO_MESH_COMPRESSION","GLTFDracoMeshCompressionExtension","MSFT_TEXTURE_DDS","GLTFTextureDDSExtension","KHR_TEXTURE_TRANSFORM","GLTFTextureTransformExtension","warn","parser","GLTFParser","scenes","cameras","animations","glTF","userData","addUnknownExtensionsToUserData","GLTFRegistry","objects","key","DDSLoader","ddsLoader","extension","lightDefs","lights","loadLight","lightIndex","lightNode","lightDef","Color","fromArray","range","DirectionalLight","target","SpotLight","spot","innerConeAngle","outerConeAngle","PI","angle","penumbra","decay","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_promise___default","a","resolve","getMaterialType","extendParams","materialParams","pending","opacity","metallicRoughness","pbrMetallicRoughness","Array","isArray","baseColorFactor","array","baseColorTexture","assignTexture","all","DRACOLoader","getDecoderModule","specularGlossinessParams","ShaderMaterial","params","pbrSpecularGlossiness","shader","ShaderLib","uniforms","UniformsUtils","clone","specularMapParsFragmentChunk","join","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","fragmentShader","replace","roughness","metalness","roughnessMap","metalnessMap","specular","setHex","glossiness","specularMap","glossinessMap","vertexShader","defines","STANDARD","diffuseFactor","diffuseTexture","emissive","glossinessFactor","specularFactor","specularGlossinessTexture","specGlossMapDef","createMaterial","fog","isGLTFSpecularGlossinessMaterial","lightMap","lightMapIntensity","aoMap","aoMapIntensity","emissiveIntensity","emissiveMap","bumpMap","bumpScale","normalMap","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","envMap","envMapIntensity","refractionRatio","derivatives","cloneMaterial","source","il","refreshUniforms","group","uvScaleMap","diffuse","copy","multiplyScalar","isWebGLRenderTarget","updateMatrix","uvTransform","matrix","flipEnvMap","isCubeTexture","reflectivity","maxMipLevel","properties","__maxMipLevel","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","GLTFCubicSplineInterpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","Interpolant","decodePrimitive","primitive","bufferViewIndex","bufferView","gltfAttributeMap","attributes","threeAttributeMap","attributeNormalizedMap","attributeTypeMap","attributeName","ATTRIBUTES","accessorDef","accessors","componentType","WEBGL_COMPONENT_TYPES","normalized","getDependency","then","decodeDracoFile","attribute","extendTexture","transform","rotation","repeat","texCoord","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_create___default","constructor","copySampleValue_","index","values","valueSize","beforeStart_","afterEnd_","interpolate_","i1","t0","t","t1","stride","stride2","stride3","td","pp","ppp","offset1","offset0","s2","s3","s0","s1","p0","m0","p1","m1","WEBGL_CONSTANTS","Number","Matrix3","Matrix4","Vector2","Vector3","Vector4","5120","Int8Array","5121","5122","Int16Array","5123","Uint16Array","5125","Uint32Array","5126","Float32Array","WEBGL_FILTERS","9728","NearestFilter","9729","LinearFilter","9984","NearestMipMapNearestFilter","9985","LinearMipMapNearestFilter","9986","NearestMipMapLinearFilter","9987","LinearMipMapLinearFilter","WEBGL_WRAPPINGS","33071","ClampToEdgeWrapping","33648","MirroredRepeatWrapping","10497","RepeatWrapping","WEBGL_TYPE_SIZES","BackSide","FrontSide","NeverDepth","LessDepth","EqualDepth","LessEqualDepth","GreaterEqualDepth","NotEqualDepth","AlwaysDepth","AddEquation","SubtractEquation","ReverseSubtractEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","POSITION","NORMAL","TANGENT","TEXCOORD_0","TEXCOORD_1","COLOR_0","WEIGHTS_0","JOINTS_0","PATH_PROPERTIES","translation","weights","INTERPOLATION","CUBICSPLINE","InterpolateSmooth","LINEAR","InterpolateLinear","STEP","InterpolateDiscrete","ALPHA_MODES","MIME_TYPE_FORMATS","image/png","RGBAFormat","image/jpeg","RGBFormat","resolveURL","test","knownExtensions","objectDef","gltfExtensions","assignExtrasToUserData","gltfDef","extras","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_typeof___default","updateMorphTargets","meshDef","morphTargetInfluences","targetNames","morphTargetDictionary","isObjectEqual","b","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_keys___default","createPrimitiveKey","primitiveDef","dracoExtension","indices","createAttributesKey","mode","attributesKey","keys","sort","cloneBufferAttribute","isInterleavedBufferAttribute","count","itemSize","getX","getY","getZ","getW","BufferAttribute","options","cache","primitiveCache","multiplePrimitivesCache","multiPassGeometryCache","textureLoader","TextureLoader","setCrossOrigin","fileLoader","addPrimitiveAttributes","assignAttributeAccessor","accessorIndex","accessor","addAttribute","gltfAttributeName","threeAttributeName","setIndex","targets","hasMorphPosition","hasMorphNormal","pendingPositionAccessors","pendingNormalAccessors","normal","morphPositions","morphNormals","positionAttribute","jl","setXYZ","normalAttribute","morphAttributes","addMorphTargets","removeAll","markDefs","getMultiDependencies","dependencies","catch","nodeDefs","nodes","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinIndex","skinLength","joints","isBone","nodeIndex","nodeLength","nodeDef","skin","isSkinnedMesh","cacheKey","dependency","loadScene","loadNode","loadMesh","loadAccessor","loadBufferView","loadBuffer","loadMaterial","loadTexture","loadSkin","loadAnimation","loadCamera","getDependencies","defs","def","types","results","bufferIndex","bufferDef","buffers","uri","reject","bufferViewDef","bufferViews","buffer","sparse","pendingBufferViews","bufferAttribute","TypedArray","elementBytes","BYTES_PER_ELEMENT","itemBytes","byteStride","ibCacheKey","ib","InterleavedBuffer","InterleavedBufferAttribute","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","setArray","setX","setY","setZ","setW","textureIndex","URL","window","webkitURL","textureDef","textures","textureExtensions","sourceURI","images","isObjectURL","blob","Blob","mimeType","createObjectURL","Loader","Handlers","revokeObjectURL","flipY","format","sampler","samplers","magFilter","minFilter","wrapS","wrapT","mapName","mapDef","materialIndex","materialType","materialDef","materials","materialExtensions","sgExtension","kmuExtension","MeshStandardMaterial","metallicFactor","roughnessFactor","metallicRoughnessTexture","doubleSided","side","DoubleSide","alphaMode","alphaTest","alphaCutoff","normalTexture","occlusionTexture","strength","emissiveFactor","emissiveTexture","encoding","sRGBEncoding","loadGeometries","primitives","originalPrimitives","isMultiPass","primitive0","targets0","isMultiPassGeometry","createDracoPrimitive","geometryPromise","cached","promise","BufferGeometry","geometries","baseGeometry","uuid","createMultiPassGeometryKey","pendingIndices","addGroup","BufferGeometryUtils","arrayKey","createArrayKeyBufferGeometry","mergeBufferGeometries","baseGeometries","meshIndex","depthTest","originalMaterials","isMultiMaterial","groups","SkinnedMesh","normalizeSkinWeights","drawMode","TriangleStripDrawMode","TriangleFanDrawMode","LineSegments","Line","LineLoop","Points","useVertexTangents","tangent","useVertexColors","useFlatShading","useSkinning","useMorphTargets","useMorphNormals","isPoints","pointsMaterial","PointsMaterial","Material","isLine","lineMaterial","LineBasicMaterial","cachedMaterial","skinning","vertexTangents","vertexColors","VertexColors","flatShading","morphTargets","uv2","uv","log","onBeforeRender","Group","cameraIndex","cameraDef","PerspectiveCamera","radToDeg","yfov","aspectRatio","znear","zfar","xmag","ymag","skinDef","skinEntry","inverseBindMatrices","animationIndex","animationDef","pendingNodes","pendingInputAccessors","pendingOutputAccessors","pendingSamplers","pendingTargets","channels","channel","node","input","parameters","output","inputAccessors","outputAccessors","tracks","inputAccessor","outputAccessor","TypedKeyframeTrack","NumberKeyframeTrack","QuaternionKeyframeTrack","VectorKeyframeTrack","targetName","interpolation","traverse","isMesh","track","AnimationUtils","arraySlice","createInterpolant","times","getValueSize","isInterpolantFactoryMethodGLTFCubicSpline","AnimationClip","Bone","instanceNum","children","o","Object3D","PropertyBinding","sanitizeNodeName","applyMatrix","quaternion","buildNodeHierachy","nodeId","parentObject","pendingJoints","jointNodes","isGroup","bones","boneInverses","jointNode","mat","Skeleton","matrixWorld","child","sceneDef","nodeIds","Object","defineProperty","__webpack_exports__","app","__WEBPACK_IMPORTED_MODULE_0__js_app__","__webpack_require__","__WEBPACK_IMPORTED_MODULE_1__js_game__","App","Game","init","setGame","event","gamePos","mouse","pageX","pageY","parseSheet","setText","dimensions","calculateDimensions","pivot","toString","characters","split","sheet","sheetData","AssetLoader","getAssetById","characterData","char","round","cData","character","drawCharacter","skipDraw","drawImage","Transition","startValue","endValue","duration","inProgress","currentTime","updateFunction","stopFunction","startTime","debug","elapsed","diff","stop","step","EntityFactory","isFunction","builders","Types","Entities","DEATHKNIGHT","CHEST","Chest","FIRE","attachPointLight","alpha","visible","anchor","smoothing","stretch","right","bottom","parent","determinePositionInCanvas","determineDimensionsInCanvas","getParentBounds","adjustPositionForAnchor","adjustPositionForPivot","parentBounds","center","getOffsetInCanvas","percValue","parseFloat","match","onClick","globalAlpha","_visible","toggle","Phase","begin_callback","end_callback","click_callback","phase","update_callback","EasingFunction","linear","w","outCubic","inCubic","inOutCubic","inOutSine","cos","outExponential","pow","outBounce","outBack","s","MoveClipPlayMode","Loop","Stop","Destory","MovieClip","_len","arguments","timelines","_key","_timelines","_frame","_playing","_stopHandler","_mode","lastFrame","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","get_iterator_default","done","tl","endFrame","err","return","_lastFrame","startFrame","tweens","handler","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","timeline","dist","weight","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","tween","from","to","easing","image","setRotation","Battle","possibleConstructorReturn_default","get_prototype_of_default","teams","playerSide","playerTeam","turn","state","BattleState","BEGIN","onBegin","enemy","createEntity","setSprite","sprites","setGridPosition","addEntity","shatters","block","fadeIn","player","rectangle","textAlign","textBaseline","attack","controlUI","onUpdate","isPlayerTurn","showPlayerUI","MAIN","isDead","END","hidePlayerUI","attackerMovie","update","deadMovie","attacker","Timeline","playAndDestroy","Cutscene","skipFrame","isFading","nextPhase","assetPath","setAssetPath","sheetImageData","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_create___default","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_typeof___default","frame","WebGLRenderer","shadowMap","enabled","setPixelRatio","devicePixelRatio","setSize","PlaneBufferGeometry","order","receiveShadow","_terrain","lookAt","OrbitControls","domElement","entities","entityGrid","Date","getTime","updater","isStopped","requestAnimationFrame","tick","username","loadSprites","loadModel","Updater","wait","setInterval","isSpritesLoaded","model","clearInterval","remove","initEntityGrid","setGridSize","hemiLight","HemisphereLight","setHSL","groundColor","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_get_iterator___default","propData","propEntity","pathfinder","onRequestPath","findPath","onStopPathing","chest","removeEntity","unregisterEntityPosition","geometry2_","computeFaceNormals","computeBoundingSphere","tex","material2_","precision","mesh__","geometry_","SphereGeometry","material_","sphere","_loop","spName","img","Image","src","onload","glb","any","sprite","registerEntityPosition","intersect","boundingbox","ts","getSize","raycaster","Raycaster","setFromCamera","intersects","intersectObjects","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","inter","getGridPosition","point","getEntityAt","setTarget","follow","go","each","isColliding","scrollTo","run","updateEntities","updateTransitions","updatePhase","forEachEntity","updateCharacter","updateEntityFading","c","moveSpeed","isMoving","movement","orientation","Orientations","LEFT","hasMoved","nextStep","RIGHT","UP","DOWN","offsetX","offsetZ","m","_pos_init","shatterTick","random","d","dt","startFadingTime","begin","isFirefox","navigator","userAgent","module","exports","setPosition","gridSize","lineHeight","lines","midLinePoint","textVerticalAlign","idx","line","lineY","fillText","mask","Int32Array","build","lo","hi","fn","dims","k","volume","vertices","faces","dimsX","dimsXY","l","h","qdimsX","qdimsXY","xd","u","q","du","dv","dimsD","dimsU","dimsV","vertex_count","mesher","buildCube","tmp","mesher2","PLAYER","nextGridX","nextGridY","newDestination","adjacentTiles","walkSpeed","idleSpeed","buildMesh","createElement","translate","getImageData","getFramePixelData","voxel","r","Geometry","Face3","verticesNeedUpdate","elementsNeedUpdate","normalsNeedUpdate","cubeData","_material","voffset","sin","request_path_callback","start_pathing_callback","stop_pathing_callback","before_step_callback","step_callback","hasmoved_callback","setOrientation","followingMode","moveTo","destination","continueTo","requestPathfindingTo","followPath","interrupted","walk","pop","updatePositionOnGrid","hasNextStep","hasChangedItsPath","updateMovement","idle"],"mappings":"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","file":"static/js/app.3469d51bebd74ec7d219.js","sourcesContent":["import DisplayObject from './DisplayObject';\n\n/**\n * Rectangle\n * @extends ThreeUI.DisplayObject\n * \n * Used internally by ThreeUI, shouldn't be used directly\n * Use ThreeUI.createRectangle instead to create rectangles\n * \n * @param {ThreeUI} ui\n * @param {string} color \n * @param {int} x \n * @param {int} y \n * @param {int} width\n * @param {int} height\n */\n\nvar Rectangle = function(ui, color, x, y, width, height) {\n\tthis.color = color;\n\n\tvar x = typeof x !== 'undefined' ? x : 0;\n\tvar y = typeof y !== 'undefined' ? y : 0;\n\tvar width = typeof width !== 'undefined' ? width : 1;\n\tvar height = typeof height !== 'undefined' ? height : 1;\n\n\t// Run DisplayObject constructor on this object\n\tDisplayObject.bind(this)(ui, x, y, width, height);\n};\n\nRectangle.prototype = Object.create(DisplayObject.prototype);\n\n/**\n * Draw this Rectangle onto the provided context\n * Used internally by DisplayObject.render\n * \n * @param {CanvasRenderingContext2D} context\n * @param {int} x\n * @param {int} y\n * @param {int} width\n * @param {int} height\n */\n\nRectangle.prototype.draw = function(context, x, y, width, height) {\n\tcontext.fillStyle = this.color;\n\tcontext.fillRect(x, y, width, height);\n};\n\n// Export Rectangle as module\nexport default Rectangle;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/three-ui/Rectangle.js","import Character from './character';\n\nexport default class Player extends Character{\n\n    constructor(id, name, kind) {\n        super(id, kind);\n\n        this.name = name;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/player.js","import anchors from './anchors.js';\nimport BitmapText from './BitmapText.js';\nimport Rectangle from './Rectangle.js';\nimport Sprite from './Sprite.js';\nimport Text from './Text.js';\n\nimport { isFirefox } from './utils/browserDetection.js';\n\n// All properties that when adjusted will force a redraw of the UI\nvar dirtyProperties = ['x','y','width','height','rotation','alpha','visible','pivot','anchor','smoothing','stretch','offset','text','scale','parent','textAlign','assetPath','color','left','right','up','down','ActiveInvoke'];\n\nvar observeDirtyProperties = function(object, ui) {\n\tdirtyProperties.forEach(function(prop) {\n\t\tvar proxyKey = '_proxied_' + prop;\n\n\t\t// Make sure initial values are set first\n\t\tobject[proxyKey] = object[prop];\n\n\t\tObject.defineProperty(object, prop, {\n\t\t\tset: function(value) {\n\t\t\t\tif (object[prop] !== value) {\n\t\t\t\t\tui.shouldReDraw = true;\n\t\t\t\t}\n\n\t\t\t\tobject[proxyKey] = value;\n\t\t\t},\n\n\t\t\tget: function() {\n\t\t\t\treturn object[proxyKey];\n\t\t\t},\n\t\t});\n\t});\n};\n\n/**\n * ThreeUI\n *\n * UI Class that renders an internal 2d canvas onto a plane\n *\n * @param {HTMLCanvasElement} gameCanvas\n * @param {int} height The pixel height of this UI -- Default: 720\n * @param {bool} renderOnQuad Render on a quad, if false, canvas will be in DOM\n */\n\nvar ThreeUI = function(gameCanvas, height, renderOnQuad) {\n\tthis.displayObjects = [];\n\tthis.eventListeners = {\n\t\tclick: [],\n\t};\n\n\tthis.clearRect = null;\n\tthis.gameCanvas = gameCanvas;\n\tthis.canvas = document.getElementById(\"foreground\");\n\tthis.context = this.canvas.getContext('2d');\n\tthis.renderOnQuad = renderOnQuad || false;\n\tthis.shouldReDraw = true;\n\n\tif (this.renderOnQuad) {\n\t\tthis.prepareThreeJSScene();\n\t} else {\n\t\t//this.addCanvasToDom();\n\t}\n\n\tthis.resize();\n};\n\n/**\n * Attach anchor types to ThreeUI\n */\n\nThreeUI.anchors = anchors;\n\nThreeUI.prototype.addCanvasToDom = function() {\n\tthis.gameCanvas.parentNode.appendChild(this.canvas);\n\n\t// Make sure the gameCanvas has position\n\t/*if (['relative', 'absolute', 'fixed'].indexOf(this.gameCanvas.style.position) === -1) {\n\t\tthis.gameCanvas.style.position = 'relative';\n\t}*/\n\n\t//this.canvas.style.position = 'absolute';\n\t//this.canvas.style.left = 0;\n\t//this.canvas.style.top = 0;\n\t/*this.canvas.style.zIndex = 1;\n\tthis.canvas.style.transformOrigin = '0% 0%';\n\tthis.canvas.style.perspective = '1000px'; // Hardware acceleration!*/\n};\n\n/**\n * Internal method that does all preparations related to ThreeJS, creating the scene, camera, geometry etc.\n */\n\nThreeUI.prototype.prepareThreeJSScene = function() {\n\tthis.camera = new THREE.OrthographicCamera(\n\t\t-this.canvas.width / 2,\n\t\tthis.canvas.width / 2,\n\t\tthis.canvas.height / 2,\n\t\t-this.canvas.height / 2,\n\t\t0, 30\n\t);\n\n\tthis.scene = new THREE.Scene();\n\n\tthis.texture = new THREE.Texture(this.canvas);\n\n\tvar material = new THREE.MeshBasicMaterial({ map: this.texture });\n\tmaterial.transparent = true;\n\n\tvar planeGeo = new THREE.PlaneGeometry(this.canvas.width, this.canvas.height);\n\tthis.plane = new THREE.Mesh(planeGeo, material);\n\tthis.plane.matrixAutoUpdate = false;\n\n\tthis.scene.add(this.plane);\n};\n\n/**\n * Recalculate UI dimensions\n */\n\nThreeUI.prototype.resize = function() {\n\t//var gameCanvasAspect = this.gameCanvas.width / this.gameCanvas.height;\n\t//this.width = this.height * gameCanvasAspect;\n\n\tthis.width = 800;\n\tthis.height = 400;\n\n\t//this.canvas.width = this.width\n\t//this.canvas.height = this.height;\n\n\n\t//var containerWidth = this.gameCanvas.parentNode.getBoundingClientRect().width;\n\t//this.canvas.style.transform = 'scale(' + (containerWidth / this.width) + ')';\n\n\tthis.shouldReDraw = true;\n};\n\n/**\n * Draw the UI\n */\n\nThreeUI.prototype.draw = function() {\n\tif (!this.shouldReDraw) return;\n\n\t// Reset canvas\n\tif (this.clearRect) {\n\t\t//this.context.clearRect(this.clearRect.x, this.clearRect.y, this.clearRect.width, this.clearRect.height);\n\t} else {\n\t\tthis.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\t}\n\n\tvar self = this;\n\tvar length = this.displayObjects.length;\n\tfor (var i = 0;i < length;i++) {\n\t\t// 앵커와 위치를 조절한다\n\t\tthis.displayObjects[i].render(self.context);\n\t}\n\n\t// Make sure the texture gets re-drawn\n\tif (this.renderOnQuad) {\n\t\tthis.texture.needsUpdate = true;\n\t}\n\n\tthis.shouldReDraw = false;\n};\n\n/**\n * Render the UI with the provided renderer\n *\n * @param {THREE.WebGLRenderer} renderer\n */\n\nThreeUI.prototype.render = function(renderer) {\n\tthis.draw();\n\n\tif (this.renderOnQuad) {\n\t\trenderer.render(this.scene, this.camera);\n\t}\n\n\tif (this.colorReplace) {\n\t\tthis.context.save();\n\n\t\tthis.context.fillStyle = this.colorReplace\n\t\tthis.context.globalCompositeOperation = 'source-atop';\n\t\tthis.context.fillRect(0, 0, this.canvas.width, this.canvas.height);\n\n\t\tthis.context.restore();\n\t}\n};\n\n/**\n * Create a new Sprite\n *\n * @param {string} imagePath\n * @param {int} x\n * @param {int} y\n * @param {int} width\n * @param {int} height\n *\n * @return {Sprite}\n */\n\nThreeUI.prototype.createSprite = function(imagePath, x, y, width, height) {\n\tvar displayObject = new Sprite(this, imagePath, x, y, width, height);\n\tthis.displayObjects.push(displayObject);\n\tobserveDirtyProperties(displayObject, this);\n\treturn displayObject;\n};\n\n/**\n * Create a new Sprite from a sheet\n *\n * @param {string} imagePath\n * @param {string} sheetImagePath\n * @param {string} sheetDataPath\n * @param {int} x\n * @param {int} y\n * @param {int} width\n * @param {int} height\n *\n * @return {Sprite}\n */\n\nThreeUI.prototype.createSpriteFromSheet = function(imagePath, sheetImagePath, sheetDataPath, x, y, width, height) {\n\tvar displayObject = new Sprite(this, imagePath, x, y, width, height, sheetImagePath, sheetDataPath);\n\tthis.displayObjects.push(displayObject);\n\tobserveDirtyProperties(displayObject, this);\n\treturn displayObject;\n};\n\n/**\n * Create a new Rectangle\n *\n * @param {string} color\n * @param {int} x\n * @param {int} y\n * @param {int} width\n * @param {int} height\n *\n * @return {Rectangle}\n */\n\nThreeUI.prototype.createRectangle = function(color, x, y, width, height) {\n\tvar displayObject = new Rectangle(this, color, x, y, width, height);\n\tthis.displayObjects.push(displayObject);\n\tobserveDirtyProperties(displayObject, this);\n\treturn displayObject;\n};\n\n/**\n * Create a new Text\n *\n * @param {string} text\n * @param {string} font\n * @param {string} color\n * @param {int} x\n * @param {int} y\n *\n * @return {Text}\n */\n\nThreeUI.prototype.createText = function(text, font, color, x, y) {\n\tvar displayObject = new Text(this, text, font, color, x, y);\n\tthis.displayObjects.push(displayObject);\n\tobserveDirtyProperties(displayObject, this);\n\treturn displayObject;\n};\n\n/**\n * Create a new BitmapText\n *\n * @param {string} text\n * @param {string} font\n * @param {string} color\n * @param {int} x\n * @param {int} y\n *\n * @return {BitmapText}\n */\n\nThreeUI.prototype.createBitmapText = function(text, size, x, y, sheetImagePath, sheetDataPath) {\n\tvar displayObject = new BitmapText(this, text, size, x, y, sheetImagePath, sheetDataPath);\n\tthis.displayObjects.push(displayObject);\n\tobserveDirtyProperties(displayObject, this);\n\treturn displayObject;\n};\n\n/**\n * Add a new event listener, called by ThreeUI.DisplayObject\n * Shouldn't be used directly\n *\n * @param {string} type\n * @param {Function} callback This callback is called when the event is triggered, and is passed the DisplayObject as a first argument\n * @param {ThreeUI.DisplayObject} displayObject\n */\n\nThreeUI.prototype.addEventListener = function(type, callback, displayObject) {\n\tthis.eventListeners[type].push({\n\t\tcallback: callback,\n\t\tdisplayObject: displayObject\n\t});\n};\n\n/**\n * Used internally to determine which registered click event listeners should be called upon click\n *\n * @param {MouseEvent} event\n */\n\nThreeUI.prototype.clickHandler = function(x, y) {\n\tconst coords = { x: x, y: y };\n\n\t//coords = this.windowToUISpace(coords.x, coords.y);\n\n\tvar callbackQueue = [];\n\tthis.eventListeners.click.forEach(function(listener) {\n\t\tvar displayObject = listener.displayObject;\n\t\tif (!displayObject.shouldReceiveEvents()) return;\n\n\t\tvar bounds = displayObject.getBounds();\n\n\t\t// 완전히 잘못만들었다...\n\t\t// 제일 자식노드를 찾아서 클릭시켜야 하는데..\n\t\t// 이거 만든 녀석은 바보냐;\n\t\tif (ThreeUI.isInBoundingBox(coords.x, coords.y, bounds.x, bounds.y, bounds.width, bounds.height)) {\n\t\t\t// Put listeners in a queue first, so state changes do not impact checking other click handlers\n\t\t\tcallbackQueue.push(listener.callback);\n\t\t}\n\t});\n\n\tlet result = false;\n\n\tcallbackQueue.forEach(function(callback){\n\t\tcallback();\n\t\tresult = true;\n\t});\n\n\treturn result;\n};\n\n/**\n * Helper method that converts a point to UI space from window space\n *\n * @param {int} x\n * @param {int} y\n *\n * @return {Object} x,y coordinates\n */\n\nThreeUI.prototype.windowToUISpace = function(x, y) {\n\tvar bounds = this.gameCanvas.getBoundingClientRect();\n\tvar scale = this.height / bounds.height;\n\n\treturn {\n\t\tx: (x - bounds.left) * scale,\n\t\ty: (y - bounds.top) * scale,\n\t};\n}\n\n/**\n * Moves a ui element to the back of the displayobject queue\n * which causes it to render above other objects\n *\n * @param {ThreeUI.DisplayObject} displayObject\n */\nThreeUI.prototype.moveToFront = function(displayObject) {\n\tvar elIdx = this.displayObjects.indexOf(displayObject);\n\n\tif (elIdx > -1) {\n\t\tthis.displayObjects.splice(elIdx, 1);\n\t}\n\n\tthis.displayObjects.push(displayObject);\n};\n\n/**\n * Helper method used to determine whether a point is inside of a given bounding box\n *\n * @param {int} x\n * @param {int} y\n * @param {int} boundX\n * @param {int} boundY\n * @param {int} boundWidth\n * @param {int} boundHeight\n *\n * @return {bool}\n */\n\nThreeUI.isInBoundingBox = function(x, y, boundX, boundY, boundWidth, boundHeight) {\n\treturn (\n\t\tx >= boundX &&\n\t\tx <= boundX + boundWidth &&\n\t\ty >= boundY &&\n\t\ty <= boundY + boundHeight\n\t);\n};\n\n// Export ThreeUI as module\nexport default ThreeUI;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/three-ui/ThreeUI.js","import Entity from './entity';\r\n\r\nexport default class Prop extends Entity {\r\n    constructor(id, kind) {\r\n        super(id, kind);\r\n        \r\n        this.load();\r\n    }\r\n\r\n    load() {\r\n        // 공통적으로 box 메쉬를 만들어서 사용한다. 일단은 메쉬가 따로 없으므로 ...\r\n        // TODO :load() 데이터를 외부의 데이터를 읽도록 해야한다\r\n        const geometry = new THREE.BoxBufferGeometry( 8, 8, 8 );\r\n        const material\t= new THREE.MeshLambertMaterial({ color: 0xffffff });\r\n        const mesh\t= new THREE.Mesh( geometry, material );\r\n\r\n        geometry.computeBoundingBox();\r\n\r\n        this.mesh = mesh;\r\n        this.offset = {\r\n            x: 0,\r\n            y: -geometry.boundingBox.min.y,\r\n            z: 0,\r\n        }\r\n\r\n        this.isLoaded = true;\r\n    }\r\n\r\n    attachPointLight(color, intensity, radius) {\r\n        var light = new THREE.PointLight(color, intensity, radius);\r\n        light.position.set(0, 10, 0);\r\n        light.castShadow = true;\r\n        this.mesh.add( light );\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/prop.js","/**\r\n * A* (A-Star) algorithm for a path finder\r\n * @author  Andrea Giammarchi\r\n * @license Mit Style License\r\n */\r\n\r\nfunction diagonalSuccessors($N, $S, $E, $W, N, S, E, W, grid, rows, cols, result, i) {\r\n    if($N) {\r\n        $E && !grid[N][E] && (result[i++] = {x:E, y:N});\r\n        $W && !grid[N][W] && (result[i++] = {x:W, y:N});\r\n    }\r\n    if($S){\r\n        $E && !grid[S][E] && (result[i++] = {x:E, y:S});\r\n        $W && !grid[S][W] && (result[i++] = {x:W, y:S});\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction diagonalSuccessorsFree($N, $S, $E, $W, N, S, E, W, grid, rows, cols, result, i) {\r\n    $N = N > -1;\r\n    $S = S < rows;\r\n    $E = E < cols;\r\n    $W = W > -1;\r\n    if($E) {\r\n        $N && !grid[N][E] && (result[i++] = {x:E, y:N});\r\n        $S && !grid[S][E] && (result[i++] = {x:E, y:S});\r\n    }\r\n    if($W) {\r\n        $N && !grid[N][W] && (result[i++] = {x:W, y:N});\r\n        $S && !grid[S][W] && (result[i++] = {x:W, y:S});\r\n    }\r\n    return result;\r\n}\r\n\r\nfunction nothingToDo($N, $S, $E, $W, N, S, E, W, grid, rows, cols, result, i) {\r\n    return result;\r\n}\r\n\r\nfunction successors(find, x, y, grid, rows, cols){\r\n    var\r\n        N = y - 1,\r\n        S = y + 1,\r\n        E = x + 1,\r\n        W = x - 1,\r\n        $N = N > -1 && !grid[N][x],\r\n        $S = S < rows && !grid[S][x],\r\n        $E = E < cols && !grid[y][E],\r\n        $W = W > -1 && !grid[y][W],\r\n        result = [],\r\n        i = 0\r\n    ;\r\n    $N && (result[i++] = {x:x, y:N});\r\n    $E && (result[i++] = {x:E, y:y});\r\n    $S && (result[i++] = {x:x, y:S});\r\n    $W && (result[i++] = {x:W, y:y});\r\n    return find($N, $S, $E, $W, N, S, E, W, grid, rows, cols, result, i);\r\n}\r\n\r\nfunction diagonal(start, end, f1, f2) {\r\n    return f2(f1(start.x - end.x), f1(start.y - end.y));\r\n}\r\n\r\nfunction euclidean(start, end, f1, f2) {\r\n    var\r\n        x = start.x - end.x,\r\n        y = start.y - end.y\r\n    ;\r\n    return f2(x * x + y * y);\r\n}\r\n\r\nfunction manhattan(start, end, f1, f2) {\r\n    return f1(start.x - end.x) + f1(start.y - end.y);\r\n}\r\n\r\nfunction AStar(grid, start, end, f) {\r\n    var\r\n        cols = grid[0].length,\r\n        rows = grid.length,\r\n        limit = cols * rows,\r\n        f1 = Math.abs,\r\n        f2 = Math.max,\r\n        list = {},\r\n        result = [],\r\n        open = [{x:start[0], y:start[1], f:0, g:0, v:start[0]+start[1]*cols}],\r\n        length = 1,\r\n        adj, distance, find, i, j, max, min, current, next\r\n    ;\r\n    end = {x:end[0], y:end[1], v:end[0]+end[1]*cols};\r\n    switch (f) {\r\n        case \"Diagonal\":\r\n            find = diagonalSuccessors;\r\n        case \"DiagonalFree\":\r\n            distance = diagonal;\r\n            break;\r\n        case \"Euclidean\":\r\n            find = diagonalSuccessors;\r\n        case \"EuclideanFree\":\r\n            f2 = Math.sqrt;\r\n            distance = euclidean;\r\n            break;\r\n        default:\r\n            distance = manhattan;\r\n            find = nothingToDo;\r\n            break;\r\n    }\r\n    find || (find = diagonalSuccessorsFree);\r\n    do {\r\n        max = limit;\r\n        min = 0;\r\n        for(i = 0; i < length; ++i) {\r\n            if((f = open[i].f) < max) {\r\n                max = f;\r\n                min = i;\r\n            }\r\n        };\r\n        current = open.splice(min, 1)[0];\r\n        if (current.v != end.v) {\r\n            --length;\r\n            next = successors(find, current.x, current.y, grid, rows, cols);\r\n            for(i = 0, j = next.length; i < j; ++i){\r\n                (adj = next[i]).p = current;\r\n                adj.f = adj.g = 0;\r\n                adj.v = adj.x + adj.y * cols;\r\n                if(!(adj.v in list)){\r\n                    adj.f = (adj.g = current.g + distance(adj, current, f1, f2)) + distance(adj, end, f1, f2);\r\n                    open[length++] = adj;\r\n                    list[adj.v] = 1;\r\n                }\r\n            }\r\n        } else {\r\n            i = length = 0;\r\n            do {\r\n                result[i++] = [current.x, current.y];\r\n            } while (current = current.p);\r\n            result.reverse();\r\n        }\r\n    } while (length);\r\n    return result;\r\n}\r\n\r\nexport default AStar;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/astar.js","import AStar from '../lib/astar';\r\n\r\nexport default class Pathfinder {\r\n    constructor(width, height) {\r\n        this.width = width;\r\n        this.height = height;\r\n        this.grid = null;\r\n        this.ignored = [];\r\n\r\n        this.initBlankGrid();\r\n    }\r\n\r\n    initBlankGrid() {\r\n        this.blankGrid = [];\r\n        for(let i=0; i < this.height; i += 1) {\r\n            this.blankGrid[i] = [];\r\n            for(let j=0; j < this.width; j += 1) {\r\n                this.blankGrid[i][j] = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    findPath(grid, entity, x, y, findIncomplete) {\r\n        const start = [entity.gridX, entity.gridY];\r\n        const end = [x, y];\r\n\r\n        this.grid = grid;\r\n        let path = AStar(this.grid, start, end);\r\n    \r\n        if(path.length === 0 && findIncomplete === true) {\r\n            // If no path was found, try and find an incomplete one\r\n            // to at least get closer to destination.\r\n            path = this.findIncompletePath_(start, end);\r\n        }\r\n    \r\n        return path;\r\n    }\r\n\r\n    /**\r\n     * Finds a path which leads the closest possible to an unreachable x, y position.\r\n     *\r\n     * Whenever A* returns an empty path, it means that the destination tile is unreachable.\r\n     * We would like the entities to move the closest possible to it though, instead of\r\n     * staying where they are without moving at all. That's why we have this function which\r\n     * returns an incomplete path to the chosen destination.\r\n     *\r\n     * @private\r\n     * @returns {Array} The incomplete path towards the end position\r\n     */\r\n    findIncompletePath_(start, end) {\r\n        let perfect, x, y,\r\n            incomplete = [];\r\n\r\n        perfect = AStar(this.blankGrid, start, end);\r\n    \r\n        for(let i=perfect.length-1; i > 0; i -= 1) {\r\n            x = perfect[i][0];\r\n            y = perfect[i][1];\r\n        \r\n            if(this.grid[y][x] === 0) {\r\n                incomplete = AStar(this.grid, start, [x, y]);\r\n                break;\r\n            }\r\n        }\r\n        return incomplete;\r\n    }\r\n\r\n    /**\r\n     * Removes colliding tiles corresponding to the given entity's position in the pathing grid.\r\n     */\r\n    ignoreEntity(entity) {\r\n        if(entity) {\r\n            this.ignored.push(entity);\r\n        }\r\n    }\r\n\r\n    clearIgnoreList() {\r\n        this.applyIgnoreList_(false);\r\n        this.ignored = [];\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/pathfinder.js","import $ from \"jquery\";\r\nimport * as _ from 'underscore';\r\n\r\nconst isInt = function(n) {\r\n    return (n % 1) === 0;\r\n};\r\n\r\nexport default class Map {\r\n    constructor(game) {\r\n        this.loadMap();\r\n    }\r\n\r\n    loadMap() {\r\n        const filepath = \"static/maps.json\";\r\n        $.get(filepath, (data) => {\r\n            this._initMap(data);\r\n            this._generateCollisionGrid();\r\n            this.isLoaded = true;\r\n        }, 'json');\r\n    }\r\n\r\n    _initMap(map) {\r\n        this.width = map.width;\r\n        this.height = map.height;\r\n        this.data = map.data;\r\n        this.tilesize = map.tilesize;\r\n        this.collisions = map.collisions;\r\n        this.props = map.props;\r\n    }\r\n\r\n    _generateCollisionGrid() {\r\n        this.grid = [];\r\n        for(let\ti = 0; i < this.height; i++) {\r\n            this.grid[i] = [];\r\n            for(let j = 0; j < this.width; j++) {\r\n                this.grid[i][j] = 0;\r\n            }\r\n        }\r\n\r\n        _.each(this.collisions, (tileIndex) => {\r\n            const pos = this.tileIndexToGridPosition(tileIndex+1);\r\n            this.grid[pos.y][pos.x] = 1;\r\n        });\r\n    }\r\n\r\n    isColliding(x, y) { \r\n        if(this.isOutOfBounds(x, y) || !this.grid) {\r\n            return false;\r\n        }\r\n        return (this.grid[y][x] === 1);\r\n    }\r\n\r\n    isOutOfBounds(x, y) {\r\n        return isInt(x) && isInt(y) && (x < 0 || x >= this.width || y < 0 || y >= this.height);\r\n    }\r\n\r\n    tileIndexToGridPosition(tileNum) {\r\n        // 타일은 0 번은 없는 것이기 때문에 1번부터 시작한다\r\n        tileNum -= 1;\r\n        const x = tileNum % this.width;\r\n        const y = Math.floor(tileNum / this.width);\r\n\r\n        return { x: x, y: y };\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/map.js","export default class GLTFLoader{\r\n\tconstructor(manager) {\r\n        this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\t\tthis.dracoLoader = null;\r\n        this.crossOrigin = 'anonymous';\r\n    }\r\n\r\n    load( url, onLoad, onProgress, onError ) {\r\n\r\n        var scope = this;\r\n\r\n        var resourcePath;\r\n\r\n        if ( this.resourcePath !== undefined ) {\r\n\r\n            resourcePath = this.resourcePath;\r\n\r\n        } else if ( this.path !== undefined ) {\r\n\r\n            resourcePath = this.path;\r\n\r\n        } else {\r\n\r\n            resourcePath = THREE.LoaderUtils.extractUrlBase( url );\r\n\r\n        }\r\n\r\n        // Tells the LoadingManager to track an extra item, which resolves after\r\n        // the model is fully loaded. This means the count of items loaded will\r\n        // be incorrect, but ensures manager.onLoad() does not fire early.\r\n        scope.manager.itemStart( url );\r\n\r\n        var _onError = function ( e ) {\r\n\r\n            if ( onError ) {\r\n\r\n                onError( e );\r\n\r\n            } else {\r\n\r\n                console.error( e );\r\n\r\n            }\r\n\r\n            scope.manager.itemError( url );\r\n            scope.manager.itemEnd( url );\r\n\r\n        };\r\n\r\n        var loader = new THREE.FileLoader( scope.manager );\r\n\r\n        loader.setPath( this.path );\r\n        loader.setResponseType( 'arraybuffer' );\r\n\r\n        loader.load( url, function ( data ) {\r\n\r\n            try {\r\n\r\n                scope.parse( data, resourcePath, function ( gltf ) {\r\n\r\n                    onLoad( gltf );\r\n\r\n                    scope.manager.itemEnd( url );\r\n\r\n                }, _onError );\r\n\r\n            } catch ( e ) {\r\n\r\n                _onError( e );\r\n\r\n            }\r\n\r\n        }, onProgress, _onError );\r\n\r\n    }\r\n\r\n    setCrossOrigin ( value ) {\r\n\r\n        this.crossOrigin = value;\r\n        return this;\r\n\r\n    }\r\n\r\n    setPath ( value ) {\r\n\r\n        this.path = value;\r\n        return this;\r\n\r\n    }\r\n\r\n    setResourcePath ( value ) {\r\n\r\n        this.resourcePath = value;\r\n        return this;\r\n\r\n    }\r\n\r\n    setDRACOLoader ( dracoLoader ) {\r\n\r\n        this.dracoLoader = dracoLoader;\r\n        return this;\r\n\r\n    }\r\n\r\n    parse ( data, path, onLoad, onError ) {\r\n\r\n        var content;\r\n        var extensions = {};\r\n\r\n        if ( typeof data === 'string' ) {\r\n\r\n            content = data;\r\n\r\n        } else {\r\n\r\n            var magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\r\n\r\n            if ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\r\n\r\n                try {\r\n\r\n                    extensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\r\n\r\n                } catch ( error ) {\r\n\r\n                    if ( onError ) onError( error );\r\n                    return;\r\n\r\n                }\r\n\r\n                content = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\r\n\r\n            } else {\r\n\r\n                content = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var json = JSON.parse( content );\r\n\r\n        if ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\r\n\r\n            if ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\r\n            return;\r\n\r\n        }\r\n\r\n        if ( json.extensionsUsed ) {\r\n\r\n            for ( var i = 0; i < json.extensionsUsed.length; ++ i ) {\r\n\r\n                var extensionName = json.extensionsUsed[ i ];\r\n                var extensionsRequired = json.extensionsRequired || [];\r\n\r\n                switch ( extensionName ) {\r\n\r\n                    case EXTENSIONS.KHR_LIGHTS_PUNCTUAL:\r\n                        extensions[ extensionName ] = new GLTFLightsExtension( json );\r\n                        break;\r\n\r\n                    case EXTENSIONS.KHR_MATERIALS_UNLIT:\r\n                        extensions[ extensionName ] = new GLTFMaterialsUnlitExtension( json );\r\n                        break;\r\n\r\n                    case EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS:\r\n                        extensions[ extensionName ] = new GLTFMaterialsPbrSpecularGlossinessExtension( json );\r\n                        break;\r\n\r\n                    case EXTENSIONS.KHR_DRACO_MESH_COMPRESSION:\r\n                        extensions[ extensionName ] = new GLTFDracoMeshCompressionExtension( json, this.dracoLoader );\r\n                        break;\r\n\r\n                    case EXTENSIONS.MSFT_TEXTURE_DDS:\r\n                        extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] = new GLTFTextureDDSExtension();\r\n                        break;\r\n\r\n                    case EXTENSIONS.KHR_TEXTURE_TRANSFORM:\r\n                        extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] = new GLTFTextureTransformExtension( json );\r\n                        break;\r\n\r\n                    default:\r\n\r\n                        if ( extensionsRequired.indexOf( extensionName ) >= 0 ) {\r\n\r\n                            console.warn( 'THREE.GLTFLoader: Unknown extension \"' + extensionName + '\".' );\r\n\r\n                        }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var parser = new GLTFParser( json, extensions, {\r\n\r\n            path: path || this.resourcePath || '',\r\n            crossOrigin: this.crossOrigin,\r\n            manager: this.manager\r\n\r\n        } );\r\n\r\n        parser.parse( function ( scene, scenes, cameras, animations, json ) {\r\n\r\n            var glTF = {\r\n                scene: scene,\r\n                scenes: scenes,\r\n                cameras: cameras,\r\n                animations: animations,\r\n                asset: json.asset,\r\n                parser: parser,\r\n                userData: {}\r\n            };\r\n\r\n            addUnknownExtensionsToUserData( extensions, glTF, json );\r\n\r\n            onLoad( glTF );\r\n\r\n        }, onError );\r\n\r\n    }\r\n\r\n};\r\n\r\n/* GLTFREGISTRY */\r\n\r\nclass GLTFRegistry {\r\n    constructor() {\r\n        this.objects = {};\r\n    }\r\n\r\n    get ( key ) {\r\n\r\n        return this.objects[ key ];\r\n\r\n    }\r\n\r\n    add ( key, object ) {\r\n\r\n        this.objects[ key ] = object;\r\n\r\n    }\r\n\r\n    remove ( key ) {\r\n\r\n        delete this.objects[ key ];\r\n\r\n    }\r\n\r\n    removeAll () {\r\n\r\n        this.objects = {};\r\n\r\n    }\r\n}\r\n\r\n/*********************************/\r\n/********** EXTENSIONS ***********/\r\n/*********************************/\r\n\r\nvar EXTENSIONS = {\r\n    KHR_BINARY_GLTF: 'KHR_binary_glTF',\r\n    KHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\r\n    KHR_LIGHTS_PUNCTUAL: 'KHR_lights_punctual',\r\n    KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\r\n    KHR_MATERIALS_UNLIT: 'KHR_materials_unlit',\r\n    KHR_TEXTURE_TRANSFORM: 'KHR_texture_transform',\r\n    MSFT_TEXTURE_DDS: 'MSFT_texture_dds'\r\n};\r\n\r\n/**\r\n * DDS Texture Extension\r\n *\r\n * Specification:\r\n * https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Vendor/MSFT_texture_dds\r\n *\r\n */\r\nfunction GLTFTextureDDSExtension() {\r\n\r\n    if ( ! THREE.DDSLoader ) {\r\n\r\n        throw new Error( 'THREE.GLTFLoader: Attempting to load .dds texture without importing THREE.DDSLoader' );\r\n\r\n    }\r\n\r\n    this.name = EXTENSIONS.MSFT_TEXTURE_DDS;\r\n    this.ddsLoader = new THREE.DDSLoader();\r\n\r\n}\r\n\r\n/**\r\n * Lights Extension\r\n *\r\n * Specification: PENDING\r\n */\r\nfunction GLTFLightsExtension( json ) {\r\n\r\n    this.name = EXTENSIONS.KHR_LIGHTS_PUNCTUAL;\r\n\r\n    var extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ] ) || {};\r\n    this.lightDefs = extension.lights || [];\r\n\r\n}\r\n\r\nGLTFLightsExtension.prototype.loadLight = function ( lightIndex ) {\r\n\r\n    var lightDef = this.lightDefs[ lightIndex ];\r\n    var lightNode;\r\n\r\n    var color = new THREE.Color( 0xffffff );\r\n    if ( lightDef.color !== undefined ) color.fromArray( lightDef.color );\r\n\r\n    var range = lightDef.range !== undefined ? lightDef.range : 0;\r\n\r\n    switch ( lightDef.type ) {\r\n\r\n        case 'directional':\r\n            lightNode = new THREE.DirectionalLight( color );\r\n            lightNode.target.position.set( 0, 0, - 1 );\r\n            lightNode.add( lightNode.target );\r\n            break;\r\n\r\n        case 'point':\r\n            lightNode = new THREE.PointLight( color );\r\n            lightNode.distance = range;\r\n            break;\r\n\r\n        case 'spot':\r\n            lightNode = new THREE.SpotLight( color );\r\n            lightNode.distance = range;\r\n            // Handle spotlight properties.\r\n            lightDef.spot = lightDef.spot || {};\r\n            lightDef.spot.innerConeAngle = lightDef.spot.innerConeAngle !== undefined ? lightDef.spot.innerConeAngle : 0;\r\n            lightDef.spot.outerConeAngle = lightDef.spot.outerConeAngle !== undefined ? lightDef.spot.outerConeAngle : Math.PI / 4.0;\r\n            lightNode.angle = lightDef.spot.outerConeAngle;\r\n            lightNode.penumbra = 1.0 - lightDef.spot.innerConeAngle / lightDef.spot.outerConeAngle;\r\n            lightNode.target.position.set( 0, 0, - 1 );\r\n            lightNode.add( lightNode.target );\r\n            break;\r\n\r\n        default:\r\n            throw new Error( 'THREE.GLTFLoader: Unexpected light type, \"' + lightDef.type + '\".' );\r\n\r\n    }\r\n\r\n    // Some lights (e.g. spot) default to a position other than the origin. Reset the position\r\n    // here, because node-level parsing will only override position if explicitly specified.\r\n    lightNode.position.set( 0, 0, 0 );\r\n\r\n    lightNode.decay = 2;\r\n\r\n    if ( lightDef.intensity !== undefined ) lightNode.intensity = lightDef.intensity;\r\n\r\n    lightNode.name = lightDef.name || ( 'light_' + lightIndex );\r\n\r\n    return Promise.resolve( lightNode );\r\n\r\n};\r\n\r\n/**\r\n * Unlit Materials Extension (pending)\r\n *\r\n * PR: https://github.com/KhronosGroup/glTF/pull/1163\r\n */\r\nfunction GLTFMaterialsUnlitExtension( json ) {\r\n\r\n    this.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\r\n\r\n}\r\n\r\nGLTFMaterialsUnlitExtension.prototype.getMaterialType = function ( material ) {\r\n\r\n    return THREE.MeshBasicMaterial;\r\n\r\n};\r\n\r\nGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, material, parser ) {\r\n\r\n    var pending = [];\r\n\r\n    materialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n    materialParams.opacity = 1.0;\r\n\r\n    var metallicRoughness = material.pbrMetallicRoughness;\r\n\r\n    if ( metallicRoughness ) {\r\n\r\n        if ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\r\n\r\n            var array = metallicRoughness.baseColorFactor;\r\n\r\n            materialParams.color.fromArray( array );\r\n            materialParams.opacity = array[ 3 ];\r\n\r\n        }\r\n\r\n        if ( metallicRoughness.baseColorTexture !== undefined ) {\r\n\r\n            pending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return Promise.all( pending );\r\n\r\n};\r\n\r\n/* BINARY EXTENSION */\r\n\r\nvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\r\nvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\r\nvar BINARY_EXTENSION_HEADER_LENGTH = 12;\r\nvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\r\n\r\nfunction GLTFBinaryExtension( data ) {\r\n\r\n    this.name = EXTENSIONS.KHR_BINARY_GLTF;\r\n    this.content = null;\r\n    this.body = null;\r\n\r\n    var headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\r\n\r\n    this.header = {\r\n        magic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\r\n        version: headerView.getUint32( 4, true ),\r\n        length: headerView.getUint32( 8, true )\r\n    };\r\n\r\n    if ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\r\n\r\n        throw new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\r\n\r\n    } else if ( this.header.version < 2.0 ) {\r\n\r\n        throw new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\r\n\r\n    }\r\n\r\n    var chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\r\n    var chunkIndex = 0;\r\n\r\n    while ( chunkIndex < chunkView.byteLength ) {\r\n\r\n        var chunkLength = chunkView.getUint32( chunkIndex, true );\r\n        chunkIndex += 4;\r\n\r\n        var chunkType = chunkView.getUint32( chunkIndex, true );\r\n        chunkIndex += 4;\r\n\r\n        if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\r\n\r\n            var contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\r\n            this.content = THREE.LoaderUtils.decodeText( contentArray );\r\n\r\n        } else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\r\n\r\n            var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\r\n            this.body = data.slice( byteOffset, byteOffset + chunkLength );\r\n\r\n        }\r\n\r\n        // Clients must ignore chunks with unknown types.\r\n\r\n        chunkIndex += chunkLength;\r\n\r\n    }\r\n\r\n    if ( this.content === null ) {\r\n\r\n        throw new Error( 'THREE.GLTFLoader: JSON content not found.' );\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * DRACO Mesh Compression Extension\r\n *\r\n * Specification: https://github.com/KhronosGroup/glTF/pull/874\r\n */\r\nfunction GLTFDracoMeshCompressionExtension( json, dracoLoader ) {\r\n\r\n    if ( ! dracoLoader ) {\r\n\r\n        throw new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\r\n\r\n    }\r\n\r\n    this.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\r\n    this.json = json;\r\n    this.dracoLoader = dracoLoader;\r\n    THREE.DRACOLoader.getDecoderModule();\r\n\r\n}\r\n\r\nGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\r\n\r\n    var json = this.json;\r\n    var dracoLoader = this.dracoLoader;\r\n    var bufferViewIndex = primitive.extensions[ this.name ].bufferView;\r\n    var gltfAttributeMap = primitive.extensions[ this.name ].attributes;\r\n    var threeAttributeMap = {};\r\n    var attributeNormalizedMap = {};\r\n    var attributeTypeMap = {};\r\n\r\n    for ( var attributeName in gltfAttributeMap ) {\r\n\r\n        if ( ! ( attributeName in ATTRIBUTES ) ) continue;\r\n\r\n        threeAttributeMap[ ATTRIBUTES[ attributeName ] ] = gltfAttributeMap[ attributeName ];\r\n\r\n    }\r\n\r\n    for ( attributeName in primitive.attributes ) {\r\n\r\n        if ( ATTRIBUTES[ attributeName ] !== undefined && gltfAttributeMap[ attributeName ] !== undefined ) {\r\n\r\n            var accessorDef = json.accessors[ primitive.attributes[ attributeName ] ];\r\n            var componentType = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\r\n\r\n            attributeTypeMap[ ATTRIBUTES[ attributeName ] ] = componentType;\r\n            attributeNormalizedMap[ ATTRIBUTES[ attributeName ] ] = accessorDef.normalized === true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\r\n\r\n        return new Promise( function ( resolve ) {\r\n\r\n            dracoLoader.decodeDracoFile( bufferView, function ( geometry ) {\r\n\r\n                for ( var attributeName in geometry.attributes ) {\r\n\r\n                    var attribute = geometry.attributes[ attributeName ];\r\n                    var normalized = attributeNormalizedMap[ attributeName ];\r\n\r\n                    if ( normalized !== undefined ) attribute.normalized = normalized;\r\n\r\n                }\r\n\r\n                resolve( geometry );\r\n\r\n            }, threeAttributeMap, attributeTypeMap );\r\n\r\n        } );\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Texture Transform Extension\r\n *\r\n * Specification:\r\n */\r\nfunction GLTFTextureTransformExtension( json ) {\r\n\r\n    this.name = EXTENSIONS.KHR_TEXTURE_TRANSFORM;\r\n\r\n}\r\n\r\nGLTFTextureTransformExtension.prototype.extendTexture = function ( texture, transform ) {\r\n\r\n    texture = texture.clone();\r\n\r\n    if ( transform.offset !== undefined ) {\r\n\r\n        texture.offset.fromArray( transform.offset );\r\n\r\n    }\r\n\r\n    if ( transform.rotation !== undefined ) {\r\n\r\n        texture.rotation = transform.rotation;\r\n\r\n    }\r\n\r\n    if ( transform.scale !== undefined ) {\r\n\r\n        texture.repeat.fromArray( transform.scale );\r\n\r\n    }\r\n\r\n    if ( transform.texCoord !== undefined ) {\r\n\r\n        console.warn( 'THREE.GLTFLoader: Custom UV sets in \"' + this.name + '\" extension not yet supported.' );\r\n\r\n    }\r\n\r\n    texture.needsUpdate = true;\r\n\r\n    return texture;\r\n\r\n};\r\n\r\n/**\r\n * Specular-Glossiness Extension\r\n *\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\r\n */\r\nfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\r\n\r\n    return {\r\n\r\n        name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\r\n\r\n        specularGlossinessParams: [\r\n            'color',\r\n            'map',\r\n            'lightMap',\r\n            'lightMapIntensity',\r\n            'aoMap',\r\n            'aoMapIntensity',\r\n            'emissive',\r\n            'emissiveIntensity',\r\n            'emissiveMap',\r\n            'bumpMap',\r\n            'bumpScale',\r\n            'normalMap',\r\n            'displacementMap',\r\n            'displacementScale',\r\n            'displacementBias',\r\n            'specularMap',\r\n            'specular',\r\n            'glossinessMap',\r\n            'glossiness',\r\n            'alphaMap',\r\n            'envMap',\r\n            'envMapIntensity',\r\n            'refractionRatio',\r\n        ],\r\n\r\n        getMaterialType: function () {\r\n\r\n            return THREE.ShaderMaterial;\r\n\r\n        },\r\n\r\n        extendParams: function ( params, material, parser ) {\r\n\r\n            var pbrSpecularGlossiness = material.extensions[ this.name ];\r\n\r\n            var shader = THREE.ShaderLib[ 'standard' ];\r\n\r\n            var uniforms = THREE.UniformsUtils.clone( shader.uniforms );\r\n\r\n            var specularMapParsFragmentChunk = [\r\n                '#ifdef USE_SPECULARMAP',\r\n                '\tuniform sampler2D specularMap;',\r\n                '#endif'\r\n            ].join( '\\n' );\r\n\r\n            var glossinessMapParsFragmentChunk = [\r\n                '#ifdef USE_GLOSSINESSMAP',\r\n                '\tuniform sampler2D glossinessMap;',\r\n                '#endif'\r\n            ].join( '\\n' );\r\n\r\n            var specularMapFragmentChunk = [\r\n                'vec3 specularFactor = specular;',\r\n                '#ifdef USE_SPECULARMAP',\r\n                '\tvec4 texelSpecular = texture2D( specularMap, vUv );',\r\n                '\ttexelSpecular = sRGBToLinear( texelSpecular );',\r\n                '\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n                '\tspecularFactor *= texelSpecular.rgb;',\r\n                '#endif'\r\n            ].join( '\\n' );\r\n\r\n            var glossinessMapFragmentChunk = [\r\n                'float glossinessFactor = glossiness;',\r\n                '#ifdef USE_GLOSSINESSMAP',\r\n                '\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\r\n                '\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\r\n                '\tglossinessFactor *= texelGlossiness.a;',\r\n                '#endif'\r\n            ].join( '\\n' );\r\n\r\n            var lightPhysicalFragmentChunk = [\r\n                'PhysicalMaterial material;',\r\n                'material.diffuseColor = diffuseColor.rgb;',\r\n                'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\r\n                'material.specularColor = specularFactor.rgb;',\r\n            ].join( '\\n' );\r\n\r\n            var fragmentShader = shader.fragmentShader\r\n                .replace( 'uniform float roughness;', 'uniform vec3 specular;' )\r\n                .replace( 'uniform float metalness;', 'uniform float glossiness;' )\r\n                .replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\r\n                .replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\r\n                .replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\r\n                .replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\r\n                .replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\r\n\r\n            delete uniforms.roughness;\r\n            delete uniforms.metalness;\r\n            delete uniforms.roughnessMap;\r\n            delete uniforms.metalnessMap;\r\n\r\n            uniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\r\n            uniforms.glossiness = { value: 0.5 };\r\n            uniforms.specularMap = { value: null };\r\n            uniforms.glossinessMap = { value: null };\r\n\r\n            params.vertexShader = shader.vertexShader;\r\n            params.fragmentShader = fragmentShader;\r\n            params.uniforms = uniforms;\r\n            params.defines = { 'STANDARD': '' };\r\n\r\n            params.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n            params.opacity = 1.0;\r\n\r\n            var pending = [];\r\n\r\n            if ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\r\n\r\n                var array = pbrSpecularGlossiness.diffuseFactor;\r\n\r\n                params.color.fromArray( array );\r\n                params.opacity = array[ 3 ];\r\n\r\n            }\r\n\r\n            if ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\r\n\r\n                pending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture ) );\r\n\r\n            }\r\n\r\n            params.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\r\n            params.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\r\n            params.specular = new THREE.Color( 1.0, 1.0, 1.0 );\r\n\r\n            if ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\r\n\r\n                params.specular.fromArray( pbrSpecularGlossiness.specularFactor );\r\n\r\n            }\r\n\r\n            if ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\r\n\r\n                var specGlossMapDef = pbrSpecularGlossiness.specularGlossinessTexture;\r\n                pending.push( parser.assignTexture( params, 'glossinessMap', specGlossMapDef ) );\r\n                pending.push( parser.assignTexture( params, 'specularMap', specGlossMapDef ) );\r\n\r\n            }\r\n\r\n            return Promise.all( pending );\r\n\r\n        },\r\n\r\n        createMaterial: function ( params ) {\r\n\r\n            // setup material properties based on MeshStandardMaterial for Specular-Glossiness\r\n\r\n            var material = new THREE.ShaderMaterial( {\r\n                defines: params.defines,\r\n                vertexShader: params.vertexShader,\r\n                fragmentShader: params.fragmentShader,\r\n                uniforms: params.uniforms,\r\n                fog: true,\r\n                lights: true,\r\n                opacity: params.opacity,\r\n                transparent: params.transparent\r\n            } );\r\n\r\n            material.isGLTFSpecularGlossinessMaterial = true;\r\n\r\n            material.color = params.color;\r\n\r\n            material.map = params.map === undefined ? null : params.map;\r\n\r\n            material.lightMap = null;\r\n            material.lightMapIntensity = 1.0;\r\n\r\n            material.aoMap = params.aoMap === undefined ? null : params.aoMap;\r\n            material.aoMapIntensity = 1.0;\r\n\r\n            material.emissive = params.emissive;\r\n            material.emissiveIntensity = 1.0;\r\n            material.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\r\n\r\n            material.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\r\n            material.bumpScale = 1;\r\n\r\n            material.normalMap = params.normalMap === undefined ? null : params.normalMap;\r\n            if ( params.normalScale ) material.normalScale = params.normalScale;\r\n\r\n            material.displacementMap = null;\r\n            material.displacementScale = 1;\r\n            material.displacementBias = 0;\r\n\r\n            material.specularMap = params.specularMap === undefined ? null : params.specularMap;\r\n            material.specular = params.specular;\r\n\r\n            material.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\r\n            material.glossiness = params.glossiness;\r\n\r\n            material.alphaMap = null;\r\n\r\n            material.envMap = params.envMap === undefined ? null : params.envMap;\r\n            material.envMapIntensity = 1.0;\r\n\r\n            material.refractionRatio = 0.98;\r\n\r\n            material.extensions.derivatives = true;\r\n\r\n            return material;\r\n\r\n        },\r\n\r\n        /**\r\n         * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\r\n         * copy only properties it knows about or inherits, and misses many properties that would\r\n         * normally be defined by MeshStandardMaterial.\r\n         *\r\n         * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\r\n         * loading a glTF model, but cloning later (e.g. by the user) would require these changes\r\n         * AND also updating `.onBeforeRender` on the parent mesh.\r\n         *\r\n         * @param  {THREE.ShaderMaterial} source\r\n         * @return {THREE.ShaderMaterial}\r\n         */\r\n        cloneMaterial: function ( source ) {\r\n\r\n            var target = source.clone();\r\n\r\n            target.isGLTFSpecularGlossinessMaterial = true;\r\n\r\n            var params = this.specularGlossinessParams;\r\n\r\n            for ( var i = 0, il = params.length; i < il; i ++ ) {\r\n\r\n                target[ params[ i ] ] = source[ params[ i ] ];\r\n\r\n            }\r\n\r\n            return target;\r\n\r\n        },\r\n\r\n        // Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\r\n        refreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\r\n\r\n            if ( material.isGLTFSpecularGlossinessMaterial !== true ) {\r\n\r\n                return;\r\n\r\n            }\r\n\r\n            var uniforms = material.uniforms;\r\n            var defines = material.defines;\r\n\r\n            uniforms.opacity.value = material.opacity;\r\n\r\n            uniforms.diffuse.value.copy( material.color );\r\n            uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n            uniforms.map.value = material.map;\r\n            uniforms.specularMap.value = material.specularMap;\r\n            uniforms.alphaMap.value = material.alphaMap;\r\n\r\n            uniforms.lightMap.value = material.lightMap;\r\n            uniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n            uniforms.aoMap.value = material.aoMap;\r\n            uniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n            // uv repeat and offset setting priorities\r\n            // 1. color map\r\n            // 2. specular map\r\n            // 3. normal map\r\n            // 4. bump map\r\n            // 5. alpha map\r\n            // 6. emissive map\r\n\r\n            var uvScaleMap;\r\n\r\n            if ( material.map ) {\r\n\r\n                uvScaleMap = material.map;\r\n\r\n            } else if ( material.specularMap ) {\r\n\r\n                uvScaleMap = material.specularMap;\r\n\r\n            } else if ( material.displacementMap ) {\r\n\r\n                uvScaleMap = material.displacementMap;\r\n\r\n            } else if ( material.normalMap ) {\r\n\r\n                uvScaleMap = material.normalMap;\r\n\r\n            } else if ( material.bumpMap ) {\r\n\r\n                uvScaleMap = material.bumpMap;\r\n\r\n            } else if ( material.glossinessMap ) {\r\n\r\n                uvScaleMap = material.glossinessMap;\r\n\r\n            } else if ( material.alphaMap ) {\r\n\r\n                uvScaleMap = material.alphaMap;\r\n\r\n            } else if ( material.emissiveMap ) {\r\n\r\n                uvScaleMap = material.emissiveMap;\r\n\r\n            }\r\n\r\n            if ( uvScaleMap !== undefined ) {\r\n\r\n                // backwards compatibility\r\n                if ( uvScaleMap.isWebGLRenderTarget ) {\r\n\r\n                    uvScaleMap = uvScaleMap.texture;\r\n\r\n                }\r\n\r\n                if ( uvScaleMap.matrixAutoUpdate === true ) {\r\n\r\n                    uvScaleMap.updateMatrix();\r\n\r\n                }\r\n\r\n                uniforms.uvTransform.value.copy( uvScaleMap.matrix );\r\n\r\n            }\r\n\r\n            if ( material.envMap ) {\r\n\r\n                uniforms.envMap.value = material.envMap;\r\n                uniforms.envMapIntensity.value = material.envMapIntensity;\r\n\r\n                // don't flip CubeTexture envMaps, flip everything else:\r\n                //  WebGLRenderTargetCube will be flipped for backwards compatibility\r\n                //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\r\n                // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\r\n                uniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\r\n\r\n                uniforms.reflectivity.value = material.reflectivity;\r\n                uniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n                uniforms.maxMipLevel.value = renderer.properties.get( material.envMap ).__maxMipLevel;\r\n\r\n            }\r\n\r\n            uniforms.specular.value.copy( material.specular );\r\n            uniforms.glossiness.value = material.glossiness;\r\n\r\n            uniforms.glossinessMap.value = material.glossinessMap;\r\n\r\n            uniforms.emissiveMap.value = material.emissiveMap;\r\n            uniforms.bumpMap.value = material.bumpMap;\r\n            uniforms.normalMap.value = material.normalMap;\r\n\r\n            uniforms.displacementMap.value = material.displacementMap;\r\n            uniforms.displacementScale.value = material.displacementScale;\r\n            uniforms.displacementBias.value = material.displacementBias;\r\n\r\n            if ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\r\n\r\n                defines.USE_GLOSSINESSMAP = '';\r\n                // set USE_ROUGHNESSMAP to enable vUv\r\n                defines.USE_ROUGHNESSMAP = '';\r\n\r\n            }\r\n\r\n            if ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\r\n\r\n                delete defines.USE_GLOSSINESSMAP;\r\n                delete defines.USE_ROUGHNESSMAP;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n}\r\n\r\n/*********************************/\r\n/********** INTERPOLATION ********/\r\n/*********************************/\r\n\r\n// Spline Interpolation\r\n// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\r\nfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n    THREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n}\r\n\r\nGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\r\nGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\r\n\r\nGLTFCubicSplineInterpolant.prototype.copySampleValue_ = function ( index ) {\r\n\r\n    // Copies a sample value to the result buffer. See description of glTF\r\n    // CUBICSPLINE values layout in interpolate_() function below.\r\n\r\n    var result = this.resultBuffer,\r\n        values = this.sampleValues,\r\n        valueSize = this.valueSize,\r\n        offset = index * valueSize * 3 + valueSize;\r\n\r\n    for ( var i = 0; i !== valueSize; i ++ ) {\r\n\r\n        result[ i ] = values[ offset + i ];\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n};\r\n\r\nGLTFCubicSplineInterpolant.prototype.beforeStart_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\r\n\r\nGLTFCubicSplineInterpolant.prototype.afterEnd_ = GLTFCubicSplineInterpolant.prototype.copySampleValue_;\r\n\r\nGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\r\n\r\n    var result = this.resultBuffer;\r\n    var values = this.sampleValues;\r\n    var stride = this.valueSize;\r\n\r\n    var stride2 = stride * 2;\r\n    var stride3 = stride * 3;\r\n\r\n    var td = t1 - t0;\r\n\r\n    var p = ( t - t0 ) / td;\r\n    var pp = p * p;\r\n    var ppp = pp * p;\r\n\r\n    var offset1 = i1 * stride3;\r\n    var offset0 = offset1 - stride3;\r\n\r\n    var s2 = - 2 * ppp + 3 * pp;\r\n    var s3 = ppp - pp;\r\n    var s0 = 1 - s2;\r\n    var s1 = s3 - pp + p;\r\n\r\n    // Layout of keyframe output values for CUBICSPLINE animations:\r\n    //   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\r\n    for ( var i = 0; i !== stride; i ++ ) {\r\n\r\n        var p0 = values[ offset0 + i + stride ]; // splineVertex_k\r\n        var m0 = values[ offset0 + i + stride2 ] * td; // outTangent_k * (t_k+1 - t_k)\r\n        var p1 = values[ offset1 + i + stride ]; // splineVertex_k+1\r\n        var m1 = values[ offset1 + i ] * td; // inTangent_k+1 * (t_k+1 - t_k)\r\n\r\n        result[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\r\n\r\n    }\r\n\r\n    return result;\r\n\r\n};\r\n\r\n/*********************************/\r\n/********** INTERNALS ************/\r\n/*********************************/\r\n\r\n/* CONSTANTS */\r\n\r\nvar WEBGL_CONSTANTS = {\r\n    FLOAT: 5126,\r\n    //FLOAT_MAT2: 35674,\r\n    FLOAT_MAT3: 35675,\r\n    FLOAT_MAT4: 35676,\r\n    FLOAT_VEC2: 35664,\r\n    FLOAT_VEC3: 35665,\r\n    FLOAT_VEC4: 35666,\r\n    LINEAR: 9729,\r\n    REPEAT: 10497,\r\n    SAMPLER_2D: 35678,\r\n    POINTS: 0,\r\n    LINES: 1,\r\n    LINE_LOOP: 2,\r\n    LINE_STRIP: 3,\r\n    TRIANGLES: 4,\r\n    TRIANGLE_STRIP: 5,\r\n    TRIANGLE_FAN: 6,\r\n    UNSIGNED_BYTE: 5121,\r\n    UNSIGNED_SHORT: 5123\r\n};\r\n\r\nvar WEBGL_TYPE = {\r\n    5126: Number,\r\n    //35674: THREE.Matrix2,\r\n    35675: THREE.Matrix3,\r\n    35676: THREE.Matrix4,\r\n    35664: THREE.Vector2,\r\n    35665: THREE.Vector3,\r\n    35666: THREE.Vector4,\r\n    35678: THREE.Texture\r\n};\r\n\r\nvar WEBGL_COMPONENT_TYPES = {\r\n    5120: Int8Array,\r\n    5121: Uint8Array,\r\n    5122: Int16Array,\r\n    5123: Uint16Array,\r\n    5125: Uint32Array,\r\n    5126: Float32Array\r\n};\r\n\r\nvar WEBGL_FILTERS = {\r\n    9728: THREE.NearestFilter,\r\n    9729: THREE.LinearFilter,\r\n    9984: THREE.NearestMipMapNearestFilter,\r\n    9985: THREE.LinearMipMapNearestFilter,\r\n    9986: THREE.NearestMipMapLinearFilter,\r\n    9987: THREE.LinearMipMapLinearFilter\r\n};\r\n\r\nvar WEBGL_WRAPPINGS = {\r\n    33071: THREE.ClampToEdgeWrapping,\r\n    33648: THREE.MirroredRepeatWrapping,\r\n    10497: THREE.RepeatWrapping\r\n};\r\n\r\nvar WEBGL_SIDES = {\r\n    1028: THREE.BackSide, // Culling front\r\n    1029: THREE.FrontSide // Culling back\r\n    //1032: THREE.NoSide   // Culling front and back, what to do?\r\n};\r\n\r\nvar WEBGL_DEPTH_FUNCS = {\r\n    512: THREE.NeverDepth,\r\n    513: THREE.LessDepth,\r\n    514: THREE.EqualDepth,\r\n    515: THREE.LessEqualDepth,\r\n    516: THREE.GreaterEqualDepth,\r\n    517: THREE.NotEqualDepth,\r\n    518: THREE.GreaterEqualDepth,\r\n    519: THREE.AlwaysDepth\r\n};\r\n\r\nvar WEBGL_BLEND_EQUATIONS = {\r\n    32774: THREE.AddEquation,\r\n    32778: THREE.SubtractEquation,\r\n    32779: THREE.ReverseSubtractEquation\r\n};\r\n\r\nvar WEBGL_BLEND_FUNCS = {\r\n    0: THREE.ZeroFactor,\r\n    1: THREE.OneFactor,\r\n    768: THREE.SrcColorFactor,\r\n    769: THREE.OneMinusSrcColorFactor,\r\n    770: THREE.SrcAlphaFactor,\r\n    771: THREE.OneMinusSrcAlphaFactor,\r\n    772: THREE.DstAlphaFactor,\r\n    773: THREE.OneMinusDstAlphaFactor,\r\n    774: THREE.DstColorFactor,\r\n    775: THREE.OneMinusDstColorFactor,\r\n    776: THREE.SrcAlphaSaturateFactor\r\n    // The followings are not supported by Three.js yet\r\n    //32769: CONSTANT_COLOR,\r\n    //32770: ONE_MINUS_CONSTANT_COLOR,\r\n    //32771: CONSTANT_ALPHA,\r\n    //32772: ONE_MINUS_CONSTANT_COLOR\r\n};\r\n\r\nvar WEBGL_TYPE_SIZES = {\r\n    'SCALAR': 1,\r\n    'VEC2': 2,\r\n    'VEC3': 3,\r\n    'VEC4': 4,\r\n    'MAT2': 4,\r\n    'MAT3': 9,\r\n    'MAT4': 16\r\n};\r\n\r\nvar ATTRIBUTES = {\r\n    POSITION: 'position',\r\n    NORMAL: 'normal',\r\n    TANGENT: 'tangent',\r\n    TEXCOORD_0: 'uv',\r\n    TEXCOORD_1: 'uv2',\r\n    COLOR_0: 'color',\r\n    WEIGHTS_0: 'skinWeight',\r\n    JOINTS_0: 'skinIndex',\r\n};\r\n\r\nvar PATH_PROPERTIES = {\r\n    scale: 'scale',\r\n    translation: 'position',\r\n    rotation: 'quaternion',\r\n    weights: 'morphTargetInfluences'\r\n};\r\n\r\nvar INTERPOLATION = {\r\n    CUBICSPLINE: THREE.InterpolateSmooth, // We use custom interpolation GLTFCubicSplineInterpolation for CUBICSPLINE.\r\n                                            // KeyframeTrack.optimize() can't handle glTF Cubic Spline output values layout,\r\n                                            // using THREE.InterpolateSmooth for KeyframeTrack instantiation to prevent optimization.\r\n                                            // See KeyframeTrack.optimize() for the detail.\r\n    LINEAR: THREE.InterpolateLinear,\r\n    STEP: THREE.InterpolateDiscrete\r\n};\r\n\r\nvar STATES_ENABLES = {\r\n    2884: 'CULL_FACE',\r\n    2929: 'DEPTH_TEST',\r\n    3042: 'BLEND',\r\n    3089: 'SCISSOR_TEST',\r\n    32823: 'POLYGON_OFFSET_FILL',\r\n    32926: 'SAMPLE_ALPHA_TO_COVERAGE'\r\n};\r\n\r\nvar ALPHA_MODES = {\r\n    OPAQUE: 'OPAQUE',\r\n    MASK: 'MASK',\r\n    BLEND: 'BLEND'\r\n};\r\n\r\nvar MIME_TYPE_FORMATS = {\r\n    'image/png': THREE.RGBAFormat,\r\n    'image/jpeg': THREE.RGBFormat\r\n};\r\n\r\n/* UTILITY FUNCTIONS */\r\n\r\nfunction resolveURL( url, path ) {\r\n\r\n    // Invalid URL\r\n    if ( typeof url !== 'string' || url === '' ) return '';\r\n\r\n    // Absolute URL http://,https://,//\r\n    if ( /^(https?:)?\\/\\//i.test( url ) ) return url;\r\n\r\n    // Data URI\r\n    if ( /^data:.*,.*$/i.test( url ) ) return url;\r\n\r\n    // Blob URL\r\n    if ( /^blob:.*$/i.test( url ) ) return url;\r\n\r\n    // Relative URL\r\n    return path + url;\r\n\r\n}\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\r\n */\r\nfunction createDefaultMaterial() {\r\n\r\n    return new THREE.MeshStandardMaterial( {\r\n        color: 0xFFFFFF,\r\n        emissive: 0x000000,\r\n        metalness: 1,\r\n        roughness: 1,\r\n        transparent: false,\r\n        depthTest: true,\r\n        side: THREE.FrontSide\r\n    } );\r\n\r\n}\r\n\r\nfunction addUnknownExtensionsToUserData( knownExtensions, object, objectDef ) {\r\n\r\n    // Add unknown glTF extensions to an object's userData.\r\n\r\n    for ( var name in objectDef.extensions ) {\r\n\r\n        if ( knownExtensions[ name ] === undefined ) {\r\n\r\n            object.userData.gltfExtensions = object.userData.gltfExtensions || {};\r\n            object.userData.gltfExtensions[ name ] = objectDef.extensions[ name ];\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * @param {THREE.Object3D|THREE.Material|THREE.BufferGeometry} object\r\n * @param {GLTF.definition} gltfDef\r\n */\r\nfunction assignExtrasToUserData( object, gltfDef ) {\r\n\r\n    if ( gltfDef.extras !== undefined ) {\r\n\r\n        if ( typeof gltfDef.extras === 'object' ) {\r\n\r\n            object.userData = gltfDef.extras;\r\n\r\n        } else {\r\n\r\n            console.warn( 'THREE.GLTFLoader: Ignoring primitive type .extras, ' + gltfDef.extras );\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\r\n *\r\n * @param {THREE.BufferGeometry} geometry\r\n * @param {Array<GLTF.Target>} targets\r\n * @param {GLTFParser} parser\r\n * @return {Promise<THREE.BufferGeometry>}\r\n */\r\nfunction addMorphTargets( geometry, targets, parser ) {\r\n\r\n    var hasMorphPosition = false;\r\n    var hasMorphNormal = false;\r\n\r\n    for ( var i = 0, il = targets.length; i < il; i ++ ) {\r\n\r\n        var target = targets[ i ];\r\n\r\n        if ( target.POSITION !== undefined ) hasMorphPosition = true;\r\n        if ( target.NORMAL !== undefined ) hasMorphNormal = true;\r\n\r\n        if ( hasMorphPosition && hasMorphNormal ) break;\r\n\r\n    }\r\n\r\n    if ( ! hasMorphPosition && ! hasMorphNormal ) return Promise.resolve( geometry );\r\n\r\n    var pendingPositionAccessors = [];\r\n    var pendingNormalAccessors = [];\r\n\r\n    for ( var i = 0, il = targets.length; i < il; i ++ ) {\r\n\r\n        var target = targets[ i ];\r\n\r\n        if ( hasMorphPosition ) {\r\n\r\n            // TODO: Error-prone use of a callback inside a loop.\r\n            var accessor = target.POSITION !== undefined\r\n                ? parser.getDependency( 'accessor', target.POSITION )\r\n                    .then( function ( accessor ) {\r\n\r\n                        // Cloning not to pollute original accessor below\r\n                        return cloneBufferAttribute( accessor );\r\n\r\n                    } )\r\n                : geometry.attributes.position;\r\n\r\n            pendingPositionAccessors.push( accessor );\r\n\r\n        }\r\n\r\n        if ( hasMorphNormal ) {\r\n\r\n            // TODO: Error-prone use of a callback inside a loop.\r\n            var accessor = target.NORMAL !== undefined\r\n                ? parser.getDependency( 'accessor', target.NORMAL )\r\n                    .then( function ( accessor ) {\r\n\r\n                        return cloneBufferAttribute( accessor );\r\n\r\n                    } )\r\n                : geometry.attributes.normal;\r\n\r\n            pendingNormalAccessors.push( accessor );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return Promise.all( [\r\n        Promise.all( pendingPositionAccessors ),\r\n        Promise.all( pendingNormalAccessors )\r\n    ] ).then( function ( accessors ) {\r\n\r\n        var morphPositions = accessors[ 0 ];\r\n        var morphNormals = accessors[ 1 ];\r\n\r\n        for ( var i = 0, il = targets.length; i < il; i ++ ) {\r\n\r\n            var target = targets[ i ];\r\n            var attributeName = 'morphTarget' + i;\r\n\r\n            if ( hasMorphPosition ) {\r\n\r\n                // Three.js morph position is absolute value. The formula is\r\n                //   basePosition\r\n                //     + weight0 * ( morphPosition0 - basePosition )\r\n                //     + weight1 * ( morphPosition1 - basePosition )\r\n                //     ...\r\n                // while the glTF one is relative\r\n                //   basePosition\r\n                //     + weight0 * glTFmorphPosition0\r\n                //     + weight1 * glTFmorphPosition1\r\n                //     ...\r\n                // then we need to convert from relative to absolute here.\r\n\r\n                if ( target.POSITION !== undefined ) {\r\n\r\n                    var positionAttribute = morphPositions[ i ];\r\n                    positionAttribute.name = attributeName;\r\n\r\n                    var position = geometry.attributes.position;\r\n\r\n                    for ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\r\n\r\n                        positionAttribute.setXYZ(\r\n                            j,\r\n                            positionAttribute.getX( j ) + position.getX( j ),\r\n                            positionAttribute.getY( j ) + position.getY( j ),\r\n                            positionAttribute.getZ( j ) + position.getZ( j )\r\n                        );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            if ( hasMorphNormal ) {\r\n\r\n                // see target.POSITION's comment\r\n\r\n                if ( target.NORMAL !== undefined ) {\r\n\r\n                    var normalAttribute = morphNormals[ i ];\r\n                    normalAttribute.name = attributeName;\r\n\r\n                    var normal = geometry.attributes.normal;\r\n\r\n                    for ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\r\n\r\n                        normalAttribute.setXYZ(\r\n                            j,\r\n                            normalAttribute.getX( j ) + normal.getX( j ),\r\n                            normalAttribute.getY( j ) + normal.getY( j ),\r\n                            normalAttribute.getZ( j ) + normal.getZ( j )\r\n                        );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        if ( hasMorphPosition ) geometry.morphAttributes.position = morphPositions;\r\n        if ( hasMorphNormal ) geometry.morphAttributes.normal = morphNormals;\r\n\r\n        return geometry;\r\n\r\n    } );\r\n\r\n}\r\n\r\n/**\r\n * @param {THREE.Mesh} mesh\r\n * @param {GLTF.Mesh} meshDef\r\n */\r\nfunction updateMorphTargets( mesh, meshDef ) {\r\n\r\n    mesh.updateMorphTargets();\r\n\r\n    if ( meshDef.weights !== undefined ) {\r\n\r\n        for ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\r\n\r\n            mesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // .extras has user-defined data, so check that .extras.targetNames is an array.\r\n    if ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\r\n\r\n        var targetNames = meshDef.extras.targetNames;\r\n\r\n        if ( mesh.morphTargetInfluences.length === targetNames.length ) {\r\n\r\n            mesh.morphTargetDictionary = {};\r\n\r\n            for ( var i = 0, il = targetNames.length; i < il; i ++ ) {\r\n\r\n                mesh.morphTargetDictionary[ targetNames[ i ] ] = i;\r\n\r\n            }\r\n\r\n        } else {\r\n\r\n            console.warn( 'THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.' );\r\n\r\n        }\r\n\r\n    }\r\n\r\n}\r\nfunction isObjectEqual( a, b ) {\r\n\r\n    if ( Object.keys( a ).length !== Object.keys( b ).length ) return false;\r\n\r\n    for ( var key in a ) {\r\n\r\n        if ( a[ key ] !== b[ key ] ) return false;\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n}\r\n\r\nfunction createPrimitiveKey( primitiveDef ) {\r\n\r\n    var dracoExtension = primitiveDef.extensions && primitiveDef.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ];\r\n    var geometryKey;\r\n\r\n    if ( dracoExtension ) {\r\n\r\n        geometryKey = 'draco:' + dracoExtension.bufferView\r\n            + ':' + dracoExtension.indices\r\n            + ':' + createAttributesKey( dracoExtension.attributes );\r\n\r\n    } else {\r\n\r\n        geometryKey = primitiveDef.indices + ':' + createAttributesKey( primitiveDef.attributes ) + ':' + primitiveDef.mode;\r\n\r\n    }\r\n\r\n    return geometryKey;\r\n\r\n}\r\n\r\nfunction createAttributesKey( attributes ) {\r\n\r\n    var attributesKey = '';\r\n\r\n    var keys = Object.keys( attributes ).sort();\r\n\r\n    for ( var i = 0, il = keys.length; i < il; i ++ ) {\r\n\r\n        attributesKey += keys[ i ] + ':' + attributes[ keys[ i ] ] + ';';\r\n\r\n    }\r\n\r\n    return attributesKey;\r\n\r\n}\r\n\r\nfunction createArrayKeyBufferGeometry( a ) {\r\n\r\n    var arrayKey = '';\r\n\r\n    for ( var i = 0, il = a.length; i < il; i ++ ) {\r\n\r\n        arrayKey += ':' + a[ i ].uuid;\r\n\r\n    }\r\n\r\n    return arrayKey;\r\n\r\n}\r\n\r\nfunction createMultiPassGeometryKey( geometry, primitives ) {\r\n\r\n    var key = geometry.uuid;\r\n\r\n    for ( var i = 0, il = primitives.length; i < il; i ++ ) {\r\n\r\n        key += i + createPrimitiveKey( primitives[ i ] );\r\n\r\n    }\r\n\r\n    return key;\r\n\r\n}\r\n\r\nfunction cloneBufferAttribute( attribute ) {\r\n\r\n    if ( attribute.isInterleavedBufferAttribute ) {\r\n\r\n        var count = attribute.count;\r\n        var itemSize = attribute.itemSize;\r\n        var array = attribute.array.slice( 0, count * itemSize );\r\n\r\n        for ( var i = 0, j = 0; i < count; ++ i ) {\r\n\r\n            array[ j ++ ] = attribute.getX( i );\r\n            if ( itemSize >= 2 ) array[ j ++ ] = attribute.getY( i );\r\n            if ( itemSize >= 3 ) array[ j ++ ] = attribute.getZ( i );\r\n            if ( itemSize >= 4 ) array[ j ++ ] = attribute.getW( i );\r\n\r\n        }\r\n\r\n        return new THREE.BufferAttribute( array, itemSize, attribute.normalized );\r\n\r\n    }\r\n\r\n    return attribute.clone();\r\n\r\n}\r\n\r\n/**\r\n * Checks if we can build a single Mesh with MultiMaterial from multiple primitives.\r\n * Returns true if all primitives use the same attributes/morphAttributes/mode\r\n * and also have index. Otherwise returns false.\r\n *\r\n * @param {Array<GLTF.Primitive>} primitives\r\n * @return {Boolean}\r\n */\r\nfunction isMultiPassGeometry( primitives ) {\r\n\r\n    if ( primitives.length < 2 ) return false;\r\n\r\n    var primitive0 = primitives[ 0 ];\r\n    var targets0 = primitive0.targets || [];\r\n\r\n    if ( primitive0.indices === undefined ) return false;\r\n\r\n    for ( var i = 1, il = primitives.length; i < il; i ++ ) {\r\n\r\n        var primitive = primitives[ i ];\r\n\r\n        if ( primitive0.mode !== primitive.mode ) return false;\r\n        if ( primitive.indices === undefined ) return false;\r\n        if ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) return false;\r\n        if ( ! isObjectEqual( primitive0.attributes, primitive.attributes ) ) return false;\r\n\r\n        var targets = primitive.targets || [];\r\n\r\n        if ( targets0.length !== targets.length ) return false;\r\n\r\n        for ( var j = 0, jl = targets0.length; j < jl; j ++ ) {\r\n\r\n            if ( ! isObjectEqual( targets0[ j ], targets[ j ] ) ) return false;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return true;\r\n\r\n}\r\n\r\n/* GLTF PARSER */\r\n\r\nfunction GLTFParser( json, extensions, options ) {\r\n\r\n    this.json = json || {};\r\n    this.extensions = extensions || {};\r\n    this.options = options || {};\r\n\r\n    // loader object cache\r\n    this.cache = new GLTFRegistry();\r\n\r\n    // BufferGeometry caching\r\n    this.primitiveCache = {};\r\n    this.multiplePrimitivesCache = {};\r\n    this.multiPassGeometryCache = {};\r\n\r\n    this.textureLoader = new THREE.TextureLoader( this.options.manager );\r\n    this.textureLoader.setCrossOrigin( this.options.crossOrigin );\r\n\r\n    this.fileLoader = new THREE.FileLoader( this.options.manager );\r\n    this.fileLoader.setResponseType( 'arraybuffer' );\r\n\r\n}\r\n\r\nGLTFParser.prototype.parse = function ( onLoad, onError ) {\r\n\r\n    var json = this.json;\r\n\r\n    // Clear the loader cache\r\n    this.cache.removeAll();\r\n\r\n    // Mark the special nodes/meshes in json for efficient parse\r\n    this.markDefs();\r\n\r\n    // Fire the callback on complete\r\n    this.getMultiDependencies( [\r\n\r\n        'scene',\r\n        'animation',\r\n        'camera'\r\n\r\n    ] ).then( function ( dependencies ) {\r\n\r\n        var scenes = dependencies.scenes || [];\r\n        var scene = scenes[ json.scene || 0 ];\r\n        var animations = dependencies.animations || [];\r\n        var cameras = dependencies.cameras || [];\r\n\r\n        onLoad( scene, scenes, cameras, animations, json );\r\n\r\n    } ).catch( onError );\r\n\r\n};\r\n\r\n/**\r\n * Marks the special nodes/meshes in json for efficient parse.\r\n */\r\nGLTFParser.prototype.markDefs = function () {\r\n\r\n    var nodeDefs = this.json.nodes || [];\r\n    var skinDefs = this.json.skins || [];\r\n    var meshDefs = this.json.meshes || [];\r\n\r\n    var meshReferences = {};\r\n    var meshUses = {};\r\n\r\n    // Nothing in the node definition indicates whether it is a Bone or an\r\n    // Object3D. Use the skins' joint references to mark bones.\r\n    for ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\r\n\r\n        var joints = skinDefs[ skinIndex ].joints;\r\n\r\n        for ( var i = 0, il = joints.length; i < il; i ++ ) {\r\n\r\n            nodeDefs[ joints[ i ] ].isBone = true;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\r\n    // avoid having more than one THREE.Mesh with the same name, count\r\n    // references and rename instances below.\r\n    //\r\n    // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\r\n    for ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\r\n\r\n        var nodeDef = nodeDefs[ nodeIndex ];\r\n\r\n        if ( nodeDef.mesh !== undefined ) {\r\n\r\n            if ( meshReferences[ nodeDef.mesh ] === undefined ) {\r\n\r\n                meshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\r\n\r\n            }\r\n\r\n            meshReferences[ nodeDef.mesh ] ++;\r\n\r\n            // Nothing in the mesh definition indicates whether it is\r\n            // a SkinnedMesh or Mesh. Use the node's mesh reference\r\n            // to mark SkinnedMesh if node has skin.\r\n            if ( nodeDef.skin !== undefined ) {\r\n\r\n                meshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    this.json.meshReferences = meshReferences;\r\n    this.json.meshUses = meshUses;\r\n\r\n};\r\n\r\n/**\r\n * Requests the specified dependency asynchronously, with caching.\r\n * @param {string} type\r\n * @param {number} index\r\n * @return {Promise<THREE.Object3D|THREE.Material|THREE.Texture|THREE.AnimationClip|ArrayBuffer|Object>}\r\n */\r\nGLTFParser.prototype.getDependency = function ( type, index ) {\r\n    var cacheKey = type + ':' + index;\r\n    var dependency = this.cache.get( cacheKey );\r\n\r\n    if ( ! dependency ) {\r\n\r\n        switch ( type ) {\r\n\r\n            case 'scene':\r\n                dependency = this.loadScene( index );\r\n                break;\r\n\r\n            case 'node':\r\n                dependency = this.loadNode( index );\r\n                break;\r\n\r\n            case 'mesh':\r\n                dependency = this.loadMesh( index );\r\n                break;\r\n\r\n            case 'accessor':\r\n                dependency = this.loadAccessor( index );\r\n                break;\r\n\r\n            case 'bufferView':\r\n                dependency = this.loadBufferView( index );\r\n                break;\r\n\r\n            case 'buffer':\r\n                dependency = this.loadBuffer( index );\r\n                break;\r\n\r\n            case 'material':\r\n                dependency = this.loadMaterial( index );\r\n                break;\r\n\r\n            case 'texture':\r\n                dependency = this.loadTexture( index );\r\n                break;\r\n\r\n            case 'skin':\r\n                dependency = this.loadSkin( index );\r\n                break;\r\n\r\n            case 'animation':\r\n                dependency = this.loadAnimation( index );\r\n                break;\r\n\r\n            case 'camera':\r\n                dependency = this.loadCamera( index );\r\n                break;\r\n\r\n            case 'light':\r\n                dependency = this.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].loadLight( index );\r\n                break;\r\n\r\n            default:\r\n                throw new Error( 'Unknown type: ' + type );\r\n\r\n        }\r\n\r\n        this.cache.add( cacheKey, dependency );\r\n\r\n    }\r\n\r\n    return dependency;\r\n\r\n};\r\n\r\n/**\r\n * Requests all dependencies of the specified type asynchronously, with caching.\r\n * @param {string} type\r\n * @return {Promise<Array<Object>>}\r\n */\r\nGLTFParser.prototype.getDependencies = function ( type ) {\r\n\r\n    var dependencies = this.cache.get( type );\r\n\r\n    if ( ! dependencies ) {\r\n\r\n        var parser = this;\r\n        var defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\r\n\r\n        dependencies = Promise.all( defs.map( function ( def, index ) {\r\n\r\n            return parser.getDependency( type, index );\r\n\r\n        } ) );\r\n\r\n        this.cache.add( type, dependencies );\r\n\r\n    }\r\n\r\n    return dependencies;\r\n\r\n};\r\n\r\n/**\r\n * Requests all multiple dependencies of the specified types asynchronously, with caching.\r\n * @param {Array<string>} types\r\n * @return {Promise<Object<Array<Object>>>}\r\n */\r\nGLTFParser.prototype.getMultiDependencies = function ( types ) {\r\n\r\n    var results = {};\r\n    var pending = [];\r\n\r\n    for ( var i = 0, il = types.length; i < il; i ++ ) {\r\n\r\n        var type = types[ i ];\r\n        var value = this.getDependencies( type );\r\n\r\n        // TODO: Error-prone use of a callback inside a loop.\r\n        value = value.then( function ( key, value ) {\r\n\r\n            results[ key ] = value;\r\n\r\n        }.bind( this, type + ( type === 'mesh' ? 'es' : 's' ) ) );\r\n\r\n        pending.push( value );\r\n\r\n    }\r\n\r\n    return Promise.all( pending ).then( function () {\r\n\r\n        return results;\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n * @param {number} bufferIndex\r\n * @return {Promise<ArrayBuffer>}\r\n */\r\nGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\r\n\r\n    var bufferDef = this.json.buffers[ bufferIndex ];\r\n    var loader = this.fileLoader;\r\n\r\n    if ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\r\n\r\n        throw new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\r\n\r\n    }\r\n\r\n    // If present, GLB container is required to be the first buffer.\r\n    if ( bufferDef.uri === undefined && bufferIndex === 0 ) {\r\n\r\n        return Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\r\n\r\n    }\r\n\r\n    var options = this.options;\r\n\r\n    return new Promise( function ( resolve, reject ) {\r\n\r\n        loader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\r\n\r\n            reject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\r\n\r\n        } );\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n * @param {number} bufferViewIndex\r\n * @return {Promise<ArrayBuffer>}\r\n */\r\nGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\r\n\r\n    var bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\r\n\r\n    return this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\r\n\r\n        var byteLength = bufferViewDef.byteLength || 0;\r\n        var byteOffset = bufferViewDef.byteOffset || 0;\r\n        return buffer.slice( byteOffset, byteOffset + byteLength );\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\r\n * @param {number} accessorIndex\r\n * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\r\n */\r\nGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\r\n\r\n    var parser = this;\r\n    var json = this.json;\r\n\r\n    var accessorDef = this.json.accessors[ accessorIndex ];\r\n\r\n    if ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\r\n\r\n        // Ignore empty accessors, which may be used to declare runtime\r\n        // information about attributes coming from another source (e.g. Draco\r\n        // compression extension).\r\n        return Promise.resolve( null );\r\n\r\n    }\r\n\r\n    var pendingBufferViews = [];\r\n\r\n    if ( accessorDef.bufferView !== undefined ) {\r\n\r\n        pendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\r\n\r\n    } else {\r\n\r\n        pendingBufferViews.push( null );\r\n\r\n    }\r\n\r\n    if ( accessorDef.sparse !== undefined ) {\r\n\r\n        pendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\r\n        pendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\r\n\r\n    }\r\n\r\n    return Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\r\n\r\n        var bufferView = bufferViews[ 0 ];\r\n\r\n        var itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\r\n        var TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\r\n\r\n        // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\r\n        var elementBytes = TypedArray.BYTES_PER_ELEMENT;\r\n        var itemBytes = elementBytes * itemSize;\r\n        var byteOffset = accessorDef.byteOffset || 0;\r\n        var byteStride = accessorDef.bufferView !== undefined ? json.bufferViews[ accessorDef.bufferView ].byteStride : undefined;\r\n        var normalized = accessorDef.normalized === true;\r\n        var array, bufferAttribute;\r\n\r\n        // The buffer is not interleaved if the stride is the item size in bytes.\r\n        if ( byteStride && byteStride !== itemBytes ) {\r\n\r\n            var ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\r\n            var ib = parser.cache.get( ibCacheKey );\r\n\r\n            if ( ! ib ) {\r\n\r\n                // Use the full buffer if it's interleaved.\r\n                array = new TypedArray( bufferView );\r\n\r\n                // Integer parameters to IB/IBA are in array elements, not bytes.\r\n                ib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\r\n\r\n                parser.cache.add( ibCacheKey, ib );\r\n\r\n            }\r\n\r\n            bufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized );\r\n\r\n        } else {\r\n\r\n            if ( bufferView === null ) {\r\n\r\n                array = new TypedArray( accessorDef.count * itemSize );\r\n\r\n            } else {\r\n\r\n                array = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\r\n\r\n            }\r\n\r\n            bufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\r\n\r\n        }\r\n\r\n        // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\r\n        if ( accessorDef.sparse !== undefined ) {\r\n\r\n            var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\r\n            var TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\r\n\r\n            var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\r\n            var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\r\n\r\n            var sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\r\n            var sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\r\n\r\n            if ( bufferView !== null ) {\r\n\r\n                // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\r\n                bufferAttribute.setArray( bufferAttribute.array.slice() );\r\n\r\n            }\r\n\r\n            for ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\r\n\r\n                var index = sparseIndices[ i ];\r\n\r\n                bufferAttribute.setX( index, sparseValues[ i * itemSize ] );\r\n                if ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\r\n                if ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\r\n                if ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\r\n                if ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return bufferAttribute;\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\r\n * @param {number} textureIndex\r\n * @return {Promise<THREE.Texture>}\r\n */\r\nGLTFParser.prototype.loadTexture = function ( textureIndex ) {\r\n\r\n    var parser = this;\r\n    var json = this.json;\r\n    var options = this.options;\r\n    var textureLoader = this.textureLoader;\r\n\r\n    var URL = window.URL || window.webkitURL;\r\n\r\n    var textureDef = json.textures[ textureIndex ];\r\n\r\n    var textureExtensions = textureDef.extensions || {};\r\n\r\n    var source;\r\n\r\n    if ( textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ] ) {\r\n\r\n        source = json.images[ textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].source ];\r\n\r\n    } else {\r\n\r\n        source = json.images[ textureDef.source ];\r\n\r\n    }\r\n\r\n    var sourceURI = source.uri;\r\n    var isObjectURL = false;\r\n\r\n    if ( source.bufferView !== undefined ) {\r\n\r\n        // Load binary image data from bufferView, if provided.\r\n\r\n        sourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\r\n\r\n            isObjectURL = true;\r\n            var blob = new Blob( [ bufferView ], { type: source.mimeType } );\r\n            sourceURI = URL.createObjectURL( blob );\r\n            return sourceURI;\r\n\r\n        } );\r\n\r\n    }\r\n\r\n    return Promise.resolve( sourceURI ).then( function ( sourceURI ) {\r\n\r\n        // Load Texture resource.\r\n\r\n        var loader = THREE.Loader.Handlers.get( sourceURI );\r\n\r\n        if ( ! loader ) {\r\n\r\n            loader = textureExtensions[ EXTENSIONS.MSFT_TEXTURE_DDS ]\r\n                ? parser.extensions[ EXTENSIONS.MSFT_TEXTURE_DDS ].ddsLoader\r\n                : textureLoader;\r\n\r\n        }\r\n\r\n        return new Promise( function ( resolve, reject ) {\r\n\r\n            loader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\r\n\r\n        } );\r\n\r\n    } ).then( function ( texture ) {\r\n\r\n        // Clean up resources and configure Texture.\r\n\r\n        if ( isObjectURL === true ) {\r\n\r\n            URL.revokeObjectURL( sourceURI );\r\n\r\n        }\r\n\r\n        texture.flipY = false;\r\n\r\n        if ( textureDef.name !== undefined ) texture.name = textureDef.name;\r\n\r\n        // Ignore unknown mime types, like DDS files.\r\n        if ( source.mimeType in MIME_TYPE_FORMATS ) {\r\n\r\n            texture.format = MIME_TYPE_FORMATS[ source.mimeType ];\r\n\r\n        }\r\n\r\n        var samplers = json.samplers || {};\r\n        var sampler = samplers[ textureDef.sampler ] || {};\r\n\r\n        texture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\r\n        texture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\r\n        texture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\r\n        texture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\r\n\r\n        return texture;\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Asynchronously assigns a texture to the given material parameters.\r\n * @param {Object} materialParams\r\n * @param {string} mapName\r\n * @param {Object} mapDef\r\n * @return {Promise}\r\n */\r\nGLTFParser.prototype.assignTexture = function ( materialParams, mapName, mapDef ) {\r\n\r\n    var parser = this;\r\n\r\n    return this.getDependency( 'texture', mapDef.index ).then( function ( texture ) {\r\n\r\n        switch ( mapName ) {\r\n\r\n            case 'aoMap':\r\n            case 'emissiveMap':\r\n            case 'metalnessMap':\r\n            case 'normalMap':\r\n            case 'roughnessMap':\r\n                texture.format = THREE.RGBFormat;\r\n                break;\r\n\r\n        }\r\n\r\n        if ( parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] ) {\r\n\r\n            var transform = mapDef.extensions !== undefined ? mapDef.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ] : undefined;\r\n\r\n            if ( transform ) {\r\n\r\n                texture = parser.extensions[ EXTENSIONS.KHR_TEXTURE_TRANSFORM ].extendTexture( texture, transform );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        materialParams[ mapName ] = texture;\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\r\n * @param {number} materialIndex\r\n * @return {Promise<THREE.Material>}\r\n */\r\nGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\r\n\r\n    var parser = this;\r\n    var json = this.json;\r\n    var extensions = this.extensions;\r\n    var materialDef = json.materials[ materialIndex ];\r\n\r\n    var materialType;\r\n    var materialParams = {};\r\n    var materialExtensions = materialDef.extensions || {};\r\n\r\n    var pending = [];\r\n\r\n    if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\r\n\r\n        var sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\r\n        materialType = sgExtension.getMaterialType( materialDef );\r\n        pending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\r\n\r\n    } else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\r\n\r\n        var kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\r\n        materialType = kmuExtension.getMaterialType( materialDef );\r\n        pending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\r\n\r\n    } else {\r\n\r\n        // Specification:\r\n        // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\r\n\r\n        materialType = THREE.MeshStandardMaterial;\r\n\r\n        var metallicRoughness = materialDef.pbrMetallicRoughness || {};\r\n\r\n        materialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\r\n        materialParams.opacity = 1.0;\r\n\r\n        if ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\r\n\r\n            var array = metallicRoughness.baseColorFactor;\r\n\r\n            materialParams.color.fromArray( array );\r\n            materialParams.opacity = array[ 3 ];\r\n\r\n        }\r\n\r\n        if ( metallicRoughness.baseColorTexture !== undefined ) {\r\n\r\n            pending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture ) );\r\n\r\n        }\r\n\r\n        materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\r\n        materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\r\n\r\n        if ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\r\n\r\n            pending.push( parser.assignTexture( materialParams, 'metalnessMap', metallicRoughness.metallicRoughnessTexture ) );\r\n            pending.push( parser.assignTexture( materialParams, 'roughnessMap', metallicRoughness.metallicRoughnessTexture ) );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if ( materialDef.doubleSided === true ) {\r\n\r\n        materialParams.side = THREE.DoubleSide;\r\n\r\n    }\r\n\r\n    var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\r\n\r\n    if ( alphaMode === ALPHA_MODES.BLEND ) {\r\n\r\n        materialParams.transparent = true;\r\n\r\n    } else {\r\n\r\n        materialParams.transparent = false;\r\n\r\n        if ( alphaMode === ALPHA_MODES.MASK ) {\r\n\r\n            materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n        pending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture ) );\r\n\r\n        materialParams.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n        if ( materialDef.normalTexture.scale !== undefined ) {\r\n\r\n            materialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n        pending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture ) );\r\n\r\n        if ( materialDef.occlusionTexture.strength !== undefined ) {\r\n\r\n            materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    if ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n        materialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\r\n\r\n    }\r\n\r\n    if ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial ) {\r\n\r\n        pending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture ) );\r\n\r\n    }\r\n\r\n    return Promise.all( pending ).then( function () {\r\n\r\n        var material;\r\n\r\n        if ( materialType === THREE.ShaderMaterial ) {\r\n\r\n            material = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\r\n\r\n        } else {\r\n\r\n            material = new materialType( materialParams );\r\n\r\n        }\r\n\r\n        if ( materialDef.name !== undefined ) material.name = materialDef.name;\r\n\r\n        // baseColorTexture, emissiveTexture, and specularGlossinessTexture use sRGB encoding.\r\n        if ( material.map ) material.map.encoding = THREE.sRGBEncoding;\r\n        if ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\r\n        if ( material.specularMap ) material.specularMap.encoding = THREE.sRGBEncoding;\r\n\r\n        assignExtrasToUserData( material, materialDef );\r\n\r\n        if ( materialDef.extensions ) addUnknownExtensionsToUserData( extensions, material, materialDef );\r\n\r\n        return material;\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * @param {THREE.BufferGeometry} geometry\r\n * @param {GLTF.Primitive} primitiveDef\r\n * @param {GLTFParser} parser\r\n * @return {Promise<THREE.BufferGeometry>}\r\n */\r\nfunction addPrimitiveAttributes( geometry, primitiveDef, parser ) {\r\n\r\n    var attributes = primitiveDef.attributes;\r\n\r\n    var pending = [];\r\n\r\n    function assignAttributeAccessor( accessorIndex, attributeName ) {\r\n\r\n        return parser.getDependency( 'accessor', accessorIndex )\r\n            .then( function ( accessor ) {\r\n\r\n                geometry.addAttribute( attributeName, accessor );\r\n\r\n            } );\r\n\r\n    }\r\n\r\n    for ( var gltfAttributeName in attributes ) {\r\n\r\n        var threeAttributeName = ATTRIBUTES[ gltfAttributeName ];\r\n\r\n        if ( ! threeAttributeName ) continue;\r\n\r\n        // Skip attributes already provided by e.g. Draco extension.\r\n        if ( threeAttributeName in geometry.attributes ) continue;\r\n\r\n        pending.push( assignAttributeAccessor( attributes[ gltfAttributeName ], threeAttributeName ) );\r\n\r\n    }\r\n\r\n    if ( primitiveDef.indices !== undefined && ! geometry.index ) {\r\n\r\n        var accessor = parser.getDependency( 'accessor', primitiveDef.indices ).then( function ( accessor ) {\r\n\r\n            geometry.setIndex( accessor );\r\n\r\n        } );\r\n\r\n        pending.push( accessor );\r\n\r\n    }\r\n\r\n    assignExtrasToUserData( geometry, primitiveDef );\r\n\r\n    return Promise.all( pending ).then( function () {\r\n\r\n        return primitiveDef.targets !== undefined\r\n            ? addMorphTargets( geometry, primitiveDef.targets, parser )\r\n            : geometry;\r\n\r\n    } );\r\n\r\n}\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\r\n *\r\n * Creates BufferGeometries from primitives.\r\n * If we can build a single BufferGeometry with .groups from multiple primitives, returns one BufferGeometry.\r\n * Otherwise, returns BufferGeometries without .groups as many as primitives.\r\n *\r\n * @param {Array<GLTF.Primitive>} primitives\r\n * @return {Promise<Array<THREE.BufferGeometry>>}\r\n */\r\nGLTFParser.prototype.loadGeometries = function ( primitives ) {\r\n\r\n    var parser = this;\r\n    var extensions = this.extensions;\r\n    var cache = this.primitiveCache;\r\n\r\n    var isMultiPass = isMultiPassGeometry( primitives );\r\n    var originalPrimitives;\r\n\r\n    if ( isMultiPass ) {\r\n\r\n        originalPrimitives = primitives; // save original primitives and use later\r\n\r\n        // We build a single BufferGeometry with .groups from multiple primitives\r\n        // because all primitives share the same attributes/morph/mode and have indices.\r\n\r\n        primitives = [ primitives[ 0 ] ];\r\n\r\n        // Sets .groups and combined indices to a geometry later in this method.\r\n\r\n    }\r\n\r\n    function createDracoPrimitive( primitive ) {\r\n\r\n        return extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\r\n            .decodePrimitive( primitive, parser )\r\n            .then( function ( geometry ) {\r\n\r\n                return addPrimitiveAttributes( geometry, primitive, parser );\r\n\r\n            } );\r\n\r\n    }\r\n\r\n    var pending = [];\r\n\r\n    for ( var i = 0, il = primitives.length; i < il; i ++ ) {\r\n\r\n        var primitive = primitives[ i ];\r\n        var cacheKey = createPrimitiveKey( primitive );\r\n\r\n        // See if we've already created this geometry\r\n        var cached = cache[ cacheKey ];\r\n\r\n        if ( cached ) {\r\n\r\n            // Use the cached geometry if it exists\r\n            pending.push( cached.promise );\r\n\r\n        } else {\r\n\r\n            var geometryPromise;\r\n\r\n            if ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\r\n\r\n                // Use DRACO geometry if available\r\n                geometryPromise = createDracoPrimitive( primitive );\r\n\r\n            } else {\r\n\r\n                // Otherwise create a new geometry\r\n                geometryPromise = addPrimitiveAttributes( new THREE.BufferGeometry(), primitive, parser );\r\n\r\n            }\r\n\r\n            // Cache this geometry\r\n            cache[ cacheKey ] = { primitive: primitive, promise: geometryPromise };\r\n\r\n            pending.push( geometryPromise );\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return Promise.all( pending ).then( function ( geometries ) {\r\n\r\n        if ( isMultiPass ) {\r\n\r\n            var baseGeometry = geometries[ 0 ];\r\n\r\n            // See if we've already created this combined geometry\r\n            var cache = parser.multiPassGeometryCache;\r\n            var cacheKey = createMultiPassGeometryKey( baseGeometry, originalPrimitives );\r\n            var cached = cache[ cacheKey ];\r\n\r\n            if ( cached !== null ) return [ cached.geometry ];\r\n\r\n            // Cloning geometry because of index override.\r\n            // Attributes can be reused so cloning by myself here.\r\n            var geometry = new THREE.BufferGeometry();\r\n\r\n            geometry.name = baseGeometry.name;\r\n            geometry.userData = baseGeometry.userData;\r\n\r\n            for ( var key in baseGeometry.attributes ) geometry.addAttribute( key, baseGeometry.attributes[ key ] );\r\n            for ( var key in baseGeometry.morphAttributes ) geometry.morphAttributes[ key ] = baseGeometry.morphAttributes[ key ];\r\n\r\n            var pendingIndices = [];\r\n\r\n            for ( var i = 0, il = originalPrimitives.length; i < il; i ++ ) {\r\n\r\n                pendingIndices.push( parser.getDependency( 'accessor', originalPrimitives[ i ].indices ) );\r\n\r\n            }\r\n\r\n            return Promise.all( pendingIndices ).then( function ( accessors ) {\r\n\r\n                var indices = [];\r\n                var offset = 0;\r\n\r\n                for ( var i = 0, il = originalPrimitives.length; i < il; i ++ ) {\r\n\r\n                    var accessor = accessors[ i ];\r\n\r\n                    for ( var j = 0, jl = accessor.count; j < jl; j ++ ) indices.push( accessor.array[ j ] );\r\n\r\n                    geometry.addGroup( offset, accessor.count, i );\r\n\r\n                    offset += accessor.count;\r\n\r\n                }\r\n\r\n                geometry.setIndex( indices );\r\n\r\n                cache[ cacheKey ] = { geometry: geometry, baseGeometry: baseGeometry, primitives: originalPrimitives };\r\n\r\n                return [ geometry ];\r\n\r\n            } );\r\n\r\n        } else if ( geometries.length > 1 && THREE.BufferGeometryUtils !== undefined ) {\r\n\r\n            // Tries to merge geometries with BufferGeometryUtils if possible\r\n\r\n            for ( var i = 1, il = primitives.length; i < il; i ++ ) {\r\n\r\n                // can't merge if draw mode is different\r\n                if ( primitives[ 0 ].mode !== primitives[ i ].mode ) return geometries;\r\n\r\n            }\r\n\r\n            // See if we've already created this combined geometry\r\n            var cache = parser.multiplePrimitivesCache;\r\n            var cacheKey = createArrayKeyBufferGeometry( geometries );\r\n            var cached = cache[ cacheKey ];\r\n\r\n            if ( cached ) {\r\n\r\n                if ( cached.geometry !== null ) return [ cached.geometry ];\r\n\r\n            } else {\r\n\r\n                var geometry = THREE.BufferGeometryUtils.mergeBufferGeometries( geometries, true );\r\n\r\n                cache[ cacheKey ] = { geometry: geometry, baseGeometries: geometries };\r\n\r\n                if ( geometry !== null ) return [ geometry ];\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return geometries;\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\r\n * @param {number} meshIndex\r\n * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\r\n */\r\nGLTFParser.prototype.loadMesh = function ( meshIndex ) {\r\n\r\n    var parser = this;\r\n    var json = this.json;\r\n    var extensions = this.extensions;\r\n\r\n    var meshDef = json.meshes[ meshIndex ];\r\n    var primitives = meshDef.primitives;\r\n\r\n    var pending = [];\r\n\r\n    for ( var i = 0, il = primitives.length; i < il; i ++ ) {\r\n\r\n        var material = primitives[ i ].material === undefined\r\n            ? createDefaultMaterial()\r\n            : this.getDependency( 'material', primitives[ i ].material );\r\n\r\n        pending.push( material );\r\n\r\n    }\r\n\r\n    return Promise.all( pending ).then( function ( originalMaterials ) {\r\n\r\n        return parser.loadGeometries( primitives ).then( function ( geometries ) {\r\n\r\n            var isMultiMaterial = geometries.length === 1 && geometries[ 0 ].groups.length > 0;\r\n\r\n            var meshes = [];\r\n\r\n            for ( var i = 0, il = geometries.length; i < il; i ++ ) {\r\n\r\n                var geometry = geometries[ i ];\r\n                var primitive = primitives[ i ];\r\n\r\n                // 1. create Mesh\r\n\r\n                var mesh;\r\n\r\n                var material = isMultiMaterial ? originalMaterials : originalMaterials[ i ];\r\n\r\n                if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\r\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\r\n                    primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\r\n                    primitive.mode === undefined ) {\r\n\r\n                    // .isSkinnedMesh isn't in glTF spec. See .markDefs()\r\n                    mesh = meshDef.isSkinnedMesh === true\r\n                        ? new THREE.SkinnedMesh( geometry, material )\r\n                        : new THREE.Mesh( geometry, material );\r\n\r\n                    if ( mesh.isSkinnedMesh === true ) mesh.normalizeSkinWeights(); // #15319\r\n\r\n                    if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\r\n\r\n                        mesh.drawMode = THREE.TriangleStripDrawMode;\r\n\r\n                    } else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\r\n\r\n                        mesh.drawMode = THREE.TriangleFanDrawMode;\r\n\r\n                    }\r\n\r\n                } else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\r\n\r\n                    mesh = new THREE.LineSegments( geometry, material );\r\n\r\n                } else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\r\n\r\n                    mesh = new THREE.Line( geometry, material );\r\n\r\n                } else if ( primitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\r\n\r\n                    mesh = new THREE.LineLoop( geometry, material );\r\n\r\n                } else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\r\n\r\n                    mesh = new THREE.Points( geometry, material );\r\n\r\n                } else {\r\n\r\n                    throw new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\r\n\r\n                }\r\n\r\n                if ( Object.keys( mesh.geometry.morphAttributes ).length > 0 ) {\r\n\r\n                    updateMorphTargets( mesh, meshDef );\r\n\r\n                }\r\n\r\n                mesh.name = meshDef.name || ( 'mesh_' + meshIndex );\r\n\r\n                if ( geometries.length > 1 ) mesh.name += '_' + i;\r\n\r\n                assignExtrasToUserData( mesh, meshDef );\r\n\r\n                meshes.push( mesh );\r\n\r\n                // 2. update Material depending on Mesh and BufferGeometry\r\n\r\n                var materials = isMultiMaterial ? mesh.material : [ mesh.material ];\r\n\r\n                var useVertexTangents = geometry.attributes.tangent !== undefined;\r\n                var useVertexColors = geometry.attributes.color !== undefined;\r\n                var useFlatShading = geometry.attributes.normal === undefined;\r\n                var useSkinning = mesh.isSkinnedMesh === true;\r\n                var useMorphTargets = Object.keys( geometry.morphAttributes ).length > 0;\r\n                var useMorphNormals = useMorphTargets && geometry.morphAttributes.normal !== undefined;\r\n\r\n                for ( var j = 0, jl = materials.length; j < jl; j ++ ) {\r\n\r\n                    var material = materials[ j ];\r\n\r\n                    if ( mesh.isPoints ) {\r\n\r\n                        var cacheKey = 'PointsMaterial:' + material.uuid;\r\n\r\n                        var pointsMaterial = parser.cache.get( cacheKey );\r\n\r\n                        if ( ! pointsMaterial ) {\r\n\r\n                            pointsMaterial = new THREE.PointsMaterial();\r\n                            THREE.Material.prototype.copy.call( pointsMaterial, material );\r\n                            pointsMaterial.color.copy( material.color );\r\n                            pointsMaterial.map = material.map;\r\n                            pointsMaterial.lights = false; // PointsMaterial doesn't support lights yet\r\n\r\n                            parser.cache.add( cacheKey, pointsMaterial );\r\n\r\n                        }\r\n\r\n                        material = pointsMaterial;\r\n\r\n                    } else if ( mesh.isLine ) {\r\n\r\n                        var cacheKey = 'LineBasicMaterial:' + material.uuid;\r\n\r\n                        var lineMaterial = parser.cache.get( cacheKey );\r\n\r\n                        if ( ! lineMaterial ) {\r\n\r\n                            lineMaterial = new THREE.LineBasicMaterial();\r\n                            THREE.Material.prototype.copy.call( lineMaterial, material );\r\n                            lineMaterial.color.copy( material.color );\r\n                            lineMaterial.lights = false; // LineBasicMaterial doesn't support lights yet\r\n\r\n                            parser.cache.add( cacheKey, lineMaterial );\r\n\r\n                        }\r\n\r\n                        material = lineMaterial;\r\n\r\n                    }\r\n\r\n                    // Clone the material if it will be modified\r\n                    if ( useVertexTangents || useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\r\n\r\n                        var cacheKey = 'ClonedMaterial:' + material.uuid + ':';\r\n\r\n                        if ( material.isGLTFSpecularGlossinessMaterial ) cacheKey += 'specular-glossiness:';\r\n                        if ( useSkinning ) cacheKey += 'skinning:';\r\n                        if ( useVertexTangents ) cacheKey += 'vertex-tangents:';\r\n                        if ( useVertexColors ) cacheKey += 'vertex-colors:';\r\n                        if ( useFlatShading ) cacheKey += 'flat-shading:';\r\n                        if ( useMorphTargets ) cacheKey += 'morph-targets:';\r\n                        if ( useMorphNormals ) cacheKey += 'morph-normals:';\r\n\r\n                        var cachedMaterial = parser.cache.get( cacheKey );\r\n\r\n                        if ( ! cachedMaterial ) {\r\n\r\n                            cachedMaterial = material.isGLTFSpecularGlossinessMaterial\r\n                                ? extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].cloneMaterial( material )\r\n                                : material.clone();\r\n\r\n                            if ( useSkinning ) cachedMaterial.skinning = true;\r\n                            if ( useVertexTangents ) cachedMaterial.vertexTangents = true;\r\n                            if ( useVertexColors ) cachedMaterial.vertexColors = THREE.VertexColors;\r\n                            if ( useFlatShading ) cachedMaterial.flatShading = true;\r\n                            if ( useMorphTargets ) cachedMaterial.morphTargets = true;\r\n                            if ( useMorphNormals ) cachedMaterial.morphNormals = true;\r\n\r\n                            parser.cache.add( cacheKey, cachedMaterial );\r\n\r\n                        }\r\n\r\n                        material = cachedMaterial;\r\n\r\n                    }\r\n\r\n                    materials[ j ] = material;\r\n\r\n                    // workarounds for mesh and geometry\r\n\r\n                    if ( material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined ) {\r\n\r\n                        console.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\r\n                        geometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\r\n\r\n                    }\r\n\r\n                    if ( material.isGLTFSpecularGlossinessMaterial ) {\r\n\r\n                        // for GLTFSpecularGlossinessMaterial(ShaderMaterial) uniforms runtime update\r\n                        mesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                mesh.material = isMultiMaterial ? materials : materials[ 0 ];\r\n\r\n            }\r\n\r\n            if ( meshes.length === 1 ) {\r\n\r\n                return meshes[ 0 ];\r\n\r\n            }\r\n\r\n            var group = new THREE.Group();\r\n\r\n            for ( var i = 0, il = meshes.length; i < il; i ++ ) {\r\n\r\n                group.add( meshes[ i ] );\r\n\r\n            }\r\n\r\n            return group;\r\n\r\n        } );\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\r\n * @param {number} cameraIndex\r\n * @return {Promise<THREE.Camera>}\r\n */\r\nGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\r\n\r\n    var camera;\r\n    var cameraDef = this.json.cameras[ cameraIndex ];\r\n    var params = cameraDef[ cameraDef.type ];\r\n\r\n    if ( ! params ) {\r\n\r\n        console.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\r\n        return;\r\n\r\n    }\r\n\r\n    if ( cameraDef.type === 'perspective' ) {\r\n\r\n        camera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( params.yfov ), params.aspectRatio || 1, params.znear || 1, params.zfar || 2e6 );\r\n\r\n    } else if ( cameraDef.type === 'orthographic' ) {\r\n\r\n        camera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\r\n\r\n    }\r\n\r\n    if ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\r\n\r\n    assignExtrasToUserData( camera, cameraDef );\r\n\r\n    return Promise.resolve( camera );\r\n\r\n};\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\r\n * @param {number} skinIndex\r\n * @return {Promise<Object>}\r\n */\r\nGLTFParser.prototype.loadSkin = function ( skinIndex ) {\r\n\r\n    var skinDef = this.json.skins[ skinIndex ];\r\n\r\n    var skinEntry = { joints: skinDef.joints };\r\n\r\n    if ( skinDef.inverseBindMatrices === undefined ) {\r\n\r\n        return Promise.resolve( skinEntry );\r\n\r\n    }\r\n\r\n    return this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\r\n\r\n        skinEntry.inverseBindMatrices = accessor;\r\n\r\n        return skinEntry;\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\r\n * @param {number} animationIndex\r\n * @return {Promise<THREE.AnimationClip>}\r\n */\r\nGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\r\n\r\n    var json = this.json;\r\n\r\n    var animationDef = json.animations[ animationIndex ];\r\n\r\n    var pendingNodes = [];\r\n    var pendingInputAccessors = [];\r\n    var pendingOutputAccessors = [];\r\n    var pendingSamplers = [];\r\n    var pendingTargets = [];\r\n\r\n    for ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\r\n\r\n        var channel = animationDef.channels[ i ];\r\n        var sampler = animationDef.samplers[ channel.sampler ];\r\n        var target = channel.target;\r\n        var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\r\n        var input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\r\n        var output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\r\n\r\n        pendingNodes.push( this.getDependency( 'node', name ) );\r\n        pendingInputAccessors.push( this.getDependency( 'accessor', input ) );\r\n        pendingOutputAccessors.push( this.getDependency( 'accessor', output ) );\r\n        pendingSamplers.push( sampler );\r\n        pendingTargets.push( target );\r\n\r\n    }\r\n\r\n    return Promise.all( [\r\n\r\n        Promise.all( pendingNodes ),\r\n        Promise.all( pendingInputAccessors ),\r\n        Promise.all( pendingOutputAccessors ),\r\n        Promise.all( pendingSamplers ),\r\n        Promise.all( pendingTargets )\r\n\r\n    ] ).then( function ( dependencies ) {\r\n\r\n        var nodes = dependencies[ 0 ];\r\n        var inputAccessors = dependencies[ 1 ];\r\n        var outputAccessors = dependencies[ 2 ];\r\n        var samplers = dependencies[ 3 ];\r\n        var targets = dependencies[ 4 ];\r\n\r\n        var tracks = [];\r\n\r\n        for ( var i = 0, il = nodes.length; i < il; i ++ ) {\r\n\r\n            var node = nodes[ i ];\r\n            var inputAccessor = inputAccessors[ i ];\r\n            var outputAccessor = outputAccessors[ i ];\r\n            var sampler = samplers[ i ];\r\n            var target = targets[ i ];\r\n\r\n            if ( node === undefined ) continue;\r\n\r\n            node.updateMatrix();\r\n            node.matrixAutoUpdate = true;\r\n\r\n            var TypedKeyframeTrack;\r\n\r\n            switch ( PATH_PROPERTIES[ target.path ] ) {\r\n\r\n                case PATH_PROPERTIES.weights:\r\n\r\n                    TypedKeyframeTrack = THREE.NumberKeyframeTrack;\r\n                    break;\r\n\r\n                case PATH_PROPERTIES.rotation:\r\n\r\n                    TypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\r\n                    break;\r\n\r\n                case PATH_PROPERTIES.position:\r\n                case PATH_PROPERTIES.scale:\r\n                default:\r\n\r\n                    TypedKeyframeTrack = THREE.VectorKeyframeTrack;\r\n                    break;\r\n\r\n            }\r\n\r\n            var targetName = node.name ? node.name : node.uuid;\r\n\r\n            var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\r\n\r\n            var targetNames = [];\r\n\r\n            if ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\r\n\r\n                // node can be THREE.Group here but\r\n                // PATH_PROPERTIES.weights(morphTargetInfluences) should be\r\n                // the property of a mesh object under group.\r\n\r\n                node.traverse( function ( object ) {\r\n\r\n                    if ( object.isMesh === true && object.morphTargetInfluences ) {\r\n\r\n                        targetNames.push( object.name ? object.name : object.uuid );\r\n\r\n                    }\r\n\r\n                } );\r\n\r\n            } else {\r\n\r\n                targetNames.push( targetName );\r\n\r\n            }\r\n\r\n            // KeyframeTrack.optimize() will modify given 'times' and 'values'\r\n            // buffers before creating a truncated copy to keep. Because buffers may\r\n            // be reused by other tracks, make copies here.\r\n            for ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\r\n\r\n                var track = new TypedKeyframeTrack(\r\n                    targetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\r\n                    THREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\r\n                    THREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\r\n                    interpolation\r\n                );\r\n\r\n                // Here is the trick to enable custom interpolation.\r\n                // Overrides .createInterpolant in a factory method which creates custom interpolation.\r\n                if ( sampler.interpolation === 'CUBICSPLINE' ) {\r\n\r\n                    track.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\r\n\r\n                        // A CUBICSPLINE keyframe in glTF has three output values for each input value,\r\n                        // representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\r\n                        // must be divided by three to get the interpolant's sampleSize argument.\r\n\r\n                        return new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\r\n\r\n                    };\r\n\r\n                    // Workaround, provide an alternate way to know if the interpolant type is cubis spline to track.\r\n                    // track.getInterpolation() doesn't return valid value for custom interpolant.\r\n                    track.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\r\n\r\n                }\r\n\r\n                tracks.push( track );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\r\n\r\n        return new THREE.AnimationClip( name, undefined, tracks );\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\r\n * @param {number} nodeIndex\r\n * @return {Promise<THREE.Object3D>}\r\n */\r\nGLTFParser.prototype.loadNode = function ( nodeIndex ) {\r\n\r\n    var json = this.json;\r\n    var extensions = this.extensions;\r\n    var parser = this;\r\n\r\n    var meshReferences = json.meshReferences;\r\n    var meshUses = json.meshUses;\r\n\r\n    var nodeDef = json.nodes[ nodeIndex ];\r\n\r\n    return ( function () {\r\n\r\n        // .isBone isn't in glTF spec. See .markDefs\r\n        if ( nodeDef.isBone === true ) {\r\n\r\n            return Promise.resolve( new THREE.Bone() );\r\n\r\n        } else if ( nodeDef.mesh !== undefined ) {\r\n\r\n            return parser.getDependency( 'mesh', nodeDef.mesh ).then( function ( mesh ) {\r\n\r\n                var node;\r\n\r\n                if ( meshReferences[ nodeDef.mesh ] > 1 ) {\r\n\r\n                    var instanceNum = meshUses[ nodeDef.mesh ] ++;\r\n\r\n                    node = mesh.clone();\r\n                    node.name += '_instance_' + instanceNum;\r\n\r\n                    // onBeforeRender copy for Specular-Glossiness\r\n                    node.onBeforeRender = mesh.onBeforeRender;\r\n\r\n                    for ( var i = 0, il = node.children.length; i < il; i ++ ) {\r\n\r\n                        node.children[ i ].name += '_instance_' + instanceNum;\r\n                        node.children[ i ].onBeforeRender = mesh.children[ i ].onBeforeRender;\r\n\r\n                    }\r\n\r\n                } else {\r\n\r\n                    node = mesh;\r\n\r\n                }\r\n\r\n                // if weights are provided on the node, override weights on the mesh.\r\n                if ( nodeDef.weights !== undefined ) {\r\n\r\n                    node.traverse( function ( o ) {\r\n\r\n                        if ( ! o.isMesh ) return;\r\n\r\n                        for ( var i = 0, il = nodeDef.weights.length; i < il; i ++ ) {\r\n\r\n                            o.morphTargetInfluences[ i ] = nodeDef.weights[ i ];\r\n\r\n                        }\r\n\r\n                    } );\r\n\r\n                }\r\n\r\n                return node;\r\n\r\n            } );\r\n\r\n        } else if ( nodeDef.camera !== undefined ) {\r\n\r\n            return parser.getDependency( 'camera', nodeDef.camera );\r\n\r\n        } else if ( nodeDef.extensions\r\n            && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ]\r\n            && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light !== undefined ) {\r\n\r\n            return parser.getDependency( 'light', nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS_PUNCTUAL ].light );\r\n\r\n        } else {\r\n\r\n            return Promise.resolve( new THREE.Object3D() );\r\n\r\n        }\r\n\r\n    }() ).then( function ( node ) {\r\n\r\n        if ( nodeDef.name !== undefined ) {\r\n\r\n            node.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\r\n\r\n        }\r\n\r\n        assignExtrasToUserData( node, nodeDef );\r\n\r\n        if ( nodeDef.extensions ) addUnknownExtensionsToUserData( extensions, node, nodeDef );\r\n\r\n        if ( nodeDef.matrix !== undefined ) {\r\n\r\n            var matrix = new THREE.Matrix4();\r\n            matrix.fromArray( nodeDef.matrix );\r\n            node.applyMatrix( matrix );\r\n\r\n        } else {\r\n\r\n            if ( nodeDef.translation !== undefined ) {\r\n\r\n                node.position.fromArray( nodeDef.translation );\r\n\r\n            }\r\n\r\n            if ( nodeDef.rotation !== undefined ) {\r\n\r\n                node.quaternion.fromArray( nodeDef.rotation );\r\n\r\n            }\r\n\r\n            if ( nodeDef.scale !== undefined ) {\r\n\r\n                node.scale.fromArray( nodeDef.scale );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return node;\r\n\r\n    } );\r\n\r\n};\r\n\r\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\r\n * @param {number} sceneIndex\r\n * @return {Promise<THREE.Scene>}\r\n */\r\nGLTFParser.prototype.loadScene = function () {\r\n\r\n    // scene node hierachy builder\r\n\r\n    function buildNodeHierachy( nodeId, parentObject, json, parser ) {\r\n\r\n        var nodeDef = json.nodes[ nodeId ];\r\n\r\n        return parser.getDependency( 'node', nodeId ).then( function ( node ) {\r\n\r\n            if ( nodeDef.skin === undefined ) return node;\r\n\r\n            // build skeleton here as well\r\n\r\n            var skinEntry;\r\n\r\n            return parser.getDependency( 'skin', nodeDef.skin ).then( function ( skin ) {\r\n\r\n                skinEntry = skin;\r\n\r\n                var pendingJoints = [];\r\n\r\n                for ( var i = 0, il = skinEntry.joints.length; i < il; i ++ ) {\r\n\r\n                    pendingJoints.push( parser.getDependency( 'node', skinEntry.joints[ i ] ) );\r\n\r\n                }\r\n\r\n                return Promise.all( pendingJoints );\r\n\r\n            } ).then( function ( jointNodes ) {\r\n\r\n                var meshes = node.isGroup === true ? node.children : [ node ];\r\n\r\n                for ( var i = 0, il = meshes.length; i < il; i ++ ) {\r\n\r\n                    var mesh = meshes[ i ];\r\n\r\n                    var bones = [];\r\n                    var boneInverses = [];\r\n\r\n                    for ( var j = 0, jl = jointNodes.length; j < jl; j ++ ) {\r\n\r\n                        var jointNode = jointNodes[ j ];\r\n\r\n                        if ( jointNode ) {\r\n\r\n                            bones.push( jointNode );\r\n\r\n                            var mat = new THREE.Matrix4();\r\n\r\n                            if ( skinEntry.inverseBindMatrices !== undefined ) {\r\n\r\n                                mat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\r\n\r\n                            }\r\n\r\n                            boneInverses.push( mat );\r\n\r\n                        } else {\r\n\r\n                            console.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', skinEntry.joints[ j ] );\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    mesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\r\n\r\n                }\r\n\r\n                return node;\r\n\r\n            } );\r\n\r\n        } ).then( function ( node ) {\r\n\r\n            // build node hierachy\r\n\r\n            parentObject.add( node );\r\n\r\n            var pending = [];\r\n\r\n            if ( nodeDef.children ) {\r\n\r\n                var children = nodeDef.children;\r\n\r\n                for ( var i = 0, il = children.length; i < il; i ++ ) {\r\n\r\n                    var child = children[ i ];\r\n                    pending.push( buildNodeHierachy( child, node, json, parser ) );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            return Promise.all( pending );\r\n\r\n        } );\r\n\r\n    }\r\n\r\n    //return function loadScene( sceneIndex ) {\r\n        const sceneIndex = 0;\r\n\r\n        var json = this.json;\r\n        var extensions = this.extensions;\r\n        var sceneDef = this.json.scenes[ sceneIndex ];\r\n        var parser = this;\r\n\r\n        var scene = new THREE.Scene();\r\n        if ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\r\n\r\n        assignExtrasToUserData( scene, sceneDef );\r\n\r\n        if ( sceneDef.extensions ) addUnknownExtensionsToUserData( extensions, scene, sceneDef );\r\n\r\n        var nodeIds = sceneDef.nodes || [];\r\n\r\n        var pending = [];\r\n\r\n        for ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\r\n\r\n            pending.push( buildNodeHierachy( nodeIds[ i ], scene, json, parser ) );\r\n\r\n        }\r\n\r\n        return Promise.all( pending ).then( function () {\r\n\r\n            return scene;\r\n\r\n        } );\r\n\r\n    //};\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/gltfloader.js","import App from './js/app';\nimport Game from './js/game';\n\nfunction initApp() {\n  const app = new App();\n  const game = new Game();\n\n  const canvas = document.getElementById(\"canvas\");\n\n  game.init(canvas);\n  app.setGame(game);\n\n  // 게임을 시작한다\n  $('#foreground').click(function (event) {\n    // 마우스 상태정보를 업데이트한다\n    // TODO : 일괄 코드로 변경필요\n    var gamePos = $('#canvas').offset();\n\n    const mouse = {};\n    mouse.x = event.pageX - gamePos.left;\n    mouse.y = event.pageY - gamePos.top;\n          \n    game.click(mouse.x, mouse.y);\n  });\n\n\n  // 플레이 버튼을 누르면 시작하게 해야 하지만... 일단은 그냥하자\n  app.start(\"TEST\");\n}\n\ninitApp();\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","import DisplayObject from './DisplayObject.js';\n\n/**\n * BitmapText\n * @extends ThreeUI.DisplayObject\n *\n * Used internally by ThreeUI, shouldn't be used directly\n * Use ThreeUI.createBitmapText instead to create text\n *\n * @param {ThreeUI} ui\n * @param {string} text\n * @param {float} scale\n * @param {int} x\n * @param {int} y\n */\n\nvar fallbackWidth = 6;\nvar fallbackHeight = 6;\n\nvar BitmapText = function(ui, text, scale, x, y, sheetImagePath, sheetDataPath) {\n\tthis.parseSheet(sheetImagePath, sheetDataPath);\n\n\tthis.scale = typeof scale !== 'undefined' ? scale : 1;\n\n\tthis.setText(text);\n\n\tvar x = typeof x !== 'undefined' ? x : 0;\n\tvar y = typeof y !== 'undefined' ? y : 0;\n\n\tvar dimensions = this.calculateDimensions();\n\n\t// Run DisplayObject constructor on this object\n\tDisplayObject.bind(this)(ui, x, y, dimensions.width, dimensions.height);\n\n\tthis.pivot.x = 0;\n\tthis.pivot.y = 0;\n};\n\nBitmapText.prototype = Object.create(DisplayObject.prototype);\n\n/**\n * Set the text of this BitmapText\n *\n * @param {string} text\n */\n\nBitmapText.prototype.setText = function(text) {\n\tif (this.text === text) return; // Safe-guard for update text spam\n\n\tthis.text = typeof text !== 'undefined' ? text.toString() : '';\n\tthis.characters = this.text.split('');\n\n\tvar dimensions = this.calculateDimensions();\n\tthis.width = dimensions.width;\n\tthis.height = dimensions.height;\n};\n\n/**\n * Parse a sheet from its image and data\n *\n * @param {string} sheetImagePath\n * @param {string} sheetDataPath\n */\n\nBitmapText.prototype.parseSheet = function(sheetImagePath, sheetDataPath) {\n\tif(typeof sheetImagePath === 'undefined' && !this.sheet) {\n\t\tthrow new Error('Sheet image path missing when creating sprite from sheet');\n\t}\n\n\tif(typeof sheetDataPath === 'undefined' && !this.sheetData) {\n\t\tthrow new Error('Sheet data path missing when creating sprite from sheet');\n\t}\n\n\tif (sheetImagePath || !this.sheet) {\n\t\tthis.sheet = AssetLoader.getAssetById(sheetImagePath);\n\t}\n\n\tif (sheetDataPath || !this.sheetData) {\n\t\tthis.sheetData = AssetLoader.getAssetById(sheetDataPath);\n\t}\n\n\tif (typeof this.sheetData !== 'object') {\n\t\tthrow new Error('Invalid sheet data ' + sheetDataPath + ' -- not an object');\n\t}\n\n\t// Parse all characters\n\tthis.characterData = {};\n\tvar keys = Object.keys(this.sheetData);\n\tvar length = keys.length;\n\tfor (var i = 0;i < length;i++) {\n\t\tvar char = keys[i];\n\t\tvar data = this.sheetData[char];\n\n\t\t// Make sure coords are within bounds\n\t\tdata['uv0'][0] = Math.min(1, Math.max(0, data['uv0'][0]));\n\t\tdata['uv0'][1] = Math.min(1, Math.max(0, data['uv0'][1]));\n\t\tdata['uv1'][0] = Math.min(1, Math.max(0, data['uv1'][0]));\n\t\tdata['uv1'][1] = Math.min(1, Math.max(0, data['uv1'][1]));\n\n\t\t// Calculate pixel coordinates\n\t\tthis.characterData[char] = {\n\t\t\tx: Math.round(data['uv0'][0] * this.sheet.width),\n\t\t\ty: Math.round((1 - data['uv0'][1]) * this.sheet.height),\n\t\t\twidth: Math.round((data['uv1'][0] - data['uv0'][0]) * this.sheet.width),\n\t\t\theight: Math.round((data['uv0'][1] - data['uv1'][1]) * this.sheet.height),\n\t\t};\n\n\t\t// Width and height need to be bigger than 0 or some browsers will break\n\t\tvar cData = this.characterData[char];\n\t\tcData.width = Math.max(0.00001, cData.width);\n\t\tcData.height = Math.max(0.00001, cData.height);\n\t}\n};\n\n/**\n * Calculates the dimensions of this BitmapText\n * Internal use only\n *\n * @return {object} {width, height}\n */\n\nBitmapText.prototype.calculateDimensions = function() {\n\tvar dimensions = {\n\t\twidth: 0,\n\t\theight: 0,\n\t};\n\n\tvar length = this.characters.length;\n\tfor (var i = 0;i < length;i++) {\n\t\tvar character = this.characters[i];\n\t\tif (!this.characterData[character]) {\n\t\t\t// Take dimensions of first existing character instead\n\t\t\tcharacter = Object.keys(this.characterData)[0];\n\t\t}\n\n\t\tvar data = this.characterData[character];\n\t\tdimensions.width += data ? data.width : 0;\n\t\tdimensions.height = Math.max(dimensions.height, data ? data.height : 0);\n\t}\n\n\tdimensions.width *= this.scale;\n\tdimensions.height *= this.scale;\n\n\treturn dimensions;\n};\n\n/**\n * Draw this BitmapText onto the provided context\n * Used internally by DisplayObject.render\n *\n * @param {CanvasRenderingContext2D} context\n * @param {int} x\n * @param {int} y\n */\n\nBitmapText.prototype.draw = function(context, x, y) {\n\tvar length = this.characters.length;\n\tfor (var i = 0;i < length;i++) {\n\t\tvar character = this.characters[i];\n\t\tvar bounds = this.drawCharacter(context, character, x, y);\n\n\t\t// Move up coordinates for the next character\n\t\tx = bounds.x + bounds.width;\n\t\ty = bounds.y;\n\t}\n};\n\n/**\n * Draw give character BitmapText onto the provided context\n * Used internally by DisplayObject.render\n *\n * @param {CanvasRenderingContext2D} context\n * @param {int} x\n * @param {int} y\n * @return {object} {x,y, width, height} returns bounding box\n */\n\nBitmapText.prototype.drawCharacter = function(context, character, x, y) {\n\tvar data = this.characterData[character];\n\tvar skipDraw = false;\n\n\tif (typeof data === 'undefined') { // Character does not exist in this BitmapText\n\t\tdata = {\n\t\t\twidth: fallbackWidth,\n\t\t\theight: fallbackHeight,\n\t\t};\n\t\tskipDraw = true;\n\t}\n\n\tvar width = data.width * this.scale;\n\tvar height = data.height * this.scale;\n\n\tif (!skipDraw) {\n\t\tcontext.drawImage(this.sheet, data.x, data.y, data.width, data.height, x, y, width, height);\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y,\n\t\twidth: width,\n\t\theight: height,\n\t};\n};\n\n\n// Export BitmapText as module\nexport default BitmapText;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/three-ui/BitmapText.js","\r\n export default class Transition {\r\n    constructor() {\r\n        this.startValue = 0;\r\n        this.endValue = 0;\r\n        this.duration = 0;\r\n        this.inProgress = false;\r\n    }\r\n\r\n    start(currentTime, updateFunction, stopFunction, startValue, endValue, duration) {\r\n        this.startTime = currentTime;\r\n        this.updateFunction = updateFunction;\r\n        this.stopFunction = stopFunction;\r\n        this.startValue = startValue;\r\n        this.endValue = endValue;\r\n        this.duration = duration;\r\n        this.inProgress = true;\r\n        this.count = 0;\r\n    }\r\n\r\n    step(currentTime) {\r\n        if(this.inProgress) {\r\n            if(this.count > 0) {\r\n                this.count -= 1;\r\n                log.debug(currentTime + \": jumped frame\");\r\n            }\r\n            else {\r\n                var elapsed = currentTime - this.startTime;\r\n        \r\n                if(elapsed > this.duration) {\r\n                    elapsed = this.duration;\r\n                }\r\n    \r\n                var diff = this.endValue - this.startValue;\r\n                var i = this.startValue + ((diff / this.duration) * elapsed);\r\n        \r\n                i = Math.round(i);\r\n        \r\n                if(elapsed === this.duration || i === this.endValue) {\r\n                    this.stop();\r\n                    if(this.stopFunction) {\r\n                        this.stopFunction();\r\n                    }\r\n                }\r\n                else if(this.updateFunction) {\r\n                    this.updateFunction(i);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    restart(currentTime, startValue, endValue) {\r\n        this.start(currentTime, this.updateFunction, this.stopFunction, startValue, endValue, this.duration);\r\n        this.step(currentTime);\r\n    }\r\n\r\n    stop() {\r\n        this.inProgress = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/transition.js","import Types from '../share/gametypes';\nimport Prop from './prop';\nimport Chest from './chest';\nimport Character from './character';\n\nclass EntityFactory {\n    static builders = [];\n    static createEntity(kind, id, name) {\n        if(!kind) {\n          \n            return;\n        }\n    \n        if(!_.isFunction(EntityFactory.builders[kind])) {\n            throw Error(kind + \" is not a valid Entity type\");\n        }\n        return EntityFactory.builders[kind](id, name);\n    };\n}\n\nEntityFactory.builders[Types.Entities.DEATHKNIGHT] = function(id) {\n    const entity = new Character(id, Types.Entities.DEATHKNIGHT);\n    return entity;\n};\n\nEntityFactory.builders[Types.Entities.CHEST] = function(id) {\n    return new Chest(id);\n};\n\nEntityFactory.builders[Types.Entities.FIRE] = function(id) {\n    const prop= new Prop(id, Types.Entities.FIRE);\n    prop.attachPointLight(0xffc0a0, 1, 128);\n    return prop;\n};\n\nexport default EntityFactory;\n\n\n// WEBPACK FOOTER //\n// ./src/js/entityfactory.js","import anchors from './anchors.js';\n\n/**\n * DisplayObject\n *\n * Used internally by ThreeUI, shouldn't be used directly\n * Use ThreeUI.createSprite and ThreeUI.createRectangle methods instead\n *\n * @param {ThreeUI} ui\n * @param {string} assetId\n * @param {int} x\n * @param {int} y\n */\n\nvar DisplayObject = function(ui, x, y, width, height) {\n\tthis.ui = ui;\n\tthis.x = typeof x !== 'undefined' ? x : 0;\n\tthis.y = typeof y !== 'undefined' ? y : 0;\n\tthis.width = typeof width !== 'undefined' ? width : 0;\n\tthis.height = typeof height !== 'undefined' ? height : 0;\n\tthis.rotation = 0;\n\tthis.alpha = 1;\n\tthis.visible = true;\n\tthis.pivot = {\n\t\tx: 0.5,\n\t\ty: 0.5\n\t};\n\tthis.anchor = {\n\t\tx: anchors.left,\n\t\ty: anchors.top\n\t};\n\tthis.smoothing = true;\n\tthis.stretch = {\n\t\tx: false,\n\t\ty: false\n\t};\n\tthis.offset = {\n\t\tleft: 0,\n\t\ttop: 0,\n\t\tright: 0,\n\t\tbottom: 0\n\t};\n\tthis.parent = undefined;\n};\n\n/**\n * Get the bounds for the DisplayObject's position in the canvas\n *\n * @return {Object} position {x, y, width, height}\n */\n\nDisplayObject.prototype.getBounds = function() {\n\tvar position = this.determinePositionInCanvas();\n\tvar dimensions = this.determineDimensionsInCanvas();\n\n\treturn {\n\t\tx: position.x,\n\t\ty: position.y,\n\t\twidth: dimensions.width,\n\t\theight: dimensions.height\n\t};\n};\n\n/**\n * Get the bounds for this DisplayObject's parent\n *\n * @return {Object} position {x, y, width, height}\n */\n\nDisplayObject.prototype.getParentBounds = function () {\n\tif (typeof this.parent === 'undefined') {\n\t\treturn {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\twidth: this.ui.width,\n\t\t\theight: this.ui.height\n\t\t};\n\t} else if (this.parent instanceof DisplayObject) {\n\t\treturn this.parent.getBounds();\n\t} else {\n\t\tthrow new Error('DisplayObject.parent should always be an instance of DisplayObject');\n\t}\n};\n\n/**\n * Determine the DisplayObject's actual position in the canvas based on anchor and pivot\n *\n * @return {Object} position {x, y}\n */\n\nDisplayObject.prototype.determinePositionInCanvas = function() {\n\tvar position = {\n\t\tx: typeof this.x === 'number' ? this.x : 0,\n\t\ty: typeof this.y === 'number' ? this.y : 0\n\t};\n\n\tposition = this.adjustPositionForAnchor(position.x, position.y);\n\tposition = this.adjustPositionForPivot(position.x, position.y);\n\n\treturn position;\n};\n\n/**\n * Determine the DisplayObject's actual dimensions in the canvas based on stretching\n *\n * @return {Object} dimensions {width, height}\n */\n\nDisplayObject.prototype.determineDimensionsInCanvas = function() {\n\tvar dimensions = {\n\t\twidth: typeof this.width === 'number' ? this.width : 0,\n\t\theight: typeof this.height === 'number' ? this.height : 0\n\t};\n\t\n\treturn dimensions;\n};\n\n\n/**\n * Adjust given position for anchor\n *\n * @param {int} x\n * @param {int} y\n * @return {Object} position {x, y}\n */\n\nDisplayObject.prototype.adjustPositionForAnchor = function(x , y) {\n\tvar parentBounds = this.getParentBounds();\n\n\t// Adjust position for X anchor\n\tif (this.anchor.x === anchors.left) {\n\t\tx += parentBounds.x;\n\t} else if (this.anchor.x === anchors.right) {\n\t\tx += (parentBounds.x + parentBounds.width - this.width);\n\t} else if (this.anchor.x === anchors.center) {\n\t\tx += (parentBounds.x + parentBounds.width/2 - this.width/2);\n\t}\n\n\n\t// Adjust position for Y anchor\n\tif (this.anchor.y === anchors.top) {\n\t\ty += parentBounds.y;\n\t} else if (this.anchor.y === anchors.bottom) {\n\t\ty += parentBounds.y + parentBounds.height - this.height;\n\t} else if (this.anchor.y === anchors.center) {\n\t\ty += parentBounds.y + parentBounds.height/2 - this.height/2;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n};\n\n/**\n * Gets calculated offset in canvas space\n *\n * @return {Object} offset {x, y}\n */\n\nDisplayObject.prototype.getOffsetInCanvas = function() {\n\tvar offset = {\n\t\tleft: this.offset.left,\n\t\ttop: this.offset.top,\n\t\tright: this.offset.right,\n\t\tbottom: this.offset.bottom,\n\t};\n\n\t// Transform percentage offsets to numbers\n\tvar parentBounds;\n\n\tvar keys = Object.keys(offset);\n\tvar length = keys.length;\n\tfor (var i = 0;i < length;i++) {\n\t\tvar key = keys[i];\n\t\tvar value = offset[key];\n\t\tif (typeof value !== 'number') {\n\t\t\tparentBounds = parentBounds || this.getParentBounds();\n\n\t\t\tvar percValue = parseFloat(value.match(/^([0-9\\.]+)%$/)[1]);\n\t\t\toffset[key] = percValue / 100 * parentBounds.width;\n\t\t}\n\t}\n\n\treturn offset;\n};\n\n/**\n * Adjust given position for pivot\n *\n * @param {int} x\n * @param {int} y\n * @return {Object} position {x, y}\n */\n\nDisplayObject.prototype.adjustPositionForPivot = function(x , y) {\n\t// Adjust position for pivot\n\tx = x - this.width * this.pivot.x;\n\ty = y - this.height * this.pivot.y;\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n};\n\n/**\n * Should this DisplayObject receive events in its current state?\n */\n\nDisplayObject.prototype.shouldReceiveEvents = function() {\n\treturn this.visible;\n};\n\n/**\n * Attach a click event handler to this DisplayObject\n *\n * @param {Function} callback\n */\n\nDisplayObject.prototype.onClick = function(callback) {\n\tthis.ui.addEventListener('click', callback, this);\n};\n\n/**\n * Render this DisplayObject onto the provided context\n *\n * @param {CanvasRenderingContext2D} context\n */\n\nDisplayObject.prototype.render = function(context) {\n\tif (!this.visible) return;\n\n\tcontext.save();\n\n\tvar bounds = this.getBounds();\n\n\t/*if (this.rotation) { // Rotation is in degrees\n\t\tvar radians = (Math.PI / 180) * this.rotation;\n\n\t\tvar pivotAdjustment = this.adjustPositionForPivot(0, 0);\n\t\tvar moveX = bounds.x - pivotAdjustment.x;\n \t\tvar moveY = bounds.y - pivotAdjustment.y;\n\n\t\tcontext.translate(moveX, moveY);\n\t\tcontext.rotate(radians);\n\t\tcontext.translate(-moveX, -moveY);\n\t}*/\n\n\tcontext.globalAlpha = this.alpha;\n\n\tif (typeof context['mozImageSmoothingEnabled'] !== 'undefined') context['mozImageSmoothingEnabled'] = this.smoothing;\n\tif (typeof context['webkitImageSmoothingEnabled'] !== 'undefined') context['webkitImageSmoothingEnabled'] = this.smoothing;\n\tif (typeof context['msImageSmoothingEnabled'] !== 'undefined') context['msImageSmoothingEnabled'] = this.smoothing;\n\tif (typeof context['imageSmoothingEnabled'] !== 'undefined') context['imageSmoothingEnabled'] = this.smoothing;\n\n\tthis.draw(context, bounds.x, bounds.y, bounds.width, bounds.height);\n\n\tcontext.restore();\n};\n\n/**\n * Draw the current sprite on the provided context, varies per DisplayObject type\n *\n * @param {CanvasRenderingContext2D} context\n * @param {int} x\n * @param {int} y\n * @param {int} width\n * @param {int} height\n */\n\nDisplayObject.draw = function(context, x, y, width, height) {\n\t// Override me\n};\n\n/**\n * Getter for visibility\n */\nObject.defineProperty(DisplayObject.prototype, '_proxied_visible', { // Set on proxied, as we're already observing\n\tget: function() {\n\t\tif (this.parent && this.parent !== this && !this.parent.visible) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn this._visible;\n\t\t}\n\t},\n\tset: function(toggle) {\n\t\treturn this._visible = toggle;\n\t},\n});\n\n\n// Export DisplayObject as module\nexport default DisplayObject;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/three-ui/DisplayObject.js","export default class Phase {\n\n    begin() {\n        if (this.begin_callback) {\n            this.begin_callback();\n        }\n    }\n\n    end() {\n        if (this.end_callback) {\n            this.end_callback();\n        }\n    }\n\n    click(x, y) {\n        if (this.click_callback) {\n            this.click_callback(x, y);\n        }\n    }\n\n    onBegin(callback) {\n        this.begin_callback = callback;\n    }\n\n    onEnd(callback) {\n        this.end_callback = callback;\n    }\n\n    transitionTo(phase) {\n        // 현재 페이즈에서 다음 페이즈로 넘어간다\n    }\n\n    onClick(callback) {\n        this.click_callback = callback;\n    }\n\n    onUpdate(callback) {\n        this.update_callback = callback;\n    }\n\n    update() {\n        if (this.update_callback) {\n            this.update_callback();\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/phase.js","const EasingFunction = {\r\n    linear(w) {\r\n        return w\r\n    },\r\n\r\n    outCubic(w) {\r\n        w = w -1\r\n        return w*w*w + 1\r\n    },\r\n\r\n    inCubic(w) {\r\n        return w*w*w\r\n    },\r\n\r\n    inOutCubic(w) {\r\n        w = w * 2\r\n        if (w < 1) {\r\n            return w*w*w / 2\r\n        } else {\r\n            w = w - 2\r\n            return (w*w*w + 2) / 2\r\n        }\r\n    },\r\n\r\n    inOutSine(w) {\r\n        return (1 - Math.cos(Math.PI * w)) / 2\r\n    },\r\n\r\n    outExponential(w) {\r\n        if (w < 1) {\r\n            return 1- Math.pow(2, -10*w)\r\n        } else {\r\n            return 1\r\n        }\r\n    },\r\n\r\n    outBounce(w) {\r\n        if (w < 4/11.0) {\r\n            return (121 * w * w) / 16.0\r\n        } else if (w < 8/11.0) {\r\n            return  (363 / 40.0 * w * w) - (99 / 10.0 * w) + 17/5.0\r\n        } else if (w < 9/10.0) {\r\n            return (4356 / 361.0 * w * w) - (35442 / 1805.0 * w) + 16061/1805.0\r\n        } else {\r\n            return (54 / 5.0 * w * w) - (513 / 25.0 * w) + 268/25.0\r\n        }\r\n    },\r\n\r\n    outBack(w) {\r\n        const s = 1.70158\r\n        w = w - 1\r\n        return w*w*((s+1)*w+s) + 1\r\n    }\r\n};\r\n\r\n/*export declare interface MovieClipTween{\r\n    target: string\r\n    from: number\r\n    to: number\r\n    easing: Function\r\n}\r\n\r\n\r\nexport declare interface MovieClipTimeline {\r\n    start: number,\r\n    end: number,\r\n    sprite: Sprite,\r\n    tweens: MovieClipTween[]\r\n}*/\r\n\r\nconst MoveClipPlayMode = {\r\n    Loop: 1,\r\n    Stop: 2,\r\n    Destory: 3\r\n}\r\n\r\nexport default class MovieClip {\r\n    static Timeline(startFrame, endFrame, mesh, tweens) {\r\n        if (!Array.isArray(tweens)) {\r\n            tweens = [tweens]\r\n        }\r\n\r\n        return {\r\n            startFrame: startFrame,\r\n            endFrame: endFrame,\r\n            mesh: mesh,\r\n            tweens: tweens\r\n        }\r\n    }\r\n\r\n    constructor(...timelines) {\r\n\r\n        if (!Array.isArray(timelines)) {\r\n            timelines = [timelines]\r\n        }\r\n        \r\n        this._timelines = timelines\r\n        this._frame = 0\r\n        this._playing = false\r\n        this._stopHandler = null\r\n        this._mode = MoveClipPlayMode.Stop // 마지막에 정지가 가장 기본 모드이다\r\n\r\n        // 마지막 프레임을 찾는다\r\n        let lastFrame = 0\r\n        for(const tl of timelines) {\r\n            lastFrame = Math.max(lastFrame, tl.endFrame)\r\n        }\r\n        this._lastFrame = lastFrame\r\n    }\r\n    \r\n    playAndStop(handler) {\r\n        // 가장 기본적인 실행을 한다\r\n        // 마지막 프레임이 지나면 정지를 한다\r\n        this._playing = true\r\n        this._mode = MoveClipPlayMode.Stop\r\n        this._stopHandler = handler\r\n    }\r\n\r\n    playAndDestroy(handler) {\r\n        this._playing = true\r\n        this._mode = MoveClipPlayMode.Destory\r\n        this._stopHandler = handler\r\n    }\r\n\r\n    playLoop() {\r\n        this._playing = true\r\n        this._mode = MoveClipPlayMode.Loop\r\n    }\r\n\r\n    update() {\r\n        this._frame++\r\n        if (this._playing) {\r\n            if (this._frame >= this._lastFrame) {\r\n                // 플레이모드에 따라서 루프, 정지, 파괴를 선택한다\r\n                switch(this._mode) {\r\n                    case MoveClipPlayMode.Loop: {\r\n                        this._frame = 1\r\n                        break\r\n                    }\r\n                    case  MoveClipPlayMode.Destory: {\r\n                        if (this._stopHandler) {\r\n                            this._stopHandler()\r\n                        }\r\n                        return\r\n                    }\r\n                    default: {\r\n                        // 정지시킨다\r\n                        this._playing = false\r\n                        this._frame = this._lastFrame\r\n                        if (this._stopHandler) {\r\n                            this._stopHandler()\r\n                        }\r\n                        break\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(const timeline of this._timelines) {\r\n                // 각각의 액션을 실행한다\r\n                if (this._frame < timeline.startFrame || timeline.endFrame < this._frame) {\r\n                    continue\r\n                }\r\n\r\n                const dist = timeline.endFrame - timeline.startFrame\r\n                const weight = dist > 0 ? (this._frame - timeline.startFrame) / dist : 0\r\n                const mesh = timeline.mesh;\r\n\r\n                for(const tween of timeline.tweens) {\r\n                    const target = tween[0];\r\n                    const from = tween[1];\r\n                    const to = tween[2];\r\n                    const easing = EasingFunction[tween[3]];\r\n\r\n                    const value = easing(weight) * (to - from) + from\r\n                    switch(target) {\r\n                        case \"scaleX\": {\r\n                            //mesh.setScale(value, image.scale.y)\r\n                            break\r\n                        }\r\n                        case \"scaleY\": {\r\n                            //image.setScale(image.scale.x, value)\r\n                            break\r\n                        }\r\n                        case \"scale\": {\r\n                            ///image.setScale(value, value)\r\n                            break\r\n                        }\r\n                        case \"x\": {\r\n                            //image.setPosition(value, image.y)\r\n                            mesh.position.x = value;\r\n                            break\r\n                        }\r\n                        case \"y\": {\r\n                            //image.setPosition(image.x, value)\r\n                            mesh.position.y = value;\r\n                            break\r\n                        }\r\n                        case \"alpha\": {\r\n                            mesh.material.transparent = true;\r\n                            mesh.material.opacity = value;\r\n                            break\r\n                        }\r\n                        case \"rotation\": {\r\n                            image.setRotation(value)\r\n                            break\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/movieclip.js","import Phase from \"./phase\";\nimport EntityFactory from \"./entityfactory\";\nimport Types from \"../share/gametypes\";\nimport ThreeUI from '../lib/three-ui/ThreeUI';\nimport MovieClip from \"./movieclip\";\n\nexport default class Battle extends Phase {\n    \n    constructor(game) {\n        super();\n        \n        this.teams = [null, null]; // 서로 싸우는 두개의 팀을 둔다.\n        this.playerSide = null; \n        this.playerTeam = null;\n        \n        this.turn = 0;\n        this.state = Types.BattleState.BEGIN;\n        \n\n        this.onBegin(() => {\n            console.log(\"배틀을 시작합니다\");\n            // 적을 등장시킨다\n            const enemy = EntityFactory.createEntity(Types.Entities.DEATHKNIGHT, 11);\n            enemy.setSprite(game.sprites[\"deathknight\"]);\n            enemy.setGridPosition(8, 3);\n            game.addEntity(enemy);\n            // game.scene.add(enemy.mesh);\n\n            for (const block of enemy.shatters) {\n                game.scene.add(block);\n            }\n\n            enemy.mesh.material.transparent = true;\n            enemy.mesh.material.opacity = 0;\n            enemy.fadeIn(game.currentTime);\n\n\n            this.playerSide = 0;\n            this.teams[0] = game.player; \n            this.teams[1] = enemy;\n            this.playerTeam = this.teams[this.playerSide];\n\n\n            // ui 빌드. 자동화를 어떻게 하지?\n            const ui = game.ui;\n            const rectangle = ui.createRectangle('#FF6D92', 400, 250, 100, 50);\n            rectangle.anchor.x = ThreeUI.anchors.left;\n            rectangle.anchor.y = ThreeUI.anchors.top;\n            const text = ui.createText('Attack', 20, 'Arial', 'white');\n            text.textAlign = 'center';\n            text.textBaseline = 'middle';\n            text.anchor.x = ThreeUI.anchors.center;\n            text.anchor.y = ThreeUI.anchors.center;\n            text.parent = rectangle;\n\n            rectangle.onClick(() => {\n                // 플레이어가 상대를 공격한다\n                this.attack(game.player, enemy);\n            });\n\n            rectangle.visible = false;\n            this.controlUI = rectangle;\n        });\n\n\n        this.onUpdate(() => {\n            if (this.state === Types.BattleState.BEGIN) {\n                // 턴의 시작\n                this.turn ++;\n                \n                //플레이어 턴이라면 ux 를 설정한다\n                if (this.isPlayerTurn()) {\n                    this.showPlayerUI();\n                }\n                this.state = Types.BattleState.MAIN;\n\n            } else if(this.state === Types.BattleState.MAIN) {\n                for(const team of this.teams) {\n                    if (team.isDead) {\n                        //\n                    }\n                }\n\n            } else if(this.state === Types.BattleState.END) {\n                if (this.isPlayerTurn()) {\n                    this.hidePlayerUI();\n                }\n            }\n\n            // 턴 메인 \n            if (this.attackerMovie) {\n                this.attackerMovie.update();\n            }\n            \n            if (this.deadMovie) {\n                this.deadMovie.update();\n            }\n            \n            \n        });\n    }\n\n    showPlayerUI() {\n        this.controlUI.visible = true;\n    }\n\n    hidePlayerUI() {\n        this.controlUI.visible = false;\n    }\n\n\n    isPlayerTurn() {\n        return ((this.turn + 1) % 2 === this.playerSide);\n    }\n\n    attack(attacker, target) {\n       const from = attacker.mesh.position;\n        const to = target.mesh.position;\n        // 공격애니메이션을 튼다\n        this.attackerMovie = new MovieClip(\n            new MovieClip.Timeline(0, 30, attacker.mesh, [[\"x\", from.x, (to.x + from.x)/2, \"linear\"], [\"y\", from.y, from.y + 10, \"outCubic\"]]),\n            new MovieClip.Timeline(31, 60, attacker.mesh, [[\"x\", (to.x + from.x)/2, to.x, \"linear\"], [\"y\", from.y + 10, from.y, \"inCubic\"]]),\n            new MovieClip.Timeline(61, 70, attacker.mesh, [[\"x\", to.x, to.x, \"linear\"], [\"y\", from.y, from.y, \"linear\"]]),\n            new MovieClip.Timeline(71, 100, attacker.mesh, [[\"x\", to.x, (to.x + from.x)/2, \"linear\"], [\"y\", from.y, from.y + 10, \"outCubic\"]]),\n            new MovieClip.Timeline(101, 130, attacker.mesh, [[\"x\", (to.x + from.x)/2, from.x, \"linear\"], [\"y\", from.y + 10, from.y, \"inCubic\"]]),\n        );\n\n        this.attackerMovie.playAndDestroy(() => {\n            // 여기서 상대를 제거한다.\n            this.attackerMovie = null;\n\n            this.deadMovie = new MovieClip(\n                new MovieClip.Timeline(0, 30, target.mesh, [[\"alpha\", 1, 0, \"linear\"]])\n            );\n\n            this.deadMovie.playAndDestroy(() => {\n                //game.removeEntity(target);\n                //game.scene.remove(target.mesh);\n                this.deadMovie = null;\n                this.state = Types.BattleState.END\n            });\n        })\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/battle.js","import Phase from \"./phase\";\nimport Battle from \"./battle\";\n\nexport default class Cutscene extends Phase {\n    constructor(game, kind) {\n        super();\n\n        this.game = game;\n        this.kind = kind;\n\n        this.onBegin(() => {\n            if (kind === \"enter\") {\n                // 플레이어를 위치에 옮기고 페이드인을 시도한다\n                game.player.mesh.visible = false;\n                this.skipFrame = 60;\n            }\n        });\n\n        this.onUpdate(() => {\n            if (kind === \"enter\") {\n                if (this.skipFrame > 0) {\n                    --this.skipFrame;\n                } else {\n                    if (game.player.mesh.visible) {\n                        if (!game.player.isFading) {\n                            // 여기서 다음 페이즈로 넘어간다\n                            game.nextPhase = new Battle(game);\n                        }\n                    } else {\n                        game.player.mesh.visible = true;\n                        game.player.mesh.material.transparent = true;\n                        game.player.mesh.material.opacity = 0;\n                        game.player.fadeIn(game.currentTime);\n                    }\n                }\n            }\n            \n        });\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/cutscene.js","import Types from '../share/gametypes';\r\nimport Prop from \"./prop\";\r\n\r\nexport default class Chest extends Prop {\r\n    constructor(id) { \r\n        super(id, Types.Entities.CHEST);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/chest.js","import DisplayObject from './DisplayObject.js';\n\n/**\n * Sprite\n * @extends ThreeUI.DisplayObject\n * \n * Used internally by ThreeUI, shouldn't be used directly\n * Use ThreeUI.createSprite instead to create sprites\n * \n * @param {ThreeUI} ui\n * @param {string} assetPath \n * @param {int} x \n * @param {int} y \n * @param {int} width\n * @param {int} height\n */\n\nvar Sprite = function(ui, assetPath, x, y, width, height, sheetImagePath, sheetDataPath) {\n\tthis.setAssetPath(assetPath, sheetImagePath, sheetDataPath);\n\n\tvar x = typeof x !== 'undefined' ? x : 0;\n\tvar y = typeof y !== 'undefined' ? y : 0;\n\tvar width = typeof width !== 'undefined' ? width : null;\n\tvar height = typeof height !== 'undefined' ? height : null;\n\n\tif (this.asset) {\n\t\twidth = width !== null ? width : this.asset.width;\n\t\theight = height !== null ? height : this.asset.height;\n\t} else if (this.sheet && this.sheetImageData) {\n\t\twidth = width !== null ? width : this.sheetImageData['frame']['w'];\n\t\theight = height !== null ? height : this.sheetImageData['frame']['h'];\n\t}\n\n\t// Run DisplayObject constructor on this object\n\tDisplayObject.bind(this)(ui, x, y, width, height);\n};\n\nSprite.prototype = Object.create(DisplayObject.prototype);\n\n/**\n * Draw this Sprite onto the provided context\n * Used internally by DisplayObject.render\n * \n * @param {CanvasRenderingContext2D} context\n * @param {int} x\n * @param {int} y\n * @param {int} width\n * @param {int} height\n */\n\nSprite.prototype.draw = function(context, x, y, width, height) {\n\tif (this.sheet && this.sheetImageData) {\n\t\t// We're handling a sprite from a sheet\n\t\tcontext.drawImage(this.sheet, this.sheetImageData['frame']['x'], this.sheetImageData['frame']['y'], this.sheetImageData['frame']['w'], this.sheetImageData['frame']['h'], x, y, width, height);\n\t} else {\n\t\tcontext.drawImage(this.asset, x, y, width, height);\n\t}\n};\n\n/**\n * Adjust the asset ID of this sprite\n * \n * @param {string} assetPath\n * @param {string} sheetImagePath\n * @param {string} sheetDataPath\n */\n\nSprite.prototype.setAssetPath = function(assetPath, sheetImagePath, sheetDataPath) {\n\tthis.assetPath = assetPath;\n\tif (typeof sheetImagePath === 'undefined' && !this.sheet) {\n\t\tthis.asset = AssetLoader.getAssetById(assetPath);\n\t\tthis.sheet = null;\n\t} else {\n\t\tthis.asset = null;\n\t\tthis.parseSheet(assetPath, sheetImagePath, sheetDataPath)\n\t}\n};\n\n/**\n * Parse a sheet from its image and data\n * \n * @param {string} sheetImagePath\n * @param {string} sheetDataPath\n */\n\nSprite.prototype.parseSheet = function(assetPath, sheetImagePath, sheetDataPath) {\n\tif(typeof sheetDataPath === 'undefined' && !this.sheetData) {\n\t\tthrow new Error('Sheet data path missing when creating sprite from sheet');\n\t}\n\n\tif (sheetImagePath || !this.sheet) {\n\t\tthis.sheet = AssetLoader.getAssetById(sheetImagePath);\n\t}\n\n\tif (sheetDataPath || !this.sheetData) {\n\t\tthis.sheetData = AssetLoader.getAssetById(sheetDataPath);\n\t}\n\n\tif (typeof this.sheetData !== 'object') {\n\t\tthrow new Error('Invalid sheet data ' + sheetDataPath + ' -- not an object');\n\t} else if(!this.sheetData['frames']) {\n\t\tthrow new Error('Invalid sheet data ' + sheetDataPath + ' -- does not have frames');\n\t}\n\n\tvar data;\n\tthis.sheetData['frames'].forEach(function(frame) {\n\t\tif (frame['filename'] === assetPath) {\n\t\t\tdata = frame;\n\t\t}\n\t});\t\n\n\tif (!data) {\n\t\tthrow new Error('Asset \"' + assetPath + '\" does not exist in sheet \"' + sheetDataPath + '\"');\n\t}\n\n\tthis.sheetImageData = data;\n};\n\n// Export Sprite as module\nexport default Sprite;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/three-ui/Sprite.js","import Player from './player';\r\nimport Updater from './updater';\r\nimport Map from './map';\r\nimport Pathfinder from './pathfinder';\r\nimport Entity from './entity';\r\nimport EntityFactory from './entityfactory';\r\nimport GLTFLoader from './gltfloader';\r\n\r\nimport OrbitControls  from 'three-orbitcontrols';\r\nimport Chest from './chest';\r\nimport Cutscene from './cutscene';\r\n\r\nimport ThreeUI from '../lib/three-ui/ThreeUI';\r\n\r\n\r\nexport default class Game {\r\n    init(canvas) {\r\n        const scene = new THREE.Scene();\r\n\r\n        const camera = new THREE.PerspectiveCamera( 30, canvas.width / canvas.height, 1, 1000 );\r\n        camera.position.set( 0, 100, 250 );\r\n\r\n        const width = canvas.width;\r\n        const height = canvas.height;\r\n\r\n        const renderer = new THREE.WebGLRenderer({canvas: canvas});\r\n        renderer.shadowMap.enabled = true;\r\n        renderer.setPixelRatio( window.devicePixelRatio );\r\n        renderer.setSize( width, height);\r\n\r\n        const ui = new ThreeUI(canvas, height);\r\n\r\n        this.renderer = renderer;\r\n        this.camera = camera;\r\n        this.scene = scene;\r\n        this.ui = ui;\r\n\r\n        //===========================\r\n        // 테스트 코드이다.\r\n        const map = {\r\n            width : 10,\r\n            height: 10,\r\n            tileSize: 16,\r\n        }\r\n\r\n        const geometry = new THREE.PlaneBufferGeometry(map.width * map.tileSize, map.height * map.tileSize, map.width, map.height );\r\n        const material = new THREE.MeshStandardMaterial( { color: 0x405040, roughness: 0.75 } );\r\n        const plane  = new THREE.Mesh( geometry, material );\r\n        plane.rotation.order = 'YXZ';\r\n        plane.rotation.x = -Math.PI/2;\r\n        plane.receiveShadow = true;\r\n        // 클릭 판정용 바운딩박스\r\n        geometry.computeBoundingBox();\r\n        // 월드용 오프셋을 기록한다\r\n\r\n\r\n        //scene.add( plane );\r\n\r\n        this._terrain = plane;\r\n\r\n        // TODO : 카메라 시선을 플레이어에 맞추어야 한다\r\n        camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n        new OrbitControls(camera, renderer.domElement)\r\n\r\n        // 게임 정보\r\n        this.entities = {};\r\n        this.entityGrid = null;\r\n        this.phase = null;\r\n        this.nextPhase = null;\r\n    }\r\n\r\n    tick() {\r\n        this.currentTime = new Date().getTime();\r\n\r\n        // 로직 -> 렌더링 순서로 업데이트를 한다\r\n        this.updater.update();\r\n        this.ui.render();\r\n        this.renderer.render( this.scene, this.camera );\r\n        \r\n        if (!this.isStopped) {\r\n            requestAnimationFrame(this.tick.bind(this));\r\n        }\r\n    }\r\n\r\n    start() {\r\n        this.tick();\r\n    }\r\n\r\n    stop() {\r\n        this.isStopped = true;\r\n    }\r\n\r\n    run(username) {\r\n        // 리소스를 로딩하고 끝날때까지 기다린다.\r\n        this.loadSprites();\r\n        this.loadMap();\r\n        this.loadModel();\r\n        this.updater = new Updater(this);\r\n\r\n        const wait = setInterval(() => {\r\n            if (this.map.isLoaded && this.isSpritesLoaded() && this.model) {\r\n                clearInterval(wait);\r\n\r\n                // 리소스 로딩이 끝나면 서버에 접속한다\r\n                // 접속이 완료되면 핸들러들을 연결하고 게임을 시작한다\r\n                // TODO : 서버 접속을 만들어야 한다\r\n\r\n                // 월드를 생성한다\r\n                // TODO : terrain 생성코드를 나중에 여기로 옮겨와야 한다\r\n                while (this.scene.children.length > 0) {\r\n                    this.scene.remove(this.scene.children[0]);\r\n                }\r\n               \r\n\r\n                    \r\n                // 맵을 초기화한다\r\n                // TODO: 맵을 여기서 초기화하도록 코드를 옮겨야 한다\r\n                this.scene.add(this._terrain);\r\n                this.initEntityGrid();\r\n                Entity.setGridSize(this.map.tilesize);\r\n\r\n                // 월드 라이트를 추가\r\n                // TODO : map에 따라서 라이트를 바꾸어야 한다\r\n                // 헤미스피어를 붙인다\r\n                const hemiLight = new THREE.HemisphereLight( 0xffffff, 0xffffff, 1 );\r\n                hemiLight.color.setHSL( 0.6, 1, 0.6 );\r\n                hemiLight.groundColor.setHSL( 0.095, 1, 0.75 );\r\n                hemiLight.position.set( 0, 50, 0 );\r\n                this.scene.add( hemiLight );\r\n\r\n                \r\n                // 프랍을 배치한다\r\n                let id = 2;\r\n                for(const propData of this.map.props) {\r\n                    const propEntity = EntityFactory.createEntity(propData.kind, id++, \"\");\r\n                    // 배치할 좌표를 계산한다\r\n                    propEntity.setGridPosition(propData.x, propData.y);\r\n                    \r\n                    if (propEntity instanceof Chest) {\r\n                        propEntity.mesh = this.model.scene.clone();\r\n                        propEntity.mesh.scale.set(3, 3, 3);\r\n                    }\r\n                    \r\n                    this.addEntity(propEntity);\r\n                    this.scene.add(propEntity.mesh);\r\n                }\r\n\r\n\r\n                this.pathfinder = new Pathfinder(this.map.width, this.map.height)\r\n\r\n\r\n                // 플레이어를 선언한다\r\n                const player = new Player(1, username, \"\");\r\n                player.setSprite(this.sprites[\"clotharmor\"]);\r\n                player.onRequestPath((x, y) => {\r\n                    const path = this.findPath(player, x, y);\r\n                    return path;\r\n                });\r\n\r\n                player.onStopPathing((x, y) => {\r\n                    if(player.target instanceof Chest) {\r\n                        const chest = player.target;\r\n                        player.target = null;\r\n                        // 다음 프레임에 상자를 제거해버린다. \r\n                        // TODO : 이것도 좀 영리하게 만들수 없을까?\r\n                        requestAnimationFrame(() => {\r\n                            this.removeEntity(chest);\r\n                            this.scene.remove(chest.mesh);\r\n                            \r\n                        });\r\n                    }\r\n                });\r\n\r\n                // TODO : 화면에 배치하고 보이지 않게 하여야 한다\r\n                player.setGridPosition(3, 3);\r\n                this.addEntity(player);\r\n                this.unregisterEntityPosition(player); // 플레이어를 엔티티에 포함시키지않기위한 특수처리\r\n                this.player = player;\r\n\r\n                // 게임 씬 페이즈를 선언한다.\r\n                // 등장컷신 -> 전투 -> (승리컷신) -> 탐험 -> 퇴장컷신 . 순으로 만들어진다.\r\n                // 등장 컷신 \r\n                this.nextPhase = new Cutscene(this, \"enter\");\r\n\r\n                // 월드에 추가를 한다\r\n                // TODO : entity 를 일괄로 처리할 수 있는 장치가 필요하다?>\r\n                //this.scene.add(this.player.mesh);\r\n                this.start();\r\n\r\n                //==========================================\r\n                // 테스트 코드\r\n                for (const block of player.shatters) {\r\n                   \r\n                    // this.scene.add(block)\r\n                }\r\n\r\n                {\r\n                    const geometry2_ = new THREE.PlaneGeometry( 32, 32 );\r\n                    geometry2_.computeFaceNormals();\r\n                    geometry2_.computeBoundingSphere();\r\n                    const tex = new THREE.Texture();\r\n                    tex.image = this.sprites[\"clotharmor_l\"];\r\n                    console.log(tex.image.width, tex.image.height);\r\n                    tex.format = THREE.RGBAFormat;\r\n                    tex.needsUpdate  = true;\r\n                    tex.wrapS = tex.wrapT = THREE.RepeatWrapping;\r\n                    tex.repeat.set(1/2, -1);\r\n                    //tex.anisotropy = this.renderer.getMaxAnisotropy();\r\n                    tex.magFilter = THREE.NearestFilter;\r\n                    tex.minFilter = THREE.NearestFilter;\r\n\r\n\r\n                    const material2_ = new THREE.MeshStandardMaterial({ map: tex, transparent: true });\r\n                    material2_.precision = \"highhp\";\r\n                    var mesh__ = new THREE.Mesh( geometry2_, material2_ );\r\n                    this.mesh__ = mesh__;\r\n                    //mesh__.lookAt(this.camera.position);\r\n                    this.scene.add(mesh__);\r\n\r\n                    console.log(geometry2_);\r\n\r\n\r\n                    var geometry_ = new THREE.SphereGeometry( 5, 32, 32 );\r\n                    var material_ = new THREE.MeshBasicMaterial({transparent: true, opacity: 0});\r\n                    var sphere = new THREE.Mesh( geometry_, material_ );\r\n                    sphere.scale.set(1, 2, 1);\r\n                    sphere.castShadow = true;\r\n                    //sphere.position.set(24, 16, 12);\r\n                    mesh__.add(sphere);\r\n\r\n                    let count = 0;\r\n                    setInterval(() => {\r\n                        count = (count + 1) % 2;\r\n                        tex.offset.x = count / 2;\r\n                    }, 200);\r\n                    //this.scene.add( sphere );\r\n                }\r\n                //==========================================\r\n            }\r\n        }, 100);\r\n\r\n    }\r\n\r\n    loadSprites() {\r\n        const spriteNames = [\"clotharmor\", \"sword1\", \"deathknight\", \"clotharmor_l\"];\r\n        const sprites = {};\r\n        for (const spName of spriteNames) {\r\n            const img = new Image();\r\n            img.src = `static/${spName}.png`;\r\n            img.onload = function() {\r\n                img.isLoaded = true;\r\n            }\r\n\r\n            sprites[spName] = img;\r\n        }\r\n\r\n        this.sprites = sprites;\r\n\r\n    }\r\n\r\n    loadMap() {\r\n        this.map = new Map();\r\n        this.map.offset = {\r\n            x: this._terrain.geometry.boundingBox.min.x,\r\n            y: this._terrain.geometry.boundingBox.min.y\r\n        };\r\n    }\r\n\r\n    loadModel() {\r\n        //const modelNames = [\"treasure\"];\r\n        var loader = new GLTFLoader();\r\n        loader.load(\"static/treasure.glb\", (glb) => {\r\n            this.model = glb; // 임시 코드... 모델을 어떻게 관리할까?\r\n        },undefined, function ( error ) {\r\n\r\n            console.error( error );\r\n        \r\n        });\r\n    }\r\n\r\n    isSpritesLoaded() {\r\n        if (_.any(this.sprites, function(sprite) { return !sprite.isLoaded; } )) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    initEntityGrid() {\r\n        this.entityGrid = [];\r\n        for(let i=0; i < this.map.height; i += 1) {\r\n            this.entityGrid[i] = [];\r\n            for(let j=0; j < this.map.width; j += 1) {\r\n                this.entityGrid[i][j] = {};\r\n            }\r\n        }\r\n    }\r\n\r\n    addEntity(entity) {\r\n        if(this.entities[entity.id] === undefined) {\r\n            this.entities[entity.id] = entity;\r\n            this.registerEntityPosition(entity);\r\n        }\r\n    }\r\n\r\n    removeEntity(entity) {\r\n        if(entity.id in this.entities) {\r\n            this.unregisterEntityPosition(entity);\r\n            delete this.entities[entity.id];\r\n        }\r\n    }\r\n  \r\n    registerEntityPosition(entity) {\r\n        const x = entity.gridX;\r\n        const y = entity.gridY;\r\n    \r\n        this.entityGrid[y][x][entity.id] = entity;\r\n    }\r\n\r\n    unregisterEntityPosition(entity) {\r\n        const x = entity.gridX;\r\n        const y = entity.gridY;\r\n\r\n        if(this.entityGrid[y][x][entity.id]) {\r\n            delete this.entityGrid[y][x][entity.id];\r\n        }\r\n    }\r\n\r\n    getEntityAt(x, y) {\r\n        if(this.map.isOutOfBounds(x, y) || !this.entityGrid) {\r\n            return null;\r\n        }\r\n        \r\n        const entities = this.entityGrid[y][x];\r\n        let entity = null;\r\n        if(_.size(entities) > 0) {\r\n            entity = entities[_.keys(entities)[0]];\r\n        } else {\r\n            // entity = this.getItemAt(x, y);\r\n        }\r\n        return entity;\r\n    }\r\n\r\n    getItemAt(x, y) {\r\n        return null;\r\n    }\r\n\r\n    getGridPosition(intersect, boundingbox) {\r\n        const ts = this.map.tilesize;\r\n        const xIndex = Math.floor((intersect.x - boundingbox.min.x) / ts );\r\n        const yIndex = Math.floor((intersect.z - boundingbox.min.y) / ts );\r\n        \r\n        return { x: xIndex, y: yIndex };\r\n    }\r\n\r\n    click(x, y) {\r\n        if (this.ui) {\r\n            const result = this.ui.clickHandler(x, y);\r\n            if (result) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        if (this.phase) {\r\n            this.phase.click(x, y);\r\n        }\r\n\r\n        const size = new THREE.Vector2();\r\n        this.renderer.getSize(size);\r\n\r\n        const mouse = new THREE.Vector2();\r\n        mouse.x = (x / size.x) * 2 - 1;\r\n        mouse.y = -(y / size.y) * 2 + 1;\r\n\r\n        const raycaster = new THREE.Raycaster();\r\n        raycaster.setFromCamera( mouse, this.camera );\r\n        // 지형터치를 어떻게 만들지?\r\n        const intersects = raycaster.intersectObjects(this.scene.children);\r\n        for ( const inter of intersects) {\r\n            const pos = this.getGridPosition(inter.point, this._terrain.geometry.boundingBox);\r\n\r\n            // 이제 여기서 무엇을 클릭했는지 조사한다\r\n            const entity = this.getEntityAt(pos.x, pos.y);\r\n            if (entity instanceof Chest) {\r\n                // 상자를 향해  이동한다\r\n                this.player.setTarget(entity);\r\n                this.player.follow(entity);\r\n            } else {\r\n                // 해당 위치로 플레이어를 이동시킨다\r\n                this.player.go(pos.x, pos.y);\r\n            }\r\n        }\r\n    }\r\n\r\n    forEachEntity(callback) {\r\n        _.each(this.entities, function(entity) {\r\n            callback(entity);\r\n        });\r\n    }\r\n\r\n   \r\n    findPath(character, x, y) {\r\n        const path = [];\r\n        if(this.map.isColliding(x, y)) {\r\n            // 해당 위치가 갈수 없는 곳이다\r\n            return path;\r\n        }\r\n    \r\n        if(this.pathfinder && character) {\r\n            const path = this.pathfinder.findPath(this.map.grid, character, x, y, false);\r\n            return path;\r\n        } \r\n        return [];\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/game.js","// ux 와 게임 화면 구성을 여기서 연결한다\r\nexport default class App {\r\n    setGame(game) {\r\n        this.game = game;\r\n    }\r\n\r\n    center() {\r\n        window.scrollTo(0, 1);\r\n    }\r\n\r\n    start(username) {\r\n        // set option \r\n        this.center();\r\n        this.game.run();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/app.js","import Character from \"./character\";\r\nimport Types from '../share/gametypes';\r\n\r\nexport default class Updater {\r\n    constructor(game) {\r\n        this.game = game;\r\n    }\r\n\r\n    update() {\r\n        this.updateEntities();\r\n        this.updateTransitions();\r\n        this.updatePhase();\r\n    }\r\n\r\n    updateEntities() {\r\n        this.game.forEachEntity((entity) => {\r\n            const isCharacter = entity instanceof Character;\r\n            if (isCharacter && entity.isLoaded) {\r\n                this.updateCharacter(entity);\r\n            }\r\n            this.updateEntityFading(entity);\r\n        });\r\n    }\r\n\r\n    updateCharacter(c) {\r\n        // 캐릭터의 이동 위치를 업데이트한다\r\n        const fps = 60;\r\n        const tick = Math.round(16 / Math.round((c.moveSpeed / (1000 / fps))));\r\n    \r\n        if(c.isMoving() && c.movement.inProgress === false) {\r\n            if(c.orientation === Types.Orientations.LEFT) {\r\n                c.movement.start(this.game.currentTime,\r\n                                function(x) {\r\n                                    c.x = x;\r\n                                    c.hasMoved();\r\n                                },\r\n                                function() {\r\n                                    c.x = c.movement.endValue;\r\n                                    c.hasMoved();\r\n                                    c.nextStep();\r\n                                },\r\n                                c.x - tick,\r\n                                c.x - 16,\r\n                                c.moveSpeed);\r\n            }\r\n            else if(c.orientation === Types.Orientations.RIGHT) {\r\n                c.movement.start(this.game.currentTime,\r\n                                function(x) {\r\n                                    c.x = x;\r\n                                    c.hasMoved();\r\n                                },\r\n                                function() {\r\n                                    c.x = c.movement.endValue;\r\n                                    c.hasMoved();\r\n                                    c.nextStep();\r\n                                },\r\n                                c.x + tick,\r\n                                c.x + 16,\r\n                                c.moveSpeed);\r\n            }\r\n            else if(c.orientation === Types.Orientations.UP) {\r\n                c.movement.start(this.game.currentTime,\r\n                                function(y) {\r\n                                    c.y = y;\r\n                                    c.hasMoved();\r\n                                },\r\n                                function() {\r\n                                    c.y = c.movement.endValue;\r\n                                    c.hasMoved();\r\n                                    c.nextStep();\r\n                                },\r\n                                c.y - tick,\r\n                                c.y - 16,\r\n                                c.moveSpeed);\r\n            }\r\n            else if(c.orientation === Types.Orientations.DOWN) {\r\n                c.movement.start(this.game.currentTime,\r\n                                function(y) {\r\n                                    c.y = y;\r\n                                    c.hasMoved();\r\n                                },\r\n                                function() {\r\n                                    c.y = c.movement.endValue;\r\n                                    c.hasMoved();\r\n                                    c.nextStep();\r\n                                },\r\n                                c.y + tick,\r\n                                c.y + 16,\r\n                                c.moveSpeed);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateTransitions() {\r\n        // 타일의 중앙으로 옮겨놓는다\r\n        const offsetX = this.game.map.offset.x + this.game.map.tilesize / 2;\r\n        const offsetY = 0;\r\n        const offsetZ = this.game.map.offset.y + this.game.map.tilesize / 2;\r\n\r\n        this.game.forEachEntity((entity) => {\r\n            const m = entity.movement;\r\n            if (m) {\r\n                if (m.inProgress) {\r\n                    m.step(this.game.currentTime)\r\n                }\r\n            }\r\n\r\n            // 엔티티의 실제 위치를 2d (x, y) 에서 3d(x,y,z) 으로 변경한다\r\n            if (entity.mesh) {\r\n                entity.mesh.position.set(\r\n                    offsetX + entity.x + entity.offset.x , \r\n                    offsetY + entity.offset.y, \r\n                    offsetZ + entity.y + entity.offset.z);\r\n            }\r\n\r\n            // 쉐터 박스를 테스트 한다\r\n            if (entity.shatters) {\r\n                for (const block of entity.shatters) {\r\n                    if (!block._pos_init) {\r\n                        block.position.x += entity.mesh.position.x;\r\n                        block.position.z += entity.mesh.position.z;\r\n                        block._pos_init = true;\r\n\r\n                        block.shatterTick = Math.random() * 100;\r\n                    }\r\n               \r\n                    const d = 1;\r\n                    --block.shatterTick;\r\n                    if (block.shatterTick < 0) {\r\n\r\n                        if (Math.abs(entity.mesh.position.x - block.position.x) < d) { block.position.x = entity.mesh.position.x; }\r\n                        else { block.position.x += d/(entity.mesh.position.x - block.position.x); }\r\n\r\n                        if (Math.abs(entity.mesh.position.y - block.position.y) < d*3) { block.position.y = entity.mesh.position.y; }\r\n                        else { block.position.y += d*3/(entity.mesh.position.y - block.position.y); }\r\n\r\n                        if (Math.abs(entity.mesh.position.z - block.position.z) < d) { block.position.z = entity.mesh.position.z; }\r\n                        else { block.position.z += d/(entity.mesh.position.z - block.position.z); }\r\n                    }\r\n\r\n                }\r\n            }\r\n        })\r\n\r\n        if (this.game.mesh__) {\r\n            this.game.mesh__.position.copy(this.game.player.mesh.position);\r\n            this.game.mesh__.position.y = 11;\r\n        }\r\n    }\r\n\r\n    updateEntityFading(entity) {\r\n        if(entity && entity.isFading) {\r\n            const duration = 1000;\r\n            const t = this.game.currentTime;\r\n            const dt = t - entity.startFadingTime;\r\n        \r\n            if(dt > duration) {\r\n                entity.isFading = false;\r\n                if (entity.mesh) {\r\n                    entity.mesh.material.opacity = 1;\r\n                    entity.mesh.material.transparent = false;\r\n                }\r\n\r\n            } else {\r\n                if (entity.mesh) {\r\n                    entity.mesh.material.transparent = true;\r\n                    entity.mesh.material.opacity = dt / duration;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePhase() {\r\n        if (this.game.nextPhase) {\r\n            if (this.game.phase) {\r\n                // 끝내고 다시 시작한다\r\n                this.game.phase.end();\r\n                this.game.phase = null;\r\n            } else {\r\n                this.game.phase = this.game.nextPhase;\r\n                this.game.nextPhase = null;\r\n\r\n                this.game.phase.begin();\r\n            }\r\n        }\r\n        \r\n        if (this.game.phase) {\r\n            this.game.phase.update();\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/updater.js","var isFirefox = function() {\n\treturn /firefox/i.test(navigator.userAgent);\n}();\n\nmodule.exports.isFirefox = isFirefox;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/three-ui/utils/browserDetection.js","export default class Entity {\r\n    constructor(id, kind) {\r\n        this.id = id;\r\n        this.kind = kind;\r\n        this.isLoaded = false;\r\n    }\r\n\r\n    static setGridSize(size) {\r\n        Entity.gridSize = size;\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    setGridPosition(x, y) {\r\n        this.gridX = x;\r\n        this.gridY = y;\r\n    \r\n        this.setPosition(x * Entity.gridSize, y * Entity.gridSize);\r\n    }\r\n\r\n    fadeIn(currentTime) {\r\n        this.isFading = true;\r\n        this.startFadingTime = currentTime;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/entity.js","import DisplayObject from './DisplayObject.js';\n\n/**\n * Text\n * @extends DisplayObject\n *\n * Used internally by ThreeUI, shouldn't be used directly\n * Use ThreeUI.createText instead to create text\n *\n * @param {ThreeUI} ui\n * @param {string} text\n * @param {int} size\n * @param {string} font\n * @param {string} color\n * @param {int} x\n * @param {int} y\n */\n\nvar Text = function(ui, text, size, font, color, x, y) {\n\tthis.textAlign = 'left';\n\tthis.textBaseline = 'alphabetic';\n\n\tthis.text = typeof text !== 'undefined' ? text : '';\n\tthis.size = typeof size !== 'undefined' ? size : 12;\n\tthis.font = typeof font !== 'undefined' ? font : 'Arial';\n\tthis.color = typeof color !== 'undefined' ? color : '#000000';\n\tthis.lineHeight = 1; // Modifier on text size\n\n\tvar x = typeof x !== 'undefined' ? x : 0;\n\tvar y = typeof y !== 'undefined' ? y : 0;\n\n\t// Run DisplayObject constructor on this object\n\tDisplayObject.bind(this)(ui, x, y);\n};\n\nText.prototype = Object.create(DisplayObject.prototype);\n\n/**\n * Draw this Text onto the provided context\n * Used internally by DisplayObject.render\n *\n * @param {CanvasRenderingContext2D} context\n * @param {int} x\n * @param {int} y\n */\n\nText.prototype.draw = function(context, x, y) {\n\tcontext.font = this.size + 'px ' + this.font;\n\tcontext.fillStyle = this.color;\n\tcontext.textAlign = this.textAlign;\n\tcontext.textBaseline = this.textBaseline;\n\n\tvar lines = this.text.split('\\n');\n\n\tvar midLinePoint = 0; // Default to top\n\tif (this.textVerticalAlign === 'center') {\n\t\tmidLinePoint = lines.length / 2 - 0.5;\n\t} else if (this.textVerticalAlign === 'bottom') {\n\t\tmidLinePoint = lines.length - 1;\n\t}\n\n\tfor (var idx = 0;idx < lines.length;idx++) {\n\t\tvar line = lines[idx];\n\t\tvar lineY = y + (idx - midLinePoint) * (this.size * this.lineHeight);\n\t\tcontext.fillText(line, x, lineY);\n\t}\n};\n\n// Export Text as module\nexport default Text;\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/three-ui/Text.js","/**\n * Different anchor types for positioning\n */\n\nexport default {\n\tcenter: 1,\n\tleft: 2,\n\tright: 3,\n\ttop: 4,\n\tbottom: 5\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/three-ui/anchors.js","\r\nvar mask = new Int32Array(4096);\r\n\r\nfunction mesher(volume, dims) {\r\n    var vertices = [], faces = []\r\n      , dimsX = dims[0]\r\n      , dimsY = dims[1]\r\n      , dimsXY = dimsX * dimsY;\r\n  \r\n    //Sweep over 3-axes\r\n    for(var d=0; d<3; ++d) {\r\n      var i, j, k, l, w, W, h, n, c\r\n        , u = (d+1)%3\r\n        , v = (d+2)%3\r\n        , x = [0,0,0]\r\n        , q = [0,0,0]\r\n        , du = [0,0,0]\r\n        , dv = [0,0,0]\r\n        , dimsD = dims[d]\r\n        , dimsU = dims[u]\r\n        , dimsV = dims[v]\r\n        , qdimsX, qdimsXY\r\n        , xd\r\n  \r\n      if (mask.length < dimsU * dimsV) {\r\n        mask = new Int32Array(dimsU * dimsV);\r\n      }\r\n  \r\n      q[d] =  1;\r\n      x[d] = -1;\r\n  \r\n      qdimsX  = dimsX  * q[1]\r\n      qdimsXY = dimsXY * q[2]\r\n  \r\n      // Compute mask\r\n      while (x[d] < dimsD) {\r\n        xd = x[d]\r\n        n = 0;\r\n  \r\n        for(x[v] = 0; x[v] < dimsV; ++x[v]) {\r\n          for(x[u] = 0; x[u] < dimsU; ++x[u], ++n) {\r\n            var a = xd >= 0      && volume[x[0]      + dimsX * x[1]          + dimsXY * x[2]          ]\r\n              , b = xd < dimsD-1 && volume[x[0]+q[0] + dimsX * x[1] + qdimsX + dimsXY * x[2] + qdimsXY]\r\n            if (a ? b : !b) {\r\n              mask[n] = 0; continue;\r\n            }\r\n            mask[n] = a ? a : -b;\r\n          }\r\n        }\r\n  \r\n        ++x[d];\r\n  \r\n        // Generate mesh for mask using lexicographic ordering\r\n        n = 0;\r\n        for (j=0; j < dimsV; ++j) {\r\n          for (i=0; i < dimsU; ) {\r\n            c = mask[n];\r\n            if (!c) {\r\n              i++;  n++; continue;\r\n            }\r\n  \r\n            //Compute width\r\n            w = 1;\r\n            while (c === mask[n+w] && i+w < dimsU) w++;\r\n  \r\n            //Compute height (this is slightly awkward)\r\n            for (h=1; j+h < dimsV; ++h) {\r\n              k = 0;\r\n              while (k < w && c === mask[n+k+h*dimsU]) k++\r\n              if (k < w) break;\r\n            }\r\n  \r\n            // Add quad\r\n            // The du/dv arrays are reused/reset\r\n            // for each iteration.\r\n            du[d] = 0; dv[d] = 0;\r\n            x[u]  = i;  x[v] = j;\r\n  \r\n            if (c > 0) {\r\n              dv[v] = h; dv[u] = 0;\r\n              du[u] = w; du[v] = 0;\r\n            } else {\r\n              c = -c;\r\n              du[v] = h; du[u] = 0;\r\n              dv[u] = w; dv[v] = 0;\r\n            }\r\n            var vertex_count = vertices.length;\r\n            vertices.push([x[0],             x[1],             x[2]            ]);\r\n            vertices.push([x[0]+du[0],       x[1]+du[1],       x[2]+du[2]      ]);\r\n            vertices.push([x[0]+du[0]+dv[0], x[1]+du[1]+dv[1], x[2]+du[2]+dv[2]]);\r\n            vertices.push([x[0]      +dv[0], x[1]      +dv[1], x[2]      +dv[2]]);\r\n            faces.push([vertex_count, vertex_count+1, vertex_count+2, vertex_count+3, c]);\r\n  \r\n            //Zero-out mask\r\n            W = n + w;\r\n            for(l=0; l<h; ++l) {\r\n              for(k=n; k<W; ++k) {\r\n                mask[k+l*dimsU] = 0;\r\n              }\r\n            }\r\n  \r\n            //Increment counters and continue\r\n            i += w; n += w;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return { vertices:vertices, faces:faces };\r\n\r\n}\r\n\r\nfunction mesher2(volume, dims) {\r\n \r\n    var vertices = [], faces = [], x = [0,0,0], n = 0;\r\n  for(x[2]=0; x[2]<dims[2]; ++x[2])\r\n  for(x[1]=0; x[1]<dims[1]; ++x[1])\r\n  for(x[0]=0; x[0]<dims[0]; ++x[0], ++n)\r\n  if(!!volume[n]) {\r\n   \r\n\r\n    for(var d=0; d<3; ++d) {\r\n      var t = [x[0], x[1], x[2]]\r\n        , u = [0,0,0]\r\n        , v = [0,0,0];\r\n      u[(d+1)%3] = 1;\r\n      v[(d+2)%3] = 1;\r\n      for(var s=0; s<2; ++s) {\r\n        t[d] = x[d] + s;\r\n       \r\n        var tmp = u;\r\n        u = v;\r\n        v = tmp;\r\n        var vertex_count = vertices.length;\r\n        vertices.push([t[0],           t[1],           t[2]          ]);\r\n        vertices.push([t[0]+u[0],      t[1]+u[1],      t[2]+u[2]     ]);\r\n        vertices.push([t[0]+u[0]+v[0], t[1]+u[1]+v[1], t[2]+u[2]+v[2]]);\r\n        vertices.push([t[0]     +v[0], t[1]     +v[1], t[2]     +v[2]]);\r\n        faces.push([vertex_count+0, vertex_count+1, vertex_count+2, vertex_count+3, volume[n]]);\r\n      }\r\n    }\r\n  }\r\n  return { vertices:vertices, faces:faces };\r\n}\r\n\r\nvar Voxel = function (lo, hi, fn) {\r\n  var dims = [hi[0]-lo[0], hi[1]-lo[1], hi[2]-lo[2]];\r\n  var data = new Array(dims[2] * dims[1] * dims[0]);\r\n\r\n  let n = 0;\r\n\r\n  for (var k = lo[2]; k < hi[2]; k++)\r\n    for (var j = lo[1]; j < hi[1]; j++)\r\n      for(var i = lo[0]; i < hi[0]; i++) {\r\n        data[n] =fn(i, j, k);\r\n        n++;\r\n      }\r\n\r\n  \r\n  return mesher(data, dims);\r\n    \r\n}\r\n\r\nvar Cube = function (lo, hi, fn) {\r\n  var dims = [hi[0]-lo[0], hi[1]-lo[1], hi[2]-lo[2]];\r\n  var data = new Array(dims[2] * dims[1] * dims[0]);\r\n\r\n  let n = 0;\r\n\r\n  for (var k = lo[2]; k < hi[2]; k++)\r\n    for (var j = lo[1]; j < hi[1]; j++)\r\n      for(var i = lo[0]; i < hi[0]; i++) {\r\n        data[n] =fn(i, j, k);\r\n        n++;\r\n      }\r\n\r\n  \r\n  return mesher2(data, dims);\r\n    \r\n}\r\n\r\nexport default {\r\n  build : Voxel,\r\n  buildCube : Cube,\r\n} \n\n\n// WEBPACK FOOTER //\n// ./src/lib/voxel.js","export default {\r\n    Orientations: {\r\n        UP: 1,\r\n        DOWN: 2,\r\n        LEFT: 3,\r\n        RIGHT: 4\r\n    },\r\n\r\n    Entities: {\r\n        PLAYER: 1,\r\n        FIRE: 2,\r\n        CHEST: 3,\r\n\r\n        DEATHKNIGHT:4,\r\n    },\r\n\r\n    BattleState: {\r\n        BEGIN: 1,\r\n        MAIN: 2,\r\n        END: 3,\r\n    }\r\n}\r\n\r\n// 나중에 숫자랑 다 정리하자. 지금은 필요한대로 추가\n\n\n// WEBPACK FOOTER //\n// ./src/share/gametypes.js","import voxel from '../lib/voxel';\r\nimport Entity from './entity';\r\nimport Transition from './transition';\r\nimport Types from '../share/gametypes';\r\n\r\nexport default class Character extends Entity{\r\n    constructor(id, kind) {\r\n        super(id, kind);\r\n        // position \r\n\r\n        // stat\r\n        \r\n        // position moving\r\n        this.nextGridX = -1;\r\n    \tthis.nextGridY = -1;\r\n        this.orientation = Types.Orientations.DOWN;\r\n\r\n        this.movement = new Transition();\r\n        this.path = null;\r\n        this.newDestination = null;\r\n    \tthis.adjacentTiles = {};\r\n\r\n        // animation speed\r\n        this.moveSpeed = 120;\r\n        this.walkSpeed = 100;\r\n        this.idleSpeed = 450;\r\n\r\n      \r\n        // combat \r\n\r\n        // build mesh\r\n        // 캐릭터는 이미지로부터 복셀을 빌드해서 가지고 있게 된다\r\n        \r\n\r\n    }\r\n\r\n    setSprite(sprite) {\r\n        this.sprite = sprite;\r\n        this.buildMesh();\r\n        this.isLoaded = true;\r\n    }\r\n\r\n    getFramePixelData() {\r\n        // 주어진 위치의 데이터를 복사해온다\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = this.sprite.width;\r\n        canvas.height = this.sprite.height;\r\n        \r\n        const context = canvas.getContext('2d');\r\n        context.translate(0, this.sprite.height);\r\n        context.scale(1, -1);\r\n\r\n        context.drawImage(this.sprite, 0, 0);\r\n        // 프레임 데이터를 가져온다\r\n        // 원래는 json 으로 가져와야 하는데.. 일단 이부분은 하드코딩해서 진행\r\n        const frameWidth = 32;\r\n        const frameheight = 32;\r\n        const data = context.getImageData(0, 0, frameWidth, frameheight);\r\n\r\n        return data;\r\n    }\r\n\r\n    buildMesh() {\r\n        if (this.sprite) {\r\n            const data = this.getFramePixelData();\r\n            const result = voxel.build([0,0,0], [data.width,data.height,1], function(x, y, z) {\r\n                const p = (x + y*data.width)*4;\r\n                const r = data.data[p + 0];\r\n                const g = data.data[p + 1];\r\n                const b = data.data[p + 2];\r\n                const a = data.data[p + 3];\r\n                \r\n                return a === 255 ? (r << 16) + (g << 8) + b : 0;\r\n            });\r\n\r\n            const geometry = new THREE.Geometry();\r\n            for(let i=0; i<result.vertices.length; ++i) {\r\n                const q = result.vertices[i];\r\n                geometry.vertices.push(new THREE.Vector3(q[0], q[1], q[2]));\r\n            }\r\n            for(let i=0; i<result.faces.length; ++i) {\r\n                const q = result.faces[i];\r\n                const color = new THREE.Color(q[4]);\r\n\r\n                const f1 = new THREE.Face3(q[0], q[1], q[2]);\r\n                f1.color = color;\r\n                f1.vertexColors = [color, color,color];\r\n                geometry.faces.push(f1);\r\n\r\n                const f2 = new THREE.Face3(q[2], q[3], q[0]);\r\n                f2.color = color;\r\n                f2.vertexColors = [color, color,color];\r\n                geometry.faces.push(f2);\r\n            }\r\n\r\n            geometry.computeFaceNormals();\r\n\r\n            geometry.verticesNeedUpdate = true;\r\n            geometry.elementsNeedUpdate = true;\r\n            geometry.normalsNeedUpdate = true;\r\n            \r\n            geometry.computeBoundingBox();\r\n\r\n            const material\t= new THREE.MeshLambertMaterial({\r\n                vertexColors: true\r\n            });\r\n\r\n            const mesh\t= new THREE.Mesh( geometry, material );\r\n            mesh.doubleSided = false;\r\n            mesh.castShadow = true;\r\n\r\n            // 바운딩 박스의 중앙으로 좌표를 옮긴다\r\n            const min = geometry.boundingBox.min;\r\n            const max = geometry.boundingBox.max;\r\n\r\n            // TODO : 오프셋도 나중에 데이터와 시켜야 한다\r\n            this.offset = {\r\n                x: -16,\r\n                y: -min.y,\r\n                z: 0,\r\n            }\r\n            \r\n            this.mesh = mesh;\r\n\r\n            // 쉐터링 객체를 만든다\r\n            const cubeData = voxel.buildCube([0,0,0], [data.width,data.height,1], function(x, y, z) {\r\n                const p = (x + y*data.width)*4;\r\n                const r = data.data[p + 0];\r\n                const g = data.data[p + 1];\r\n                const b = data.data[p + 2];\r\n                const a = data.data[p + 3];\r\n                \r\n                return a === 255 ? (r << 16) + (g << 8) + b : 0;\r\n            });\r\n\r\n            const shatters = [];\r\n            const _material = material.clone();\r\n            for (let j = 0; j < (cubeData.vertices.length/24); ++j) {\r\n                \r\n                const result = cubeData;\r\n                const voffset = j*24;\r\n                const geometry = new THREE.Geometry(); \r\n                for(let i=0; i<24; ++i) {\r\n                   \r\n                    const q = result.vertices[i + voffset];\r\n                    geometry.vertices.push(new THREE.Vector3(q[0], q[1], q[2]));\r\n                }\r\n                for(let i=0; i< 6; ++i) {\r\n                    const offset = j*6;\r\n                    const q = result.faces[i + offset];\r\n                    const color = new THREE.Color(q[4]);\r\n    \r\n                    const f1 = new THREE.Face3(q[0]-voffset, q[1]-voffset, q[2]-voffset);\r\n                    f1.color = color;\r\n                    f1.vertexColors = [color, color,color];\r\n                    geometry.faces.push(f1);\r\n    \r\n                    const f2 = new THREE.Face3(q[2]-voffset, q[3]-voffset, q[0]-voffset);\r\n                    f2.color = color;\r\n                    f2.vertexColors = [color, color,color];\r\n                    geometry.faces.push(f2);\r\n\r\n                    \r\n                }\r\n                geometry.computeFaceNormals();\r\n                geometry.computeBoundingBox();\r\n                \r\n                const mesh\t= new THREE.Mesh( geometry, _material );\r\n                mesh.castShadow = true;\r\n                shatters.push(mesh);\r\n\r\n                // 포지션을 반경 5 에 적절히 흩어놓자\r\n                const v = Math.random() * Math.PI * 2;\r\n                const r = Math.random() * 12;\r\n                mesh.position.set(r * Math.cos(v), -geometry.boundingBox.min.y,  r * Math.sin(v));\r\n                this.shatters = shatters;\r\n            }\r\n\r\n            \r\n        }\r\n    }\r\n\r\n    requestPathfindingTo(x, y) {\r\n        if(this.request_path_callback) {\r\n            return this.request_path_callback(x, y);\r\n        } else {\r\n            return [];  \r\n        }\r\n    }\r\n\r\n    onRequestPath(callback) {\r\n        this.request_path_callback = callback;\r\n    }\r\n\r\n    onStartPathing(callback) {\r\n        this.start_pathing_callback = callback;\r\n    }\r\n\r\n    onStopPathing(callback) {\r\n        this.stop_pathing_callback = callback;\r\n    }\r\n\r\n    onBeforeStep(callback) {\r\n        this.before_step_callback = callback;\r\n    }\r\n\r\n    onStep(callback) {\r\n        this.step_callback = callback;\r\n    }\r\n\r\n    isMoving() {\r\n        return !(this.path === null);\r\n    }\r\n\r\n    hasMoved() {\r\n        if(this.hasmoved_callback) {\r\n            this.hasmoved_callback(this);\r\n        }\r\n    }\r\n\r\n    hasNextStep() {\r\n        return (this.path.length - 1 > this.step);\r\n    }\r\n\r\n    hasChangedItsPath() {\r\n        return !(this.newDestination === null);\r\n    }\r\n\r\n    setOrientation(orientation) {\r\n        if(orientation) {\r\n            this.orientation = orientation;\r\n        }\r\n    }\r\n\r\n    idle(orientation) {\r\n        this.setOrientation(orientation);\r\n        //this.animate(\"idle\", this.idleSpeed);\r\n    }\r\n\r\n    walk(orientation) {\r\n        this.setOrientation(orientation);\r\n        //this.animate(\"walk\", this.walkSpeed);\r\n    }\r\n\r\n    go(x, y) {\r\n        if(this.followingMode) {\r\n            this.followingMode = false;\r\n            this.target = null;\r\n        }\r\n        this.moveTo(x, y);\r\n    }\r\n\r\n    follow(entity) {\r\n        if(entity) {\r\n            this.followingMode = true;\r\n            this.moveTo(entity.gridX, entity.gridY);\r\n        }\r\n    }\r\n\r\n    moveTo(x, y) {\r\n        this.destination = { gridX: x, gridY: y };\r\n\r\n        if(this.isMoving()) {\r\n            this.continueTo(x, y);\r\n        } else {\r\n            \r\n            const path = this.requestPathfindingTo(x, y);\r\n            this.followPath(path);\r\n        }\r\n    }\r\n\r\n    stop() {\r\n        if(this.isMoving()) {\r\n            this.interrupted = true;\r\n        }\r\n    }\r\n\r\n    continueTo(x, y) {\r\n        this.newDestination = { x: x, y: y };\r\n    }\r\n\r\n    updateMovement() {\r\n        const p = this.path;\r\n        const i = this.step;\r\n    \r\n        if(p[i][0] < p[i-1][0]) {\r\n            this.walk(Types.Orientations.LEFT);\r\n        }\r\n        if(p[i][0] > p[i-1][0]) {\r\n            this.walk(Types.Orientations.RIGHT);\r\n        }\r\n        if(p[i][1] < p[i-1][1]) {\r\n            this.walk(Types.Orientations.UP);\r\n        }\r\n        if(p[i][1] > p[i-1][1]) {\r\n            this.walk(Types.Orientations.DOWN);\r\n        }\r\n    }\r\n\r\n    followPath(path) {\r\n        if(path.length > 1) { // Length of 1 means the player has clicked on himself\r\n            this.path = path;\r\n            this.step = 0;\r\n\r\n            if(this.followingMode) {\r\n                // 오브젝트를 향해 갈때는 제일 마지막 위치가 해당 오브젝트가 있는 위치이기 직전에서 멈추도록 한다\r\n                path.pop();\r\n            }\r\n        \r\n            if(this.start_pathing_callback) {\r\n                this.start_pathing_callback(path);\r\n            }\r\n            this.nextStep();\r\n        }\r\n    }\r\n\r\n    nextStep() {\r\n        let stop = false;\r\n        \r\n        if(this.isMoving()) {\r\n            if(this.before_step_callback) {\r\n                this.before_step_callback();\r\n            }\r\n        \r\n            this.updatePositionOnGrid();\r\n           \r\n            if(this.interrupted) { // if Character.stop() has been called\r\n                stop = true;\r\n                this.interrupted = false;\r\n            } \r\n            else {\r\n                if(this.hasNextStep()) {\r\n                    this.nextGridX = this.path[this.step+1][0];\r\n                    this.nextGridY = this.path[this.step+1][1];\r\n                }\r\n        \r\n                if(this.step_callback) {\r\n                    this.step_callback();\r\n                }\r\n            \r\n                if(this.hasChangedItsPath()) {\r\n                    const x = this.newDestination.x;\r\n                    const y = this.newDestination.y;\r\n                    const path = this.requestPathfindingTo(x, y);\r\n            \r\n                    this.newDestination = null;\r\n                    if(path.length < 2) {\r\n                        stop = true;\r\n                    }\r\n                    else {\r\n                        this.followPath(path);\r\n                    }\r\n                }\r\n                else if(this.hasNextStep()) {\r\n                    this.step += 1;\r\n                    this.updateMovement();\r\n                }\r\n                else {\r\n                    stop = true;\r\n                }\r\n            }\r\n        \r\n            if(stop) { // Path is complete or has been interrupted\r\n                this.path = null;\r\n                this.idle();\r\n            \r\n                if(this.stop_pathing_callback) {\r\n                    this.stop_pathing_callback(this.gridX, this.gridY);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    updatePositionOnGrid() {\r\n        this.setGridPosition(this.path[this.step][0], this.path[this.step][1]);\r\n    }\r\n\r\n    setTarget(target) {\r\n        if(this.target !== target) { // If it's not already set as the target\r\n            this.target = target;\r\n        }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js/character.js"],"sourceRoot":""}